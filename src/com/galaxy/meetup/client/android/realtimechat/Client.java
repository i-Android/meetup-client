/**
 * galaxy inc.
 * meetup client for android
 */
package com.galaxy.meetup.client.android.realtimechat;

import java.io.IOException;
import java.io.ObjectStreamException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import com.galaxy.meetup.client.android.Version;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageLite;
import com.google.protobuf.GeneratedMessageLite.Builder;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageLiteOrBuilder;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnmodifiableLazyStringList;

/**
 * 
 * @author sihai
 *
 */
public class Client {

	//==================================================================================================================
    //									Inner class
    //==================================================================================================================
	
	//===================================================================================================
	//								NewConversation
	//===================================================================================================
	public static interface NewConversationOrBuilder extends MessageLiteOrBuilder {

	    public abstract ClientConversation getClientConversation();
	
	    public abstract String getSenderId();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasClientConversation();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class NewConversation extends GeneratedMessageLite implements NewConversationOrBuilder {
	
		private static final NewConversation defaultInstance;
	    private int bitField0_;
	    private ClientConversation clientConversation_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object senderId_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        NewConversation newconversation = new NewConversation();
	        defaultInstance = newconversation;
	        newconversation.clientConversation_ = ClientConversation.getDefaultInstance();
	        newconversation.senderId_ = "";
	        newconversation.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private NewConversation()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    NewConversation(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static NewConversation getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(NewConversation newconversation)
	    {
	        return new Builder().mergeFrom(newconversation);
	    }
	
	    public final ClientConversation getClientConversation()
	    {
	        return clientConversation_;
	    }
	
	    public final NewConversation getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeMessageSize(1, clientConversation_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasClientConversation()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeMessage(1, clientConversation_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getSenderIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, stubbyInfo_);
	    }
	    
	    //===========================================
	    //				Builder
	    //===========================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements NewConversationOrBuilder {
	
	    	private int bitField0_;
	        private ClientConversation clientConversation_;
	        private Object senderId_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            clientConversation_ = ClientConversation.getDefaultInstance();
	            senderId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public NewConversation.Builder clone()
	        {
	            return (new NewConversation.Builder()).mergeFrom(buildPartial());
	        }
	
	        public NewConversation.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    ClientConversation.Builder builder1 = ClientConversation.newBuilder();
	                    if(hasClientConversation())
	                        builder1.mergeFrom(getClientConversation());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setClientConversation(builder1.buildPartial());
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final NewConversation build()
	        {
	            NewConversation newconversation = buildPartial();
	            if(!newconversation.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("newconversation"));
	            else
	                return newconversation;
	        }
	
	        public final NewConversation buildPartial()
	        {
	            NewConversation newconversation = new NewConversation(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            newconversation.clientConversation_ = clientConversation_;
	            if((i & 2) == 2)
	                k |= 2;
	            newconversation.senderId_ = senderId_;
	            if((i & 4) == 4)
	                k |= 4;
	            newconversation.stubbyInfo_ = stubbyInfo_;
	            newconversation.bitField0_ = k;
	            return newconversation;
	        }
	
	        public final NewConversation.Builder clear()
	        {
	            super.clear();
	            clientConversation_ = ClientConversation.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -3 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final NewConversation.Builder clearClientConversation()
	        {
	            clientConversation_ = ClientConversation.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final NewConversation.Builder clearSenderId()
	        {
	            bitField0_ = -3 & bitField0_;
	            senderId_ = NewConversation.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final NewConversation.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation getClientConversation()
	        {
	            return clientConversation_;
	        }
	
	        public final NewConversation getDefaultInstanceForType()
	        {
	            return NewConversation.getDefaultInstance();
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasClientConversation()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((NewConversation)generatedmessagelite);
	        }
	
	        public final NewConversation.Builder mergeFrom(NewConversation newconversation)
	        {
	            if(newconversation == NewConversation.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(newconversation.hasClientConversation())
	            {
	                ClientConversation clientconversation = newconversation.getClientConversation();
	                if((1 & bitField0_) == 1 && clientConversation_ != ClientConversation.getDefaultInstance())
	                    clientConversation_ = ClientConversation.newBuilder(clientConversation_).mergeFrom(clientconversation).buildPartial();
	                else
	                    clientConversation_ = clientconversation;
	                bitField0_ = 1 | bitField0_;
	            }
	            if(newconversation.hasSenderId())
	                setSenderId(newconversation.getSenderId());
	            if(newconversation.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = newconversation.getStubbyInfo();
	                if((4 & bitField0_) == 4 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	            }
	            return this;
	        }
	
	        public final NewConversation.Builder setClientConversation(ClientConversation.Builder builder)
	        {
	            clientConversation_ = builder.build();
	            bitField0_ = 1 | bitField0_;
	            return this;
	        }
	
	        public final NewConversation.Builder setClientConversation(ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                clientConversation_ = clientconversation;
	                bitField0_ = 1 | bitField0_;
	                return this;
	            }
	        }
	
	        public final NewConversation.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final NewConversation.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final NewConversation.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//===================================================================================================
	//								BunchServerStateUpdate
	//===================================================================================================
	public static interface BunchServerStateUpdateOrBuilder extends MessageLiteOrBuilder {

	    public abstract ChatMessage getChatMessage();
	
	    public abstract BunchServerStateUpdate.EventMetadata getEventMetadata();
	
	    public abstract GroupConversationRename getGroupConversationRename();
	
	    public abstract InvalidateLocalCache getInvalidateLocalCache();
	
	    public abstract MembershipChange getMembershipChange();
	
	    public abstract Migration getMigration();
	
	    public abstract NewConversation getNewConversation();
	
	    public abstract Presence getPresence();
	
	    public abstract Receipt getReceipt();
	
	    public abstract TileEvent getTileEvent();
	
	    public abstract Typing getTyping();
	
	    public abstract boolean hasChatMessage();
	
	    public abstract boolean hasEventMetadata();
	
	    public abstract boolean hasGroupConversationRename();
	
	    public abstract boolean hasInvalidateLocalCache();
	
	    public abstract boolean hasMembershipChange();
	
	    public abstract boolean hasMigration();
	
	    public abstract boolean hasNewConversation();
	
	    public abstract boolean hasPresence();
	
	    public abstract boolean hasReceipt();
	
	    public abstract boolean hasTileEvent();
	
	    public abstract boolean hasTyping();
	}
	
	public static final class BunchServerStateUpdate extends GeneratedMessageLite implements BunchServerStateUpdateOrBuilder {
	
		private static final BunchServerStateUpdate defaultInstance;
	    private int bitField0_;
	    private ChatMessage chatMessage_;
	    private EventMetadata eventMetadata_;
	    private GroupConversationRename groupConversationRename_;
	    private InvalidateLocalCache invalidateLocalCache_;
	    private MembershipChange membershipChange_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Migration migration_;
	    private NewConversation newConversation_;
	    private Presence presence_;
	    private Receipt receipt_;
	    private TileEvent tileEvent_;
	    private Typing typing_;

	    static 
	    {
	        BunchServerStateUpdate bunchserverstateupdate = new BunchServerStateUpdate();
	        defaultInstance = bunchserverstateupdate;
	        bunchserverstateupdate.chatMessage_ = ChatMessage.getDefaultInstance();
	        bunchserverstateupdate.presence_ = Presence.getDefaultInstance();
	        bunchserverstateupdate.typing_ = Typing.getDefaultInstance();
	        bunchserverstateupdate.receipt_ = Receipt.getDefaultInstance();
	        bunchserverstateupdate.membershipChange_ = MembershipChange.getDefaultInstance();
	        bunchserverstateupdate.groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	        bunchserverstateupdate.tileEvent_ = TileEvent.getDefaultInstance();
	        bunchserverstateupdate.migration_ = Migration.getDefaultInstance();
	        bunchserverstateupdate.invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	        bunchserverstateupdate.newConversation_ = NewConversation.getDefaultInstance();
	        bunchserverstateupdate.eventMetadata_ = EventMetadata.getDefaultInstance();
	    }

	    private BunchServerStateUpdate()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    BunchServerStateUpdate(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static BunchServerStateUpdate getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public final ChatMessage getChatMessage()
	    {
	        return chatMessage_;
	    }
	
	    public final BunchServerStateUpdate getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final EventMetadata getEventMetadata()
	    {
	        return eventMetadata_;
	    }
	
	    public final GroupConversationRename getGroupConversationRename()
	    {
	        return groupConversationRename_;
	    }
	
	    public final InvalidateLocalCache getInvalidateLocalCache()
	    {
	        return invalidateLocalCache_;
	    }
	
	    public final MembershipChange getMembershipChange()
	    {
	        return membershipChange_;
	    }
	
	    public final Migration getMigration()
	    {
	        return migration_;
	    }
	
	    public final NewConversation getNewConversation()
	    {
	        return newConversation_;
	    }
	
	    public final Presence getPresence()
	    {
	        return presence_;
	    }
	
	    public final Receipt getReceipt()
	    {
	        return receipt_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeMessageSize(1, chatMessage_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(2, presence_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, typing_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(4, receipt_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeMessageSize(5, membershipChange_);
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeMessageSize(6, groupConversationRename_);
	            if((0x40 & bitField0_) == 64)
	                k += CodedOutputStream.computeMessageSize(7, tileEvent_);
	            if((0x80 & bitField0_) == 128)
	                k += CodedOutputStream.computeMessageSize(8, migration_);
	            if((0x100 & bitField0_) == 256)
	                k += CodedOutputStream.computeMessageSize(9, invalidateLocalCache_);
	            if((0x200 & bitField0_) == 512)
	                k += CodedOutputStream.computeMessageSize(10, newConversation_);
	            if((0x400 & bitField0_) == 1024)
	                k += CodedOutputStream.computeMessageSize(11, eventMetadata_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final TileEvent getTileEvent()
	    {
	        return tileEvent_;
	    }
	
	    public final Typing getTyping()
	    {
	        return typing_;
	    }
	
	    public final boolean hasChatMessage()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventMetadata()
	    {
	        boolean flag;
	        if((0x400 & bitField0_) == 1024)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasGroupConversationRename()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInvalidateLocalCache()
	    {
	        boolean flag;
	        if((0x100 & bitField0_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMembershipChange()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMigration()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasNewConversation()
	    {
	        boolean flag;
	        if((0x200 & bitField0_) == 512)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPresence()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReceipt()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileEvent()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTyping()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeMessage(1, chatMessage_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(2, presence_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, typing_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(4, receipt_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(5, membershipChange_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeMessage(6, groupConversationRename_);
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeMessage(7, tileEvent_);
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeMessage(8, migration_);
	        if((0x100 & bitField0_) == 256)
	            codedoutputstream.writeMessage(9, invalidateLocalCache_);
	        if((0x200 & bitField0_) == 512)
	            codedoutputstream.writeMessage(10, newConversation_);
	        if((0x400 & bitField0_) == 1024)
	            codedoutputstream.writeMessage(11, eventMetadata_);
	    }
	    
	    //========================================================
	    //						EventMetadata
	    //========================================================
	    public static interface EventMetadataOrBuilder extends MessageLiteOrBuilder {

	        public abstract String getConversationId();
	
	        public abstract long getEventTimestamp();
	
	        public abstract boolean hasConversationId();
	
	        public abstract boolean hasEventTimestamp();
	    }
	    
	    public static final class EventMetadata extends GeneratedMessageLite implements BunchServerStateUpdate.EventMetadataOrBuilder {
	
	    	private static final BunchServerStateUpdate.EventMetadata defaultInstance;
	        private int bitField0_;
	        private Object conversationId_;
	        private long eventTimestamp_;
	        private byte memoizedIsInitialized;
	        private int memoizedSerializedSize;

	        static 
	        {
	            BunchServerStateUpdate.EventMetadata eventmetadata = new BunchServerStateUpdate.EventMetadata();
	            defaultInstance = eventmetadata;
	            eventmetadata.conversationId_ = "";
	            eventmetadata.eventTimestamp_ = 0L;
	        }

	        private EventMetadata()
	        {
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }

	        EventMetadata(Builder builder)
	        {
	            super();
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }
	        
	        private ByteString getConversationIdBytes()
	        {
	            Object obj = conversationId_;
	            ByteString bytestring;
	            if(obj instanceof String)
	            {
	                bytestring = ByteString.copyFromUtf8((String)obj);
	                conversationId_ = bytestring;
	            } else
	            {
	                bytestring = (ByteString)obj;
	            }
	            return bytestring;
	        }
	
	        public static BunchServerStateUpdate.EventMetadata getDefaultInstance()
	        {
	            return defaultInstance;
	        }
	
	        public static Builder newBuilder()
	        {
	            return new Builder();
	        }
	
	        public static Builder newBuilder(BunchServerStateUpdate.EventMetadata eventmetadata)
	        {
	            return new Builder().mergeFrom(eventmetadata);
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s1;
	            if(obj instanceof String)
	            {
	                s1 = (String)obj;
	            } else
	            {
	                ByteString bytestring = (ByteString)obj;
	                String s = bytestring.toStringUtf8();
	                if(Internal.isValidUtf8(bytestring))
	                    conversationId_ = s;
	                s1 = s;
	            }
	            return s1;
	        }
	
	        public final BunchServerStateUpdate.EventMetadata getDefaultInstanceForType()
	        {
	            return defaultInstance;
	        }
	
	        public final long getEventTimestamp()
	        {
	            return eventTimestamp_;
	        }
	
	        public final int getSerializedSize()
	        {
	            int i = memoizedSerializedSize;
	            int l;
	            if(i != -1)
	            {
	                l = i;
	            } else
	            {
	                int j = 1 & bitField0_;
	                int k = 0;
	                if(j == 1)
	                    k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	                if((2 & bitField0_) == 2)
	                    k += CodedOutputStream.computeUInt64Size(2, eventTimestamp_);
	                memoizedSerializedSize = k;
	                l = k;
	            }
	            return l;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            boolean flag = true;
	            byte byte0 = memoizedIsInitialized;
	            if(byte0 != -1)
	            {
	                if(byte0 != 1)
	                    flag = false;
	            } else
	            {
	                memoizedIsInitialized = 1;
	            }
	            return flag;
	        }
	
	        public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	        {
	            return new Builder();
	        }
	
	        public final com.google.protobuf.MessageLite.Builder toBuilder()
	        {
	            return new Builder().mergeFrom(this);
	        }
	
	        protected final Object writeReplace()
	            throws ObjectStreamException
	        {
	            return super.writeReplace();
	        }
	
	        public final void writeTo(CodedOutputStream codedoutputstream)
	            throws IOException
	        {
	            getSerializedSize();
	            if((1 & bitField0_) == 1)
	                codedoutputstream.writeBytes(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                codedoutputstream.writeUInt64(2, eventTimestamp_);
	        }
	        
	        //======================================
	        //				Builder
	        //======================================
	        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements BunchServerStateUpdate.EventMetadataOrBuilder {
	        	
	        	private int bitField0_;
		        private Object conversationId_;
		        private long eventTimestamp_;

		        private Builder()
		        {
		            conversationId_ = "";
		        }
		        
		        public BunchServerStateUpdate.EventMetadata.Builder clone()
		        {
		            return (new BunchServerStateUpdate.EventMetadata.Builder()).mergeFrom(buildPartial());
		        }
	
		        public BunchServerStateUpdate.EventMetadata.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
		            throws IOException
		        {
		            do
		            {
		                int i = codedinputstream.readTag();
		                switch(i)
		                {
		                default:
		                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
		                        continue;
		                    // fall through
	
		                case 0: // '\0'
		                    return this;
	
		                case 10: // '\n'
		                    bitField0_ = 1 | bitField0_;
		                    conversationId_ = codedinputstream.readBytes();
		                    break;
	
		                case 16: // '\020'
		                    bitField0_ = 2 | bitField0_;
		                    eventTimestamp_ = codedinputstream.readUInt64();
		                    break;
		                }
		            } while(true);
		        }
	
		        public final BunchServerStateUpdate.EventMetadata build()
		        {
		            BunchServerStateUpdate.EventMetadata eventmetadata = buildPartial();
		            if(!eventmetadata.isInitialized())
		                throw new UninitializedMessageException(Arrays.asList("eventmetadata"));
		            else
		                return eventmetadata;
		        }
	
		        public final BunchServerStateUpdate.EventMetadata buildPartial()
		        {
		            BunchServerStateUpdate.EventMetadata eventmetadata = new BunchServerStateUpdate.EventMetadata(this);
		            int i = bitField0_;
		            int j = i & 1;
		            int k = 0;
		            if(j == 1)
		                k = 1;
		            eventmetadata.conversationId_ = conversationId_;
		            if((i & 2) == 2)
		                k |= 2;
		            eventmetadata.eventTimestamp_ = eventTimestamp_;
		            eventmetadata.bitField0_ = k;
		            return eventmetadata;
		        }
	
		        public final BunchServerStateUpdate.EventMetadata.Builder clear()
		        {
		            super.clear();
		            conversationId_ = "";
		            bitField0_ = -2 & bitField0_;
		            eventTimestamp_ = 0L;
		            bitField0_ = -3 & bitField0_;
		            return this;
		        }
	
		        public final BunchServerStateUpdate.EventMetadata.Builder clearConversationId()
		        {
		            bitField0_ = -2 & bitField0_;
		            conversationId_ = BunchServerStateUpdate.EventMetadata.getDefaultInstance().getConversationId();
		            return this;
		        }
	
		        public final BunchServerStateUpdate.EventMetadata.Builder clearEventTimestamp()
		        {
		            bitField0_ = -3 & bitField0_;
		            eventTimestamp_ = 0L;
		            return this;
		        }
	
		        public final String getConversationId()
		        {
		            Object obj = conversationId_;
		            String s;
		            if(!(obj instanceof String))
		            {
		                s = ((ByteString)obj).toStringUtf8();
		                conversationId_ = s;
		            } else
		            {
		                s = (String)obj;
		            }
		            return s;
		        }
	
		        public final BunchServerStateUpdate.EventMetadata getDefaultInstanceForType()
		        {
		            return BunchServerStateUpdate.EventMetadata.getDefaultInstance();
		        }
	
		        public final long getEventTimestamp()
		        {
		            return eventTimestamp_;
		        }
	
		        public final boolean hasConversationId()
		        {
		            boolean flag = true;
		            if((1 & bitField0_) != 1)
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasEventTimestamp()
		        {
		            boolean flag;
		            if((2 & bitField0_) == 2)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean isInitialized()
		        {
		            return true;
		        }
	
		        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
		        {
		            return mergeFrom((BunchServerStateUpdate.EventMetadata)generatedmessagelite);
		        }
	
		        public final BunchServerStateUpdate.EventMetadata.Builder mergeFrom(BunchServerStateUpdate.EventMetadata eventmetadata)
		        {
		            if(eventmetadata == BunchServerStateUpdate.EventMetadata.getDefaultInstance()) {
		            	return this;
		            }
		            
		            if(eventmetadata.hasConversationId())
		                setConversationId(eventmetadata.getConversationId());
		            if(eventmetadata.hasEventTimestamp())
		                setEventTimestamp(eventmetadata.getEventTimestamp());
		            return this;
		        }
	
		        public final BunchServerStateUpdate.EventMetadata.Builder setConversationId(String s)
		        {
		            if(s == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                bitField0_ = 1 | bitField0_;
		                conversationId_ = s;
		                return this;
		            }
		        }
	
		        public final BunchServerStateUpdate.EventMetadata.Builder setEventTimestamp(long l)
		        {
		            bitField0_ = 2 | bitField0_;
		            eventTimestamp_ = l;
		            return this;
		        }
		    }
	    }
	    
	    //========================================================
	    //						Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements BunchServerStateUpdateOrBuilder {
	
	    	private int bitField0_;
	        private ChatMessage chatMessage_;
	        private BunchServerStateUpdate.EventMetadata eventMetadata_;
	        private GroupConversationRename groupConversationRename_;
	        private InvalidateLocalCache invalidateLocalCache_;
	        private MembershipChange membershipChange_;
	        private Migration migration_;
	        private NewConversation newConversation_;
	        private Presence presence_;
	        private Receipt receipt_;
	        private TileEvent tileEvent_;
	        private Typing typing_;

	        private Builder()
	        {
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            presence_ = Presence.getDefaultInstance();
	            typing_ = Typing.getDefaultInstance();
	            receipt_ = Receipt.getDefaultInstance();
	            membershipChange_ = MembershipChange.getDefaultInstance();
	            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	            tileEvent_ = TileEvent.getDefaultInstance();
	            migration_ = Migration.getDefaultInstance();
	            invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	            newConversation_ = NewConversation.getDefaultInstance();
	            eventMetadata_ = BunchServerStateUpdate.EventMetadata.getDefaultInstance();
	        }
	    
	        public BunchServerStateUpdate.Builder clone()
	        {
	            return (new BunchServerStateUpdate.Builder()).mergeFrom(buildPartial());
	        }
	
	        public BunchServerStateUpdate.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    ChatMessage.Builder builder10 = ChatMessage.newBuilder();
	                    if(hasChatMessage())
	                        builder10.mergeFrom(getChatMessage());
	                    codedinputstream.readMessage(builder10, extensionregistrylite);
	                    setChatMessage(builder10.buildPartial());
	                    break;
	
	                case 18: // '\022'
	                    Presence.Builder builder9 = Presence.newBuilder();
	                    if(hasPresence())
	                        builder9.mergeFrom(getPresence());
	                    codedinputstream.readMessage(builder9, extensionregistrylite);
	                    setPresence(builder9.buildPartial());
	                    break;
	
	                case 26: // '\032'
	                    Typing.Builder builder8 = Typing.newBuilder();
	                    if(hasTyping())
	                        builder8.mergeFrom(getTyping());
	                    codedinputstream.readMessage(builder8, extensionregistrylite);
	                    setTyping(builder8.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    Receipt.Builder builder7 = Receipt.newBuilder();
	                    if(hasReceipt())
	                        builder7.mergeFrom(getReceipt());
	                    codedinputstream.readMessage(builder7, extensionregistrylite);
	                    setReceipt(builder7.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    MembershipChange.Builder builder6 = MembershipChange.newBuilder();
	                    if(hasMembershipChange())
	                        builder6.mergeFrom(getMembershipChange());
	                    codedinputstream.readMessage(builder6, extensionregistrylite);
	                    setMembershipChange(builder6.buildPartial());
	                    break;
	
	                case 50: // '2'
	                    GroupConversationRename.Builder builder5 = GroupConversationRename.newBuilder();
	                    if(hasGroupConversationRename())
	                        builder5.mergeFrom(getGroupConversationRename());
	                    codedinputstream.readMessage(builder5, extensionregistrylite);
	                    setGroupConversationRename(builder5.buildPartial());
	                    break;
	
	                case 58: // ':'
	                    TileEvent.Builder builder4 = TileEvent.newBuilder();
	                    if(hasTileEvent())
	                        builder4.mergeFrom(getTileEvent());
	                    codedinputstream.readMessage(builder4, extensionregistrylite);
	                    setTileEvent(builder4.buildPartial());
	                    break;
	
	                case 66: // 'B'
	                    Migration.Builder builder3 = Migration.newBuilder();
	                    if(hasMigration())
	                        builder3.mergeFrom(getMigration());
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    setMigration(builder3.buildPartial());
	                    break;
	
	                case 74: // 'J'
	                    InvalidateLocalCache.Builder builder2 = InvalidateLocalCache.newBuilder();
	                    if(hasInvalidateLocalCache())
	                        builder2.mergeFrom(getInvalidateLocalCache());
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    setInvalidateLocalCache(builder2.buildPartial());
	                    break;
	
	                case 82: // 'R'
	                    NewConversation.Builder builder1 = NewConversation.newBuilder();
	                    if(hasNewConversation())
	                        builder1.mergeFrom(getNewConversation());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setNewConversation(builder1.buildPartial());
	                    break;
	
	                case 90: // 'Z'
	                    BunchServerStateUpdate.EventMetadata.Builder builder = BunchServerStateUpdate.EventMetadata.newBuilder();
	                    if(hasEventMetadata())
	                        builder.mergeFrom(getEventMetadata());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setEventMetadata(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final BunchServerStateUpdate build()
	        {
	            BunchServerStateUpdate bunchserverstateupdate = buildPartial();
	            if(!bunchserverstateupdate.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("bunchserverstateupdate"));
	            else
	                return bunchserverstateupdate;
	        }
	
	        public final BunchServerStateUpdate buildPartial()
	        {
	            BunchServerStateUpdate bunchserverstateupdate = new BunchServerStateUpdate(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            bunchserverstateupdate.chatMessage_ = chatMessage_;
	            if((i & 2) == 2)
	                k |= 2;
	            bunchserverstateupdate.presence_ = presence_;
	            if((i & 4) == 4)
	                k |= 4;
	            bunchserverstateupdate.typing_ = typing_;
	            if((i & 8) == 8)
	                k |= 8;
	            bunchserverstateupdate.receipt_ = receipt_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            bunchserverstateupdate.membershipChange_ = membershipChange_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            bunchserverstateupdate.groupConversationRename_ = groupConversationRename_;
	            if((i & 0x40) == 64)
	                k |= 0x40;
	            bunchserverstateupdate.tileEvent_ = tileEvent_;
	            if((i & 0x80) == 128)
	                k |= 0x80;
	            bunchserverstateupdate.migration_ = migration_;
	            if((i & 0x100) == 256)
	                k |= 0x100;
	            bunchserverstateupdate.invalidateLocalCache_ = invalidateLocalCache_;
	            if((i & 0x200) == 512)
	                k |= 0x200;
	            bunchserverstateupdate.newConversation_ = newConversation_;
	            if((i & 0x400) == 1024)
	                k |= 0x400;
	            bunchserverstateupdate.eventMetadata_ = eventMetadata_;
	            bunchserverstateupdate.bitField0_ = k;
	            return bunchserverstateupdate;
	        }
	
	        public final BunchServerStateUpdate.Builder clear()
	        {
	            super.clear();
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            presence_ = Presence.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            typing_ = Typing.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            receipt_ = Receipt.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            membershipChange_ = MembershipChange.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            tileEvent_ = TileEvent.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            migration_ = Migration.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            newConversation_ = NewConversation.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            eventMetadata_ = BunchServerStateUpdate.EventMetadata.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearChatMessage()
	        {
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearEventMetadata()
	        {
	            eventMetadata_ = BunchServerStateUpdate.EventMetadata.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearGroupConversationRename()
	        {
	            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearInvalidateLocalCache()
	        {
	            invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearMembershipChange()
	        {
	            membershipChange_ = MembershipChange.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearMigration()
	        {
	            migration_ = Migration.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearNewConversation()
	        {
	            newConversation_ = NewConversation.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearPresence()
	        {
	            presence_ = Presence.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearReceipt()
	        {
	            receipt_ = Receipt.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearTileEvent()
	        {
	            tileEvent_ = TileEvent.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder clearTyping()
	        {
	            typing_ = Typing.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ChatMessage getChatMessage()
	        {
	            return chatMessage_;
	        }
	
	        public final BunchServerStateUpdate getDefaultInstanceForType()
	        {
	            return BunchServerStateUpdate.getDefaultInstance();
	        }
	
	        public final BunchServerStateUpdate.EventMetadata getEventMetadata()
	        {
	            return eventMetadata_;
	        }
	
	        public final GroupConversationRename getGroupConversationRename()
	        {
	            return groupConversationRename_;
	        }
	
	        public final InvalidateLocalCache getInvalidateLocalCache()
	        {
	            return invalidateLocalCache_;
	        }
	
	        public final MembershipChange getMembershipChange()
	        {
	            return membershipChange_;
	        }
	
	        public final Migration getMigration()
	        {
	            return migration_;
	        }
	
	        public final NewConversation getNewConversation()
	        {
	            return newConversation_;
	        }
	
	        public final Presence getPresence()
	        {
	            return presence_;
	        }
	
	        public final Receipt getReceipt()
	        {
	            return receipt_;
	        }
	
	        public final TileEvent getTileEvent()
	        {
	            return tileEvent_;
	        }
	
	        public final Typing getTyping()
	        {
	            return typing_;
	        }
	
	        public final boolean hasChatMessage()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventMetadata()
	        {
	            boolean flag;
	            if((0x400 & bitField0_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasGroupConversationRename()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInvalidateLocalCache()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMembershipChange()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMigration()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasNewConversation()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPresence()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceipt()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileEvent()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTyping()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((BunchServerStateUpdate)generatedmessagelite);
	        }
	
	        public final BunchServerStateUpdate.Builder mergeFrom(BunchServerStateUpdate bunchserverstateupdate)
	        {
	            if(bunchserverstateupdate == BunchServerStateUpdate.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(bunchserverstateupdate.hasChatMessage())
	            {
	                ChatMessage chatmessage = bunchserverstateupdate.getChatMessage();
	                if((1 & bitField0_) == 1 && chatMessage_ != ChatMessage.getDefaultInstance())
	                    chatMessage_ = ChatMessage.newBuilder(chatMessage_).mergeFrom(chatmessage).buildPartial();
	                else
	                    chatMessage_ = chatmessage;
	                bitField0_ = 1 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasPresence())
	            {
	                Presence presence = bunchserverstateupdate.getPresence();
	                if((2 & bitField0_) == 2 && presence_ != Presence.getDefaultInstance())
	                    presence_ = Presence.newBuilder(presence_).mergeFrom(presence).buildPartial();
	                else
	                    presence_ = presence;
	                bitField0_ = 2 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasTyping())
	            {
	                Typing typing = bunchserverstateupdate.getTyping();
	                if((4 & bitField0_) == 4 && typing_ != Typing.getDefaultInstance())
	                    typing_ = Typing.newBuilder(typing_).mergeFrom(typing).buildPartial();
	                else
	                    typing_ = typing;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasReceipt())
	            {
	                Receipt receipt = bunchserverstateupdate.getReceipt();
	                if((8 & bitField0_) == 8 && receipt_ != Receipt.getDefaultInstance())
	                    receipt_ = Receipt.newBuilder(receipt_).mergeFrom(receipt).buildPartial();
	                else
	                    receipt_ = receipt;
	                bitField0_ = 8 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasMembershipChange())
	            {
	                MembershipChange membershipchange = bunchserverstateupdate.getMembershipChange();
	                if((0x10 & bitField0_) == 16 && membershipChange_ != MembershipChange.getDefaultInstance())
	                    membershipChange_ = MembershipChange.newBuilder(membershipChange_).mergeFrom(membershipchange).buildPartial();
	                else
	                    membershipChange_ = membershipchange;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasGroupConversationRename())
	            {
	                GroupConversationRename groupconversationrename = bunchserverstateupdate.getGroupConversationRename();
	                if((0x20 & bitField0_) == 32 && groupConversationRename_ != GroupConversationRename.getDefaultInstance())
	                    groupConversationRename_ = GroupConversationRename.newBuilder(groupConversationRename_).mergeFrom(groupconversationrename).buildPartial();
	                else
	                    groupConversationRename_ = groupconversationrename;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasTileEvent())
	            {
	                TileEvent tileevent = bunchserverstateupdate.getTileEvent();
	                if((0x40 & bitField0_) == 64 && tileEvent_ != TileEvent.getDefaultInstance())
	                    tileEvent_ = TileEvent.newBuilder(tileEvent_).mergeFrom(tileevent).buildPartial();
	                else
	                    tileEvent_ = tileevent;
	                bitField0_ = 0x40 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasMigration())
	            {
	                Migration migration = bunchserverstateupdate.getMigration();
	                if((0x80 & bitField0_) == 128 && migration_ != Migration.getDefaultInstance())
	                    migration_ = Migration.newBuilder(migration_).mergeFrom(migration).buildPartial();
	                else
	                    migration_ = migration;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasInvalidateLocalCache())
	            {
	                InvalidateLocalCache invalidatelocalcache = bunchserverstateupdate.getInvalidateLocalCache();
	                if((0x100 & bitField0_) == 256 && invalidateLocalCache_ != InvalidateLocalCache.getDefaultInstance())
	                    invalidateLocalCache_ = InvalidateLocalCache.newBuilder(invalidateLocalCache_).mergeFrom(invalidatelocalcache).buildPartial();
	                else
	                    invalidateLocalCache_ = invalidatelocalcache;
	                bitField0_ = 0x100 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasNewConversation())
	            {
	                NewConversation newconversation = bunchserverstateupdate.getNewConversation();
	                if((0x200 & bitField0_) == 512 && newConversation_ != NewConversation.getDefaultInstance())
	                    newConversation_ = NewConversation.newBuilder(newConversation_).mergeFrom(newconversation).buildPartial();
	                else
	                    newConversation_ = newconversation;
	                bitField0_ = 0x200 | bitField0_;
	            }
	            if(bunchserverstateupdate.hasEventMetadata())
	            {
	                BunchServerStateUpdate.EventMetadata eventmetadata = bunchserverstateupdate.getEventMetadata();
	                if((0x400 & bitField0_) == 1024 && eventMetadata_ != BunchServerStateUpdate.EventMetadata.getDefaultInstance())
	                    eventMetadata_ = BunchServerStateUpdate.EventMetadata.newBuilder(eventMetadata_).mergeFrom(eventmetadata).buildPartial();
	                else
	                    eventMetadata_ = eventmetadata;
	                bitField0_ = 0x400 | bitField0_;
	            }
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setChatMessage(ChatMessage.Builder builder)
	        {
	            chatMessage_ = builder.build();
	            bitField0_ = 1 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setChatMessage(ChatMessage chatmessage)
	        {
	            if(chatmessage == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                chatMessage_ = chatmessage;
	                bitField0_ = 1 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setEventMetadata(BunchServerStateUpdate.EventMetadata.Builder builder)
	        {
	            eventMetadata_ = builder.build();
	            bitField0_ = 0x400 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setEventMetadata(BunchServerStateUpdate.EventMetadata eventmetadata)
	        {
	            if(eventmetadata == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventMetadata_ = eventmetadata;
	                bitField0_ = 0x400 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setGroupConversationRename(GroupConversationRename.Builder builder)
	        {
	            groupConversationRename_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setGroupConversationRename(GroupConversationRename groupconversationrename)
	        {
	            if(groupconversationrename == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                groupConversationRename_ = groupconversationrename;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setInvalidateLocalCache(InvalidateLocalCache.Builder builder)
	        {
	            invalidateLocalCache_ = builder.build();
	            bitField0_ = 0x100 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setInvalidateLocalCache(InvalidateLocalCache invalidatelocalcache)
	        {
	            if(invalidatelocalcache == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                invalidateLocalCache_ = invalidatelocalcache;
	                bitField0_ = 0x100 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setMembershipChange(MembershipChange.Builder builder)
	        {
	            membershipChange_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setMembershipChange(MembershipChange membershipchange)
	        {
	            if(membershipchange == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                membershipChange_ = membershipchange;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setMigration(Migration.Builder builder)
	        {
	            migration_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setMigration(Migration migration)
	        {
	            if(migration == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                migration_ = migration;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setNewConversation(NewConversation.Builder builder)
	        {
	            newConversation_ = builder.build();
	            bitField0_ = 0x200 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setNewConversation(NewConversation newconversation)
	        {
	            if(newconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                newConversation_ = newconversation;
	                bitField0_ = 0x200 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setPresence(Presence.Builder builder)
	        {
	            presence_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setPresence(Presence presence)
	        {
	            if(presence == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                presence_ = presence;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setReceipt(Receipt.Builder builder)
	        {
	            receipt_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setReceipt(Receipt receipt)
	        {
	            if(receipt == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                receipt_ = receipt;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setTileEvent(TileEvent.Builder builder)
	        {
	            tileEvent_ = builder.build();
	            bitField0_ = 0x40 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setTileEvent(TileEvent tileevent)
	        {
	            if(tileevent == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                tileEvent_ = tileevent;
	                bitField0_ = 0x40 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerStateUpdate.Builder setTyping(Typing.Builder builder)
	        {
	            typing_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerStateUpdate.Builder setTyping(Typing typing)
	        {
	            if(typing == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                typing_ = typing;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
		}
	}
	//===================================================================================================
	//								BatchCommand
	//===================================================================================================
	public static interface BatchCommandOrBuilder extends MessageLiteOrBuilder {

		public abstract String getAndroidNewUrl();

		public abstract String getClientVersion();

		public abstract Version.ClientVersion getClientVersionMessage();

		public abstract BunchCommand getCommand(int i);

		public abstract int getCommandCount();

		public abstract List getCommandList();

		public abstract String getIphoneNewUrl();

		public abstract boolean getIsAndroidDeprecated();

		public abstract boolean getIsIphoneDeprecated();

		public abstract BunchClientRequest getRequest(int i);

		public abstract int getRequestCount();

		public abstract List getRequestList();

		public abstract BunchServerResponse getResponse(int i);

		public abstract int getResponseCount();

		public abstract List getResponseList();

		public abstract BunchServerStateUpdate getStateUpdate(int i);

		public abstract int getStateUpdateCount();

		public abstract List getStateUpdateList();

		public abstract boolean hasAndroidNewUrl();

		public abstract boolean hasClientVersion();

		public abstract boolean hasClientVersionMessage();

		public abstract boolean hasIphoneNewUrl();

		public abstract boolean hasIsAndroidDeprecated();

		public abstract boolean hasIsIphoneDeprecated();
	}
	
	public static final class BatchCommand extends GeneratedMessageLite implements BatchCommandOrBuilder {

		private static final BatchCommand defaultInstance;
	    private Object androidNewUrl_;
	    private int bitField0_;
	    private Version.ClientVersion clientVersionMessage_;
	    private Object clientVersion_;
	    private List command_;
	    private Object iphoneNewUrl_;
	    private boolean isAndroidDeprecated_;
	    private boolean isIphoneDeprecated_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private List request_;
	    private List response_;
	    private List stateUpdate_;

	    static 
	    {
	        BatchCommand batchcommand = new BatchCommand();
	        defaultInstance = batchcommand;
	        batchcommand.command_ = Collections.emptyList();
	        batchcommand.request_ = Collections.emptyList();
	        batchcommand.response_ = Collections.emptyList();
	        batchcommand.stateUpdate_ = Collections.emptyList();
	        batchcommand.clientVersion_ = "";
	        batchcommand.clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
	        batchcommand.isIphoneDeprecated_ = false;
	        batchcommand.isAndroidDeprecated_ = false;
	        batchcommand.iphoneNewUrl_ = "";
	        batchcommand.androidNewUrl_ = "";
	    }

	    private BatchCommand()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private BatchCommand(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    BatchCommand(Builder builder, byte byte0)
	    {
	        this(builder);
	    }
	    
	    private ByteString getAndroidNewUrlBytes()
	    {
	        Object obj = androidNewUrl_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            androidNewUrl_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getClientVersionBytes()
	    {
	        Object obj = clientVersion_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            clientVersion_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static BatchCommand getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getIphoneNewUrlBytes()
	    {
	        Object obj = iphoneNewUrl_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            iphoneNewUrl_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static BatchCommand parseFrom(byte abyte0[]) throws InvalidProtocolBufferException
	    {
	    	
	        return (BatchCommand)newBuilder().mergeFrom(abyte0).buildPartial();
	    }
	
	    public final String getAndroidNewUrl()
	    {
	        Object obj = androidNewUrl_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                androidNewUrl_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getClientVersion()
	    {
	        Object obj = clientVersion_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                clientVersion_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Version.ClientVersion getClientVersionMessage()
	    {
	        return clientVersionMessage_;
	    }
	
	    public final BunchCommand getCommand(int i)
	    {
	        return (BunchCommand)command_.get(i);
	    }
	
	    public final int getCommandCount()
	    {
	        return command_.size();
	    }
	
	    public final List getCommandList()
	    {
	        return command_;
	    }
	
	    public final BunchCommandOrBuilder getCommandOrBuilder(int i)
	    {
	        return (BunchCommandOrBuilder)command_.get(i);
	    }
	
	    public final List getCommandOrBuilderList()
	    {
	        return command_;
	    }


	    public final BatchCommand getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }

	    public final String getIphoneNewUrl()
	    {
	        Object obj = iphoneNewUrl_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                iphoneNewUrl_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final boolean getIsAndroidDeprecated()
	    {
	        return isAndroidDeprecated_;
	    }
	
	    public final boolean getIsIphoneDeprecated()
	    {
	        return isIphoneDeprecated_;
	    }
	
	    public final BunchClientRequest getRequest(int i)
	    {
	        return (BunchClientRequest)request_.get(i);
	    }
	
	    public final int getRequestCount()
	    {
	        return request_.size();
	    }
	
	    public final List getRequestList()
	    {
	        return request_;
	    }
	
	    public final BunchClientRequestOrBuilder getRequestOrBuilder(int i)
	    {
	        return (BunchClientRequestOrBuilder)request_.get(i);
	    }
	
	    public final List getRequestOrBuilderList()
	    {
	        return request_;
	    }
	
	    public final BunchServerResponse getResponse(int i)
	    {
	        return (BunchServerResponse)response_.get(i);
	    }
	
	    public final int getResponseCount()
	    {
	        return response_.size();
	    }
	
	    public final List getResponseList()
	    {
	        return response_;
	    }
	
	    public final BunchServerResponseOrBuilder getResponseOrBuilder(int i)
	    {
	        return (BunchServerResponseOrBuilder)response_.get(i);
	    }
	
	    public final List getResponseOrBuilderList()
	    {
	        return response_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int k1;
	        if(i != -1)
	        {
	            k1 = i;
	        } else
	        {
	            int j = 0;
	            for(int k = 0; k < command_.size(); k++)
	                j += CodedOutputStream.computeMessageSize(1, (MessageLite)command_.get(k));
	
	            if((1 & bitField0_) == 1)
	                j += CodedOutputStream.computeBytesSize(2, getClientVersionBytes());
	            if((2 & bitField0_) == 2)
	                j += CodedOutputStream.computeMessageSize(3, clientVersionMessage_);
	            for(int l = 0; l < request_.size(); l++)
	                j += CodedOutputStream.computeMessageSize(4, (MessageLite)request_.get(l));
	
	            for(int i1 = 0; i1 < response_.size(); i1++)
	                j += CodedOutputStream.computeMessageSize(5, (MessageLite)response_.get(i1));
	
	            for(int j1 = 0; j1 < stateUpdate_.size(); j1++)
	                j += CodedOutputStream.computeMessageSize(6, (MessageLite)stateUpdate_.get(j1));
	
	            if((4 & bitField0_) == 4)
	                j += CodedOutputStream.computeBoolSize(7, isIphoneDeprecated_);
	            if((8 & bitField0_) == 8)
	                j += CodedOutputStream.computeBoolSize(8, isAndroidDeprecated_);
	            if((0x10 & bitField0_) == 16)
	                j += CodedOutputStream.computeBytesSize(9, getIphoneNewUrlBytes());
	            if((0x20 & bitField0_) == 32)
	                j += CodedOutputStream.computeBytesSize(10, getAndroidNewUrlBytes());
	            memoizedSerializedSize = j;
	            k1 = j;
	        }
	        return k1;
	    }
	
	    public final BunchServerStateUpdate getStateUpdate(int i)
	    {
	        return (BunchServerStateUpdate)stateUpdate_.get(i);
	    }
	
	    public final int getStateUpdateCount()
	    {
	        return stateUpdate_.size();
	    }
	
	    public final List getStateUpdateList()
	    {
	        return stateUpdate_;
	    }
	
	    public final BunchServerStateUpdateOrBuilder getStateUpdateOrBuilder(int i)
	    {
	        return (BunchServerStateUpdateOrBuilder)stateUpdate_.get(i);
	    }
	
	    public final List getStateUpdateOrBuilderList()
	    {
	        return stateUpdate_;
	    }
	
	    public final boolean hasAndroidNewUrl()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasClientVersion()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasClientVersionMessage()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasIphoneNewUrl()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasIsAndroidDeprecated()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasIsIphoneDeprecated()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        for(int i = 0; i < command_.size(); i++)
	            codedoutputstream.writeMessage(1, (MessageLite)command_.get(i));
	
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(2, getClientVersionBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(3, clientVersionMessage_);
	        for(int j = 0; j < request_.size(); j++)
	            codedoutputstream.writeMessage(4, (MessageLite)request_.get(j));
	
	        for(int k = 0; k < response_.size(); k++)
	            codedoutputstream.writeMessage(5, (MessageLite)response_.get(k));
	
	        for(int l = 0; l < stateUpdate_.size(); l++)
	            codedoutputstream.writeMessage(6, (MessageLite)stateUpdate_.get(l));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBool(7, isIphoneDeprecated_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBool(8, isAndroidDeprecated_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBytes(9, getIphoneNewUrlBytes());
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeBytes(10, getAndroidNewUrlBytes());
	    }
	    
	    //===========================================================================
	    //							Builder
	    //===========================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements BatchCommandOrBuilder {
	    	
			private Object androidNewUrl_;
	        private int bitField0_;
	        private Version.ClientVersion clientVersionMessage_;
	        private Object clientVersion_;
	        private List command_;
	        private Object iphoneNewUrl_;
	        private boolean isAndroidDeprecated_;
	        private boolean isIphoneDeprecated_;
	        private List request_;
	        private List response_;
	        private List stateUpdate_;

	        private Builder()
	        {
	            command_ = Collections.emptyList();
	            request_ = Collections.emptyList();
	            response_ = Collections.emptyList();
	            stateUpdate_ = Collections.emptyList();
	            clientVersion_ = "";
	            clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
	            iphoneNewUrl_ = "";
	            androidNewUrl_ = "";
	        }

	        public BatchCommand buildPartial()
	        {
	            BatchCommand batchcommand = new BatchCommand(this);
	            int i = bitField0_;
	            if((1 & bitField0_) == 1)
	            {
	                command_ = Collections.unmodifiableList(command_);
	                bitField0_ = -2 & bitField0_;
	            }
	            batchcommand.command_ = command_;
	            if((2 & bitField0_) == 2)
	            {
	                request_ = Collections.unmodifiableList(request_);
	                bitField0_ = -3 & bitField0_;
	            }
	            batchcommand.request_ = request_;
	            if((4 & bitField0_) == 4)
	            {
	                response_ = Collections.unmodifiableList(response_);
	                bitField0_ = -5 & bitField0_;
	            }
	            batchcommand.response_ = response_;
	            if((8 & bitField0_) == 8)
	            {
	                stateUpdate_ = Collections.unmodifiableList(stateUpdate_);
	                bitField0_ = -9 & bitField0_;
	            }
	            batchcommand.stateUpdate_ = stateUpdate_;
	            int j = i & 0x10;
	            int k = 0;
	            if(j == 16)
	                k = 1;
	            batchcommand.clientVersion_ = clientVersion_;
	            if((i & 0x20) == 32)
	                k |= 2;
	            batchcommand.clientVersionMessage_ = clientVersionMessage_;
	            if((i & 0x40) == 64)
	                k |= 4;
	            batchcommand.isIphoneDeprecated_ = isIphoneDeprecated_;
	            if((i & 0x80) == 128)
	                k |= 8;
	            batchcommand.isAndroidDeprecated_ = isAndroidDeprecated_;
	            if((i & 0x100) == 256)
	                k |= 0x10;
	            batchcommand.iphoneNewUrl_ = iphoneNewUrl_;
	            if((i & 0x200) == 512)
	                k |= 0x20;
	            batchcommand.androidNewUrl_ = androidNewUrl_;
	            batchcommand.bitField0_ = k;
	            return batchcommand;
	        }

	        public BatchCommand.Builder clone()
	        {
	            return (new BatchCommand.Builder()).mergeFrom(buildPartial());
	        }

	        private void ensureCommandIsMutable()
	        {
	            if((1 & bitField0_) != 1)
	            {
	                command_ = new ArrayList(command_);
	                bitField0_ = 1 | bitField0_;
	            }
	        }

	        private void ensureRequestIsMutable()
	        {
	            if((2 & bitField0_) != 2)
	            {
	                request_ = new ArrayList(request_);
	                bitField0_ = 2 | bitField0_;
	            }
	        }
	
	        private void ensureResponseIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                response_ = new ArrayList(response_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        private void ensureStateUpdateIsMutable()
	        {
	            if((8 & bitField0_) != 8)
	            {
	                stateUpdate_ = new ArrayList(stateUpdate_);
	                bitField0_ = 8 | bitField0_;
	            }
	        }

	        public BatchCommand.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    BunchCommand.Builder builder4 = BunchCommand.newBuilder();
	                    codedinputstream.readMessage(builder4, extensionregistrylite);
	                    addCommand(builder4.buildPartial());
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 0x10 | bitField0_;
	                    clientVersion_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Version.ClientVersion.Builder builder3 = Version.ClientVersion.newBuilder();
	                    if(hasClientVersionMessage())
	                        builder3.mergeFrom(getClientVersionMessage());
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    setClientVersionMessage(builder3.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    BunchClientRequest.Builder builder2 = BunchClientRequest.newBuilder();
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    addRequest(builder2.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    BunchServerResponse.Builder builder1 = BunchServerResponse.newBuilder();
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    addResponse(builder1.buildPartial());
	                    break;
	
	                case 50: // '2'
	                    BunchServerStateUpdate.Builder builder = BunchServerStateUpdate.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addStateUpdate(builder.buildPartial());
	                    break;
	
	                case 56: // '8'
	                    bitField0_ = 0x40 | bitField0_;
	                    isIphoneDeprecated_ = codedinputstream.readBool();
	                    break;
	
	                case 64: // '@'
	                    bitField0_ = 0x80 | bitField0_;
	                    isAndroidDeprecated_ = codedinputstream.readBool();
	                    break;
	
	                case 74: // 'J'
	                    bitField0_ = 0x100 | bitField0_;
	                    iphoneNewUrl_ = codedinputstream.readBytes();
	                    break;
	
	                case 82: // 'R'
	                    bitField0_ = 0x200 | bitField0_;
	                    androidNewUrl_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }

	        public final BatchCommand.Builder addAllCommand(Iterable iterable)
	        {
	            ensureCommandIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, command_);
	            return this;
	        }

	        public final BatchCommand.Builder addAllRequest(Iterable iterable)
	        {
	            ensureRequestIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, request_);
	            return this;
	        }
	
	        public final BatchCommand.Builder addAllResponse(Iterable iterable)
	        {
	            ensureResponseIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, response_);
	            return this;
	        }
	
	        public final BatchCommand.Builder addAllStateUpdate(Iterable iterable)
	        {
	            ensureStateUpdateIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, stateUpdate_);
	            return this;
	        }
	
	        public final BatchCommand.Builder addCommand(int i, BunchCommand.Builder builder)
	        {
	            ensureCommandIsMutable();
	            command_.add(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addCommand(int i, BunchCommand bunchcommand)
	        {
	            if(bunchcommand == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureCommandIsMutable();
	                command_.add(i, bunchcommand);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder addCommand(BunchCommand.Builder builder)
	        {
	            ensureCommandIsMutable();
	            command_.add(builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addCommand(BunchCommand bunchcommand)
	        {
	            if(bunchcommand == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureCommandIsMutable();
	                command_.add(bunchcommand);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder addRequest(int i, BunchClientRequest.Builder builder)
	        {
	            ensureRequestIsMutable();
	            request_.add(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addRequest(int i, BunchClientRequest bunchclientrequest)
	        {
	            if(bunchclientrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRequestIsMutable();
	                request_.add(i, bunchclientrequest);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder addRequest(BunchClientRequest.Builder builder)
	        {
	            ensureRequestIsMutable();
	            request_.add(builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addRequest(BunchClientRequest bunchclientrequest)
	        {
	            if(bunchclientrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRequestIsMutable();
	                request_.add(bunchclientrequest);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder addResponse(int i, BunchServerResponse.Builder builder)
	        {
	            ensureResponseIsMutable();
	            response_.add(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addResponse(int i, BunchServerResponse bunchserverresponse)
	        {
	            if(bunchserverresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureResponseIsMutable();
	                response_.add(i, bunchserverresponse);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder addResponse(BunchServerResponse.Builder builder)
	        {
	            ensureResponseIsMutable();
	            response_.add(builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addResponse(BunchServerResponse bunchserverresponse)
	        {
	            if(bunchserverresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureResponseIsMutable();
	                response_.add(bunchserverresponse);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder addStateUpdate(int i, BunchServerStateUpdate.Builder builder)
	        {
	            ensureStateUpdateIsMutable();
	            stateUpdate_.add(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addStateUpdate(int i, BunchServerStateUpdate bunchserverstateupdate)
	        {
	            if(bunchserverstateupdate == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureStateUpdateIsMutable();
	                stateUpdate_.add(i, bunchserverstateupdate);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder addStateUpdate(BunchServerStateUpdate.Builder builder)
	        {
	            ensureStateUpdateIsMutable();
	            stateUpdate_.add(builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder addStateUpdate(BunchServerStateUpdate bunchserverstateupdate)
	        {
	            if(bunchserverstateupdate == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureStateUpdateIsMutable();
	                stateUpdate_.add(bunchserverstateupdate);
	                return this;
	            }
	        }

	        public final BatchCommand build()
	        {
	            BatchCommand batchcommand = buildPartial();
	            if(!batchcommand.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("batchcommand"));
	            else
	                return batchcommand;
	        }

	        public final BatchCommand.Builder clear()
	        {
	            super.clear();
	            command_ = Collections.emptyList();
	            bitField0_ = -2 & bitField0_;
	            request_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            response_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            stateUpdate_ = Collections.emptyList();
	            bitField0_ = -9 & bitField0_;
	            clientVersion_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            isIphoneDeprecated_ = false;
	            bitField0_ = 0xffffffbf & bitField0_;
	            isAndroidDeprecated_ = false;
	            bitField0_ = 0xffffff7f & bitField0_;
	            iphoneNewUrl_ = "";
	            bitField0_ = 0xfffffeff & bitField0_;
	            androidNewUrl_ = "";
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final BatchCommand.Builder clearAndroidNewUrl()
	        {
	            bitField0_ = 0xfffffdff & bitField0_;
	            androidNewUrl_ = BatchCommand.getDefaultInstance().getAndroidNewUrl();
	            return this;
	        }
	
	        public final BatchCommand.Builder clearClientVersion()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            clientVersion_ = BatchCommand.getDefaultInstance().getClientVersion();
	            return this;
	        }
	
	        public final BatchCommand.Builder clearClientVersionMessage()
	        {
	            clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final BatchCommand.Builder clearCommand()
	        {
	            command_ = Collections.emptyList();
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final BatchCommand.Builder clearIphoneNewUrl()
	        {
	            bitField0_ = 0xfffffeff & bitField0_;
	            iphoneNewUrl_ = BatchCommand.getDefaultInstance().getIphoneNewUrl();
	            return this;
	        }
	
	        public final BatchCommand.Builder clearIsAndroidDeprecated()
	        {
	            bitField0_ = 0xffffff7f & bitField0_;
	            isAndroidDeprecated_ = false;
	            return this;
	        }
	
	        public final BatchCommand.Builder clearIsIphoneDeprecated()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            isIphoneDeprecated_ = false;
	            return this;
	        }
	
	        public final BatchCommand.Builder clearRequest()
	        {
	            request_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final BatchCommand.Builder clearResponse()
	        {
	            response_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final BatchCommand.Builder clearStateUpdate()
	        {
	            stateUpdate_ = Collections.emptyList();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }

	        public final String getAndroidNewUrl()
	        {
	            Object obj = androidNewUrl_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                androidNewUrl_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getClientVersion()
	        {
	            Object obj = clientVersion_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                clientVersion_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Version.ClientVersion getClientVersionMessage()
	        {
	            return clientVersionMessage_;
	        }
	
	        public final BunchCommand getCommand(int i)
	        {
	            return (BunchCommand)command_.get(i);
	        }
	
	        public final int getCommandCount()
	        {
	            return command_.size();
	        }
	
	        public final List getCommandList()
	        {
	            return Collections.unmodifiableList(command_);
	        }

	        public final BatchCommand getDefaultInstanceForType()
	        {
	            return BatchCommand.getDefaultInstance();
	        }
	
	        public final String getIphoneNewUrl()
	        {
	            Object obj = iphoneNewUrl_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                iphoneNewUrl_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean getIsAndroidDeprecated()
	        {
	            return isAndroidDeprecated_;
	        }
	
	        public final boolean getIsIphoneDeprecated()
	        {
	            return isIphoneDeprecated_;
	        }
	
	        public final BunchClientRequest getRequest(int i)
	        {
	            return (BunchClientRequest)request_.get(i);
	        }
	
	        public final int getRequestCount()
	        {
	            return request_.size();
	        }
	
	        public final List getRequestList()
	        {
	            return Collections.unmodifiableList(request_);
	        }
	
	        public final BunchServerResponse getResponse(int i)
	        {
	            return (BunchServerResponse)response_.get(i);
	        }
	
	        public final int getResponseCount()
	        {
	            return response_.size();
	        }
	
	        public final List getResponseList()
	        {
	            return Collections.unmodifiableList(response_);
	        }
	
	        public final BunchServerStateUpdate getStateUpdate(int i)
	        {
	            return (BunchServerStateUpdate)stateUpdate_.get(i);
	        }
	
	        public final int getStateUpdateCount()
	        {
	            return stateUpdate_.size();
	        }
	
	        public final List getStateUpdateList()
	        {
	            return Collections.unmodifiableList(stateUpdate_);
	        }
	
	        public final boolean hasAndroidNewUrl()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasClientVersion()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasClientVersionMessage()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasIphoneNewUrl()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasIsAndroidDeprecated()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasIsIphoneDeprecated()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }

	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((BatchCommand)lite);
			}
	        
	        public final BatchCommand.Builder mergeFrom(BatchCommand batchcommand)
	        {
	            if(batchcommand == BatchCommand.getDefaultInstance()) 
	            	return this;
	            
	            if(!batchcommand.command_.isEmpty())
	                if(command_.isEmpty())
	                {
	                    command_ = batchcommand.command_;
	                    bitField0_ = -2 & bitField0_;
	                } else
	                {
	                    ensureCommandIsMutable();
	                    command_.addAll(batchcommand.command_);
	                }
	            if(!batchcommand.request_.isEmpty())
	                if(request_.isEmpty())
	                {
	                    request_ = batchcommand.request_;
	                    bitField0_ = -3 & bitField0_;
	                } else
	                {
	                    ensureRequestIsMutable();
	                    request_.addAll(batchcommand.request_);
	                }
	            if(!batchcommand.response_.isEmpty())
	                if(response_.isEmpty())
	                {
	                    response_ = batchcommand.response_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureResponseIsMutable();
	                    response_.addAll(batchcommand.response_);
	                }
	            if(!batchcommand.stateUpdate_.isEmpty())
	                if(stateUpdate_.isEmpty())
	                {
	                    stateUpdate_ = batchcommand.stateUpdate_;
	                    bitField0_ = -9 & bitField0_;
	                } else
	                {
	                    ensureStateUpdateIsMutable();
	                    stateUpdate_.addAll(batchcommand.stateUpdate_);
	                }
	            if(batchcommand.hasClientVersion())
	                setClientVersion(batchcommand.getClientVersion());
	            if(batchcommand.hasClientVersionMessage())
	            {
	                Version.ClientVersion clientversion = batchcommand.getClientVersionMessage();
	                if((0x20 & bitField0_) == 32 && clientVersionMessage_ != Version.ClientVersion.getDefaultInstance())
	                    clientVersionMessage_ = Version.ClientVersion.newBuilder(clientVersionMessage_).mergeFrom(clientversion).buildPartial();
	                else
	                    clientVersionMessage_ = clientversion;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            if(batchcommand.hasIsIphoneDeprecated())
	                setIsIphoneDeprecated(batchcommand.getIsIphoneDeprecated());
	            if(batchcommand.hasIsAndroidDeprecated())
	                setIsAndroidDeprecated(batchcommand.getIsAndroidDeprecated());
	            if(batchcommand.hasIphoneNewUrl())
	                setIphoneNewUrl(batchcommand.getIphoneNewUrl());
	            if(batchcommand.hasAndroidNewUrl())
	                setAndroidNewUrl(batchcommand.getAndroidNewUrl());
	            return this;
	        }

	        public final BatchCommand.Builder setAndroidNewUrl(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x200 | bitField0_;
	                androidNewUrl_ = s;
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder setClientVersion(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                clientVersion_ = s;
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder setClientVersionMessage(Version.ClientVersion.Builder builder)
	        {
	            clientVersionMessage_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final BatchCommand.Builder setClientVersionMessage(Version.ClientVersion clientversion)
	        {
	            if(clientversion == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                clientVersionMessage_ = clientversion;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder setCommand(int i, BunchCommand.Builder builder)
	        {
	            ensureCommandIsMutable();
	            command_.set(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder setCommand(int i, BunchCommand bunchcommand)
	        {
	            if(bunchcommand == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureCommandIsMutable();
	                command_.set(i, bunchcommand);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder setIphoneNewUrl(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x100 | bitField0_;
	                iphoneNewUrl_ = s;
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder setIsAndroidDeprecated(boolean flag)
	        {
	            bitField0_ = 0x80 | bitField0_;
	            isAndroidDeprecated_ = flag;
	            return this;
	        }
	
	        public final BatchCommand.Builder setIsIphoneDeprecated(boolean flag)
	        {
	            bitField0_ = 0x40 | bitField0_;
	            isIphoneDeprecated_ = flag;
	            return this;
	        }
	
	        public final BatchCommand.Builder setRequest(int i, BunchClientRequest.Builder builder)
	        {
	            ensureRequestIsMutable();
	            request_.set(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder setRequest(int i, BunchClientRequest bunchclientrequest)
	        {
	            if(bunchclientrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRequestIsMutable();
	                request_.set(i, bunchclientrequest);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder setResponse(int i, BunchServerResponse.Builder builder)
	        {
	            ensureResponseIsMutable();
	            response_.set(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder setResponse(int i, BunchServerResponse bunchserverresponse)
	        {
	            if(bunchserverresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureResponseIsMutable();
	                response_.set(i, bunchserverresponse);
	                return this;
	            }
	        }
	
	        public final BatchCommand.Builder setStateUpdate(int i, BunchServerStateUpdate.Builder builder)
	        {
	            ensureStateUpdateIsMutable();
	            stateUpdate_.set(i, builder.build());
	            return this;
	        }
	
	        public final BatchCommand.Builder setStateUpdate(int i, BunchServerStateUpdate bunchserverstateupdate)
	        {
	            if(bunchserverstateupdate == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureStateUpdateIsMutable();
	                stateUpdate_.set(i, bunchserverstateupdate);
	                return this;
	            }
	        }
	    }
	}
	
	//===================================================================================================
	//								BatchCommand
	//===================================================================================================
	public static interface TypingOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getSenderId();
	
	    public abstract long getTimestamp();
	
	    public abstract Typing.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasTimestamp();
	
	    public abstract boolean hasType();
	}
	
	public static final class Typing extends GeneratedMessageLite implements TypingOrBuilder {
		
		private static final Typing defaultInstance;
        private int bitField0_;
        private Object conversationId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object senderId_;
        private long timestamp_;
        private Type type_;

        static 
        {
            Typing typing = new Typing();
            defaultInstance = typing;
            typing.type_ = Type.UNKNOWN;
            typing.conversationId_ = "";
            typing.senderId_ = "";
            typing.timestamp_ = 0L;
        }

        private Typing()
        {
            memoizedIsInitialized = -1;
            memoizedSerializedSize = -1;
        }

        Typing(Builder builder)
        {
            memoizedIsInitialized = -1;
            memoizedSerializedSize = -1;
        }

		private ByteString getConversationIdBytes()
        {
            Object obj = conversationId_;
            ByteString bytestring;
            if(obj instanceof String)
            {
                bytestring = ByteString.copyFromUtf8((String)obj);
                conversationId_ = bytestring;
            } else
            {
                bytestring = (ByteString)obj;
            }
            return bytestring;
        }

        public static Typing getDefaultInstance()
        {
            return defaultInstance;
        }

        private ByteString getSenderIdBytes()
        {
            Object obj = senderId_;
            ByteString bytestring;
            if(obj instanceof String)
            {
                bytestring = ByteString.copyFromUtf8((String)obj);
                senderId_ = bytestring;
            } else
            {
                bytestring = (ByteString)obj;
            }
            return bytestring;
        }

        public static Builder newBuilder()
        {
            return new Builder();
        }

        public static Builder newBuilder(Typing typing)
        {
            return new Builder().mergeFrom(typing);
        }

        public final String getConversationId()
        {
            Object obj = conversationId_;
            String s1;
            if(obj instanceof String)
            {
                s1 = (String)obj;
            } else
            {
                ByteString bytestring = (ByteString)obj;
                String s = bytestring.toStringUtf8();
                if(Internal.isValidUtf8(bytestring))
                    conversationId_ = s;
                s1 = s;
            }
            return s1;
        }

        public final Typing getDefaultInstanceForType()
        {
            return defaultInstance;
        }

        public final String getSenderId()
        {
            Object obj = senderId_;
            String s1;
            if(obj instanceof String)
            {
                s1 = (String)obj;
            } else
            {
                ByteString bytestring = (ByteString)obj;
                String s = bytestring.toStringUtf8();
                if(Internal.isValidUtf8(bytestring))
                    senderId_ = s;
                s1 = s;
            }
            return s1;
        }

        public final int getSerializedSize()
        {
            int i = memoizedSerializedSize;
            int l;
            if(i != -1)
            {
                l = i;
            } else
            {
                int j = 1 & bitField0_;
                int k = 0;
                if(j == 1)
                    k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
                if((2 & bitField0_) == 2)
                    k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
                if((4 & bitField0_) == 4)
                    k += CodedOutputStream.computeBytesSize(3, getSenderIdBytes());
                if((8 & bitField0_) == 8)
                    k += CodedOutputStream.computeInt64Size(4, timestamp_);
                memoizedSerializedSize = k;
                l = k;
            }
            return l;
        }

        public final long getTimestamp()
        {
            return timestamp_;
        }

        public final Type getType()
        {
            return type_;
        }

        public final boolean hasConversationId()
        {
            boolean flag;
            if((2 & bitField0_) == 2)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasSenderId()
        {
            boolean flag;
            if((4 & bitField0_) == 4)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasTimestamp()
        {
            boolean flag;
            if((8 & bitField0_) == 8)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasType()
        {
            boolean flag = true;
            if((1 & bitField0_) != 1)
                flag = false;
            return flag;
        }

        public final boolean isInitialized()
        {
            boolean flag = true;
            byte byte0 = memoizedIsInitialized;
            if(byte0 != -1)
            {
                if(byte0 != 1)
                    flag = false;
            } else
            {
                memoizedIsInitialized = 1;
            }
            return flag;
        }

        public final com.google.protobuf.MessageLite.Builder newBuilderForType()
        {
            return new Builder();
        }

        public final com.google.protobuf.MessageLite.Builder toBuilder()
        {
            return new Builder().mergeFrom(this);
        }
        
        protected final Object writeReplace()
            throws ObjectStreamException
        {
            return super.writeReplace();
        }

        public final void writeTo(CodedOutputStream codedoutputstream)
            throws IOException
        {
            getSerializedSize();
            if((1 & bitField0_) == 1)
                codedoutputstream.writeEnum(1, type_.getNumber());
            if((2 & bitField0_) == 2)
                codedoutputstream.writeBytes(2, getConversationIdBytes());
            if((4 & bitField0_) == 4)
                codedoutputstream.writeBytes(3, getSenderIdBytes());
            if((8 & bitField0_) == 8)
                codedoutputstream.writeInt64(4, timestamp_);
        }

        
		public static enum Type implements com.google.protobuf.Internal.EnumLite {
			
			UNKNOWN(0),
			START(1),
			PAUSE(2),
			CLEAR(3);
			
			private int value;
			
			public int getNumber() {
				return value;
			}
			
			private Type(int value) {
				this.value = value;
			}

			public static Type valueOf(int value) {
				for(Type t : Type.values()) {
					if(value == t.value) {
						return t;
					}
				}
				return null;
			}
		}
		
		public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements TypingOrBuilder {
	
			private int bitField0_;
	        private Object conversationId_;
	        private Object senderId_;
	        private long timestamp_;
	        private Typing.Type type_;


	        private Builder()
	        {
	            type_ = Typing.Type.UNKNOWN;
	            conversationId_ = "";
	            senderId_ = "";
	        }
		        
	        public Typing.Builder clone()
	        {
	            return (new Typing.Builder()).mergeFrom(buildPartial());
	        }
	
	        public Typing.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	            
	        	do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Typing.Type type = Typing.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 8 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final Typing build()
	        {
	            Typing typing = buildPartial();
	            if(!typing.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("typing"));
	            else
	                return typing;
	        }
	
	        public final Typing buildPartial()
	        {
	            Typing typing = new Typing(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            typing.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            typing.conversationId_ = conversationId_;
	            if((i & 4) == 4)
	                k |= 4;
	            typing.senderId_ = senderId_;
	            if((i & 8) == 8)
	                k |= 8;
	            typing.timestamp_ = timestamp_;
	            typing.bitField0_ = k;
	            return typing;
	        }
	
	        public final Typing.Builder clear()
	        {
	            super.clear();
	            type_ = Typing.Type.UNKNOWN;
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -5 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final Typing.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = Typing.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final Typing.Builder clearSenderId()
	        {
	            bitField0_ = -5 & bitField0_;
	            senderId_ = Typing.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final Typing.Builder clearTimestamp()
	        {
	            bitField0_ = -9 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final Typing.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = Typing.Type.UNKNOWN;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Typing getDefaultInstanceForType()
	        {
	            return Typing.getDefaultInstance();
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final Typing.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((Typing)generatedmessagelite);
	        }
	        
	        public final Typing.Builder mergeFrom(Typing typing)
	        {
	            if(typing == Typing.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(typing.hasType())
	                setType(typing.getType());
	            if(typing.hasConversationId())
	                setConversationId(typing.getConversationId());
	            if(typing.hasSenderId())
	                setSenderId(typing.getSenderId());
	            if(typing.hasTimestamp())
	                setTimestamp(typing.getTimestamp());
	            return this;
	        }
	
	        public final Typing.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final Typing.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final Typing.Builder setTimestamp(long l)
	        {
	            bitField0_ = 8 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	
	        public final Typing.Builder setType(Typing.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	
	//========================================================================================
	//							BunchClientRequest
	//========================================================================================
	public static interface BunchClientRequestOrBuilder extends MessageLiteOrBuilder {

		public abstract ChatMessageRequest getChatMessageRequest();

		public abstract ConversationJoinRequest getConversationJoinRequest();

		public abstract ConversationListRequest getConversationListRequest();

		public abstract ConversationPreferenceRequest getConversationPreferenceRequest();

		public abstract ConversationRenameRequest getConversationRenameRequest();

		public abstract NewConversationRequest getConversationRequest();

		public abstract ConversationSearchRequest getConversationSearchRequest();

		public abstract DeviceRegistrationRequest getDeviceRegistrationRequest();

		public abstract EventSearchRequest getEventSearchRequest();

		public abstract EventStreamRequest getEventStreamRequest();

		public abstract GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest();

		public abstract HangoutInviteFinishRequest getHangoutInviteFinishRequest();

		public abstract HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest();

		public abstract HangoutInviteReplyRequest getHangoutInviteReplyRequest();

		public abstract HangoutInviteRequest getHangoutInviteRequest();

		public abstract HangoutRingFinishRequest getHangoutRingFinishRequest();

		public abstract InviteRequest getInviteRequest();

		public abstract LeaveConversationRequest getLeaveConversationRequest();

		public abstract PingRequest getPingRequest();

		public abstract PresenceRequest getPresenceRequest();

		public abstract ReceiptRequest getReceiptRequest();

		public abstract ReplyToInviteRequest getReplyToInviteRequest();

		public abstract String getRequestClientId();

		public abstract SetAclsRequest getSetAclsRequest();

		public abstract SuggestionsRequest getSuggestionsRequest();

		public abstract TileEventRequest getTileEventRequest();

		public abstract TypingRequest getTypingRequest();

		public abstract UserCreationRequest getUserCreationRequest();

		public abstract UserInfoRequest getUserInfoRequest();

		public abstract boolean hasChatMessageRequest();

		public abstract boolean hasConversationJoinRequest();

		public abstract boolean hasConversationListRequest();

		public abstract boolean hasConversationPreferenceRequest();

		public abstract boolean hasConversationRenameRequest();

		public abstract boolean hasConversationRequest();

		public abstract boolean hasConversationSearchRequest();

		public abstract boolean hasDeviceRegistrationRequest();

		public abstract boolean hasEventSearchRequest();

		public abstract boolean hasEventStreamRequest();

		public abstract boolean hasGlobalConversationPreferencesRequest();

		public abstract boolean hasHangoutInviteFinishRequest();

		public abstract boolean hasHangoutInviteKeepAliveRequest();

		public abstract boolean hasHangoutInviteReplyRequest();

		public abstract boolean hasHangoutInviteRequest();

		public abstract boolean hasHangoutRingFinishRequest();

		public abstract boolean hasInviteRequest();

		public abstract boolean hasLeaveConversationRequest();

		public abstract boolean hasPingRequest();

		public abstract boolean hasPresenceRequest();

		public abstract boolean hasReceiptRequest();

		public abstract boolean hasReplyToInviteRequest();

		public abstract boolean hasRequestClientId();

		public abstract boolean hasSetAclsRequest();

		public abstract boolean hasSuggestionsRequest();

		public abstract boolean hasTileEventRequest();

		public abstract boolean hasTypingRequest();

		public abstract boolean hasUserCreationRequest();

		public abstract boolean hasUserInfoRequest();
	}
	
	public static final class BunchClientRequest extends GeneratedMessageLite implements BunchClientRequestOrBuilder {
		
		private static final BunchClientRequest defaultInstance;
        private int bitField0_;
        private ChatMessageRequest chatMessageRequest_;
        private ConversationJoinRequest conversationJoinRequest_;
        private ConversationListRequest conversationListRequest_;
        private ConversationPreferenceRequest conversationPreferenceRequest_;
        private ConversationRenameRequest conversationRenameRequest_;
        private NewConversationRequest conversationRequest_;
        private ConversationSearchRequest conversationSearchRequest_;
        private DeviceRegistrationRequest deviceRegistrationRequest_;
        private EventSearchRequest eventSearchRequest_;
        private EventStreamRequest eventStreamRequest_;
        private GlobalConversationPreferencesRequest globalConversationPreferencesRequest_;
        private HangoutInviteFinishRequest hangoutInviteFinishRequest_;
        private HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_;
        private HangoutInviteReplyRequest hangoutInviteReplyRequest_;
        private HangoutInviteRequest hangoutInviteRequest_;
        private HangoutRingFinishRequest hangoutRingFinishRequest_;
        private InviteRequest inviteRequest_;
        private LeaveConversationRequest leaveConversationRequest_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private PingRequest pingRequest_;
        private PresenceRequest presenceRequest_;
        private ReceiptRequest receiptRequest_;
        private ReplyToInviteRequest replyToInviteRequest_;
        private Object requestClientId_;
        private SetAclsRequest setAclsRequest_;
        private SuggestionsRequest suggestionsRequest_;
        private TileEventRequest tileEventRequest_;
        private TypingRequest typingRequest_;
        private UserCreationRequest userCreationRequest_;
        private UserInfoRequest userInfoRequest_;

        static 
        {
            BunchClientRequest bunchclientrequest = new BunchClientRequest();
            defaultInstance = bunchclientrequest;
            bunchclientrequest.requestClientId_ = "";
            bunchclientrequest.chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
            bunchclientrequest.presenceRequest_ = PresenceRequest.getDefaultInstance();
            bunchclientrequest.typingRequest_ = TypingRequest.getDefaultInstance();
            bunchclientrequest.receiptRequest_ = ReceiptRequest.getDefaultInstance();
            bunchclientrequest.conversationRequest_ = NewConversationRequest.getDefaultInstance();
            bunchclientrequest.eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
            bunchclientrequest.deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
            bunchclientrequest.pingRequest_ = PingRequest.getDefaultInstance();
            bunchclientrequest.conversationListRequest_ = ConversationListRequest.getDefaultInstance();
            bunchclientrequest.userCreationRequest_ = UserCreationRequest.getDefaultInstance();
            bunchclientrequest.inviteRequest_ = InviteRequest.getDefaultInstance();
            bunchclientrequest.leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
            bunchclientrequest.conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
            bunchclientrequest.tileEventRequest_ = TileEventRequest.getDefaultInstance();
            bunchclientrequest.conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
            bunchclientrequest.replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
            bunchclientrequest.setAclsRequest_ = SetAclsRequest.getDefaultInstance();
            bunchclientrequest.userInfoRequest_ = UserInfoRequest.getDefaultInstance();
            bunchclientrequest.conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
            bunchclientrequest.eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
            bunchclientrequest.suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
            bunchclientrequest.globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
            bunchclientrequest.conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
            bunchclientrequest.hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
            bunchclientrequest.hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
            bunchclientrequest.hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
            bunchclientrequest.hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
            bunchclientrequest.hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
        }

        private BunchClientRequest()
        {
            memoizedIsInitialized = -1;
            memoizedSerializedSize = -1;
        }

        BunchClientRequest(Builder builder)
        {
            super();
            memoizedIsInitialized = -1;
            memoizedSerializedSize = -1;
        }
        
		public static BunchClientRequest getDefaultInstance()
        {
            return defaultInstance;
        }

        private ByteString getRequestClientIdBytes()
        {
            Object obj = requestClientId_;
            ByteString bytestring;
            if(obj instanceof String)
            {
                bytestring = ByteString.copyFromUtf8((String)obj);
                requestClientId_ = bytestring;
            } else
            {
                bytestring = (ByteString)obj;
            }
            return bytestring;
        }

        public static Builder newBuilder()
        {
            return new Builder();
        }

        public static Builder newBuilder(BunchClientRequest bunchclientrequest)
        {
            return new Builder().mergeFrom(bunchclientrequest);
        }

        public final ChatMessageRequest getChatMessageRequest()
        {
            return chatMessageRequest_;
        }

        public final ConversationJoinRequest getConversationJoinRequest()
        {
            return conversationJoinRequest_;
        }

        public final ConversationListRequest getConversationListRequest()
        {
            return conversationListRequest_;
        }

        public final ConversationPreferenceRequest getConversationPreferenceRequest()
        {
            return conversationPreferenceRequest_;
        }

        public final ConversationRenameRequest getConversationRenameRequest()
        {
            return conversationRenameRequest_;
        }

        public final NewConversationRequest getConversationRequest()
        {
            return conversationRequest_;
        }

        public final ConversationSearchRequest getConversationSearchRequest()
        {
            return conversationSearchRequest_;
        }

        public final BunchClientRequest getDefaultInstanceForType()
        {
            return defaultInstance;
        }

        public final DeviceRegistrationRequest getDeviceRegistrationRequest()
        {
            return deviceRegistrationRequest_;
        }

        public final EventSearchRequest getEventSearchRequest()
        {
            return eventSearchRequest_;
        }

        public final EventStreamRequest getEventStreamRequest()
        {
            return eventStreamRequest_;
        }

        public final GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
        {
            return globalConversationPreferencesRequest_;
        }

        public final HangoutInviteFinishRequest getHangoutInviteFinishRequest()
        {
            return hangoutInviteFinishRequest_;
        }

        public final HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
        {
            return hangoutInviteKeepAliveRequest_;
        }

        public final HangoutInviteReplyRequest getHangoutInviteReplyRequest()
        {
            return hangoutInviteReplyRequest_;
        }

        public final HangoutInviteRequest getHangoutInviteRequest()
        {
            return hangoutInviteRequest_;
        }

        public final HangoutRingFinishRequest getHangoutRingFinishRequest()
        {
            return hangoutRingFinishRequest_;
        }

        public final InviteRequest getInviteRequest()
        {
            return inviteRequest_;
        }

        public final LeaveConversationRequest getLeaveConversationRequest()
        {
            return leaveConversationRequest_;
        }

        public final PingRequest getPingRequest()
        {
            return pingRequest_;
        }

        public final PresenceRequest getPresenceRequest()
        {
            return presenceRequest_;
        }

        public final ReceiptRequest getReceiptRequest()
        {
            return receiptRequest_;
        }

        public final ReplyToInviteRequest getReplyToInviteRequest()
        {
            return replyToInviteRequest_;
        }

        public final String getRequestClientId()
        {
            Object obj = requestClientId_;
            String s1;
            if(obj instanceof String)
            {
                s1 = (String)obj;
            } else
            {
                ByteString bytestring = (ByteString)obj;
                String s = bytestring.toStringUtf8();
                if(Internal.isValidUtf8(bytestring))
                    requestClientId_ = s;
                s1 = s;
            }
            return s1;
        }

        public final int getSerializedSize()
        {
            int i = memoizedSerializedSize;
            int l;
            if(i != -1)
            {
                l = i;
            } else
            {
                int j = 1 & bitField0_;
                int k = 0;
                if(j == 1)
                    k = 0 + CodedOutputStream.computeBytesSize(1, getRequestClientIdBytes());
                if((2 & bitField0_) == 2)
                    k += CodedOutputStream.computeMessageSize(2, chatMessageRequest_);
                if((4 & bitField0_) == 4)
                    k += CodedOutputStream.computeMessageSize(3, presenceRequest_);
                if((8 & bitField0_) == 8)
                    k += CodedOutputStream.computeMessageSize(4, typingRequest_);
                if((0x10 & bitField0_) == 16)
                    k += CodedOutputStream.computeMessageSize(5, receiptRequest_);
                if((0x20 & bitField0_) == 32)
                    k += CodedOutputStream.computeMessageSize(6, conversationRequest_);
                if((0x40 & bitField0_) == 64)
                    k += CodedOutputStream.computeMessageSize(7, eventStreamRequest_);
                if((0x80 & bitField0_) == 128)
                    k += CodedOutputStream.computeMessageSize(8, deviceRegistrationRequest_);
                if((0x100 & bitField0_) == 256)
                    k += CodedOutputStream.computeMessageSize(9, pingRequest_);
                if((0x200 & bitField0_) == 512)
                    k += CodedOutputStream.computeMessageSize(10, conversationListRequest_);
                if((0x400 & bitField0_) == 1024)
                    k += CodedOutputStream.computeMessageSize(11, userCreationRequest_);
                if((0x800 & bitField0_) == 2048)
                    k += CodedOutputStream.computeMessageSize(12, inviteRequest_);
                if((0x1000 & bitField0_) == 4096)
                    k += CodedOutputStream.computeMessageSize(13, leaveConversationRequest_);
                if((0x2000 & bitField0_) == 8192)
                    k += CodedOutputStream.computeMessageSize(14, conversationRenameRequest_);
                if((0x4000 & bitField0_) == 16384)
                    k += CodedOutputStream.computeMessageSize(15, tileEventRequest_);
                if((0x8000 & bitField0_) == 32768)
                    k += CodedOutputStream.computeMessageSize(16, conversationPreferenceRequest_);
                if((0x10000 & bitField0_) == 0x10000)
                    k += CodedOutputStream.computeMessageSize(17, replyToInviteRequest_);
                if((0x20000 & bitField0_) == 0x20000)
                    k += CodedOutputStream.computeMessageSize(18, setAclsRequest_);
                if((0x40000 & bitField0_) == 0x40000)
                    k += CodedOutputStream.computeMessageSize(19, userInfoRequest_);
                if((0x80000 & bitField0_) == 0x80000)
                    k += CodedOutputStream.computeMessageSize(20, conversationSearchRequest_);
                if((0x100000 & bitField0_) == 0x100000)
                    k += CodedOutputStream.computeMessageSize(21, eventSearchRequest_);
                if((0x200000 & bitField0_) == 0x200000)
                    k += CodedOutputStream.computeMessageSize(22, suggestionsRequest_);
                if((0x400000 & bitField0_) == 0x400000)
                    k += CodedOutputStream.computeMessageSize(23, globalConversationPreferencesRequest_);
                if((0x800000 & bitField0_) == 0x800000)
                    k += CodedOutputStream.computeMessageSize(24, conversationJoinRequest_);
                if((0x1000000 & bitField0_) == 0x1000000)
                    k += CodedOutputStream.computeMessageSize(25, hangoutInviteRequest_);
                if((0x2000000 & bitField0_) == 0x2000000)
                    k += CodedOutputStream.computeMessageSize(26, hangoutInviteKeepAliveRequest_);
                if((0x4000000 & bitField0_) == 0x4000000)
                    k += CodedOutputStream.computeMessageSize(27, hangoutInviteReplyRequest_);
                if((0x8000000 & bitField0_) == 0x8000000)
                    k += CodedOutputStream.computeMessageSize(28, hangoutInviteFinishRequest_);
                if((0x10000000 & bitField0_) == 0x10000000)
                    k += CodedOutputStream.computeMessageSize(29, hangoutRingFinishRequest_);
                memoizedSerializedSize = k;
                l = k;
            }
            return l;
        }

        public final SetAclsRequest getSetAclsRequest()
        {
            return setAclsRequest_;
        }

        public final SuggestionsRequest getSuggestionsRequest()
        {
            return suggestionsRequest_;
        }

        public final TileEventRequest getTileEventRequest()
        {
            return tileEventRequest_;
        }

        public final TypingRequest getTypingRequest()
        {
            return typingRequest_;
        }

        public final UserCreationRequest getUserCreationRequest()
        {
            return userCreationRequest_;
        }

        public final UserInfoRequest getUserInfoRequest()
        {
            return userInfoRequest_;
        }

        public final boolean hasChatMessageRequest()
        {
            boolean flag;
            if((2 & bitField0_) == 2)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasConversationJoinRequest()
        {
            boolean flag;
            if((0x800000 & bitField0_) == 0x800000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasConversationListRequest()
        {
            boolean flag;
            if((0x200 & bitField0_) == 512)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasConversationPreferenceRequest()
        {
            boolean flag;
            if((0x8000 & bitField0_) == 32768)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasConversationRenameRequest()
        {
            boolean flag;
            if((0x2000 & bitField0_) == 8192)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasConversationRequest()
        {
            boolean flag;
            if((0x20 & bitField0_) == 32)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasConversationSearchRequest()
        {
            boolean flag;
            if((0x80000 & bitField0_) == 0x80000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasDeviceRegistrationRequest()
        {
            boolean flag;
            if((0x80 & bitField0_) == 128)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasEventSearchRequest()
        {
            boolean flag;
            if((0x100000 & bitField0_) == 0x100000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasEventStreamRequest()
        {
            boolean flag;
            if((0x40 & bitField0_) == 64)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasGlobalConversationPreferencesRequest()
        {
            boolean flag;
            if((0x400000 & bitField0_) == 0x400000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasHangoutInviteFinishRequest()
        {
            boolean flag;
            if((0x8000000 & bitField0_) == 0x8000000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasHangoutInviteKeepAliveRequest()
        {
            boolean flag;
            if((0x2000000 & bitField0_) == 0x2000000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasHangoutInviteReplyRequest()
        {
            boolean flag;
            if((0x4000000 & bitField0_) == 0x4000000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasHangoutInviteRequest()
        {
            boolean flag;
            if((0x1000000 & bitField0_) == 0x1000000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasHangoutRingFinishRequest()
        {
            boolean flag;
            if((0x10000000 & bitField0_) == 0x10000000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasInviteRequest()
        {
            boolean flag;
            if((0x800 & bitField0_) == 2048)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasLeaveConversationRequest()
        {
            boolean flag;
            if((0x1000 & bitField0_) == 4096)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasPingRequest()
        {
            boolean flag;
            if((0x100 & bitField0_) == 256)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasPresenceRequest()
        {
            boolean flag;
            if((4 & bitField0_) == 4)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasReceiptRequest()
        {
            boolean flag;
            if((0x10 & bitField0_) == 16)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasReplyToInviteRequest()
        {
            boolean flag;
            if((0x10000 & bitField0_) == 0x10000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasRequestClientId()
        {
            boolean flag = true;
            if((1 & bitField0_) != 1)
                flag = false;
            return flag;
        }

        public final boolean hasSetAclsRequest()
        {
            boolean flag;
            if((0x20000 & bitField0_) == 0x20000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasSuggestionsRequest()
        {
            boolean flag;
            if((0x200000 & bitField0_) == 0x200000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasTileEventRequest()
        {
            boolean flag;
            if((0x4000 & bitField0_) == 16384)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasTypingRequest()
        {
            boolean flag;
            if((8 & bitField0_) == 8)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasUserCreationRequest()
        {
            boolean flag;
            if((0x400 & bitField0_) == 1024)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean hasUserInfoRequest()
        {
            boolean flag;
            if((0x40000 & bitField0_) == 0x40000)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public final boolean isInitialized()
        {
            boolean flag = true;
            byte byte0 = memoizedIsInitialized;
            if(byte0 != -1)
            {
                if(byte0 != 1)
                    flag = false;
            } else
            {
                memoizedIsInitialized = 1;
            }
            return flag;
        }

        public final com.google.protobuf.MessageLite.Builder newBuilderForType()
        {
            return new Builder();
        }

        public final com.google.protobuf.MessageLite.Builder toBuilder()
        {
            return new Builder().mergeFrom(this);
        }

        protected final Object writeReplace()
            throws ObjectStreamException
        {
            return super.writeReplace();
        }

        public final void writeTo(CodedOutputStream codedoutputstream)
            throws IOException
        {
            getSerializedSize();
            if((1 & bitField0_) == 1)
                codedoutputstream.writeBytes(1, getRequestClientIdBytes());
            if((2 & bitField0_) == 2)
                codedoutputstream.writeMessage(2, chatMessageRequest_);
            if((4 & bitField0_) == 4)
                codedoutputstream.writeMessage(3, presenceRequest_);
            if((8 & bitField0_) == 8)
                codedoutputstream.writeMessage(4, typingRequest_);
            if((0x10 & bitField0_) == 16)
                codedoutputstream.writeMessage(5, receiptRequest_);
            if((0x20 & bitField0_) == 32)
                codedoutputstream.writeMessage(6, conversationRequest_);
            if((0x40 & bitField0_) == 64)
                codedoutputstream.writeMessage(7, eventStreamRequest_);
            if((0x80 & bitField0_) == 128)
                codedoutputstream.writeMessage(8, deviceRegistrationRequest_);
            if((0x100 & bitField0_) == 256)
                codedoutputstream.writeMessage(9, pingRequest_);
            if((0x200 & bitField0_) == 512)
                codedoutputstream.writeMessage(10, conversationListRequest_);
            if((0x400 & bitField0_) == 1024)
                codedoutputstream.writeMessage(11, userCreationRequest_);
            if((0x800 & bitField0_) == 2048)
                codedoutputstream.writeMessage(12, inviteRequest_);
            if((0x1000 & bitField0_) == 4096)
                codedoutputstream.writeMessage(13, leaveConversationRequest_);
            if((0x2000 & bitField0_) == 8192)
                codedoutputstream.writeMessage(14, conversationRenameRequest_);
            if((0x4000 & bitField0_) == 16384)
                codedoutputstream.writeMessage(15, tileEventRequest_);
            if((0x8000 & bitField0_) == 32768)
                codedoutputstream.writeMessage(16, conversationPreferenceRequest_);
            if((0x10000 & bitField0_) == 0x10000)
                codedoutputstream.writeMessage(17, replyToInviteRequest_);
            if((0x20000 & bitField0_) == 0x20000)
                codedoutputstream.writeMessage(18, setAclsRequest_);
            if((0x40000 & bitField0_) == 0x40000)
                codedoutputstream.writeMessage(19, userInfoRequest_);
            if((0x80000 & bitField0_) == 0x80000)
                codedoutputstream.writeMessage(20, conversationSearchRequest_);
            if((0x100000 & bitField0_) == 0x100000)
                codedoutputstream.writeMessage(21, eventSearchRequest_);
            if((0x200000 & bitField0_) == 0x200000)
                codedoutputstream.writeMessage(22, suggestionsRequest_);
            if((0x400000 & bitField0_) == 0x400000)
                codedoutputstream.writeMessage(23, globalConversationPreferencesRequest_);
            if((0x800000 & bitField0_) == 0x800000)
                codedoutputstream.writeMessage(24, conversationJoinRequest_);
            if((0x1000000 & bitField0_) == 0x1000000)
                codedoutputstream.writeMessage(25, hangoutInviteRequest_);
            if((0x2000000 & bitField0_) == 0x2000000)
                codedoutputstream.writeMessage(26, hangoutInviteKeepAliveRequest_);
            if((0x4000000 & bitField0_) == 0x4000000)
                codedoutputstream.writeMessage(27, hangoutInviteReplyRequest_);
            if((0x8000000 & bitField0_) == 0x8000000)
                codedoutputstream.writeMessage(28, hangoutInviteFinishRequest_);
            if((0x10000000 & bitField0_) == 0x10000000)
                codedoutputstream.writeMessage(29, hangoutRingFinishRequest_);
        }
        
        //=====================================================================
        //							Builder
        //=====================================================================
        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements BunchClientRequestOrBuilder {
	
        	private int bitField0_;
            private ChatMessageRequest chatMessageRequest_;
            private ConversationJoinRequest conversationJoinRequest_;
            private ConversationListRequest conversationListRequest_;
            private ConversationPreferenceRequest conversationPreferenceRequest_;
            private ConversationRenameRequest conversationRenameRequest_;
            private NewConversationRequest conversationRequest_;
            private ConversationSearchRequest conversationSearchRequest_;
            private DeviceRegistrationRequest deviceRegistrationRequest_;
            private EventSearchRequest eventSearchRequest_;
            private EventStreamRequest eventStreamRequest_;
            private GlobalConversationPreferencesRequest globalConversationPreferencesRequest_;
            private HangoutInviteFinishRequest hangoutInviteFinishRequest_;
            private HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_;
            private HangoutInviteReplyRequest hangoutInviteReplyRequest_;
            private HangoutInviteRequest hangoutInviteRequest_;
            private HangoutRingFinishRequest hangoutRingFinishRequest_;
            private InviteRequest inviteRequest_;
            private LeaveConversationRequest leaveConversationRequest_;
            private PingRequest pingRequest_;
            private PresenceRequest presenceRequest_;
            private ReceiptRequest receiptRequest_;
            private ReplyToInviteRequest replyToInviteRequest_;
            private Object requestClientId_;
            private SetAclsRequest setAclsRequest_;
            private SuggestionsRequest suggestionsRequest_;
            private TileEventRequest tileEventRequest_;
            private TypingRequest typingRequest_;
            private UserCreationRequest userCreationRequest_;
            private UserInfoRequest userInfoRequest_;

            private Builder()
            {
                requestClientId_ = "";
                chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
                presenceRequest_ = PresenceRequest.getDefaultInstance();
                typingRequest_ = TypingRequest.getDefaultInstance();
                receiptRequest_ = ReceiptRequest.getDefaultInstance();
                conversationRequest_ = NewConversationRequest.getDefaultInstance();
                eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
                deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
                pingRequest_ = PingRequest.getDefaultInstance();
                conversationListRequest_ = ConversationListRequest.getDefaultInstance();
                userCreationRequest_ = UserCreationRequest.getDefaultInstance();
                inviteRequest_ = InviteRequest.getDefaultInstance();
                leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
                conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
                tileEventRequest_ = TileEventRequest.getDefaultInstance();
                conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
                replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
                setAclsRequest_ = SetAclsRequest.getDefaultInstance();
                userInfoRequest_ = UserInfoRequest.getDefaultInstance();
                conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
                eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
                suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
                globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
                conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
                hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
                hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
                hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
                hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
                hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
            }
            
            public BunchClientRequest.Builder clone()
	        {
	            return (new BunchClientRequest.Builder()).mergeFrom(buildPartial());
	        }
	
            public BunchClientRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    requestClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    ChatMessageRequest.Builder builder27 = ChatMessageRequest.newBuilder();
	                    if(hasChatMessageRequest())
	                        builder27.mergeFrom(getChatMessageRequest());
	                    codedinputstream.readMessage(builder27, extensionregistrylite);
	                    setChatMessageRequest(builder27.buildPartial());
	                    break;
	
	                case 26: // '\032'
	                    PresenceRequest.Builder builder26 = PresenceRequest.newBuilder();
	                    if(hasPresenceRequest())
	                        builder26.mergeFrom(getPresenceRequest());
	                    codedinputstream.readMessage(builder26, extensionregistrylite);
	                    setPresenceRequest(builder26.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    TypingRequest.Builder builder25 = TypingRequest.newBuilder();
	                    if(hasTypingRequest())
	                        builder25.mergeFrom(getTypingRequest());
	                    codedinputstream.readMessage(builder25, extensionregistrylite);
	                    setTypingRequest(builder25.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    ReceiptRequest.Builder builder24 = ReceiptRequest.newBuilder();
	                    if(hasReceiptRequest())
	                        builder24.mergeFrom(getReceiptRequest());
	                    codedinputstream.readMessage(builder24, extensionregistrylite);
	                    setReceiptRequest(builder24.buildPartial());
	                    break;
	
	                case 50: // '2'
	                    NewConversationRequest.Builder builder23 = NewConversationRequest.newBuilder();
	                    if(hasConversationRequest())
	                        builder23.mergeFrom(getConversationRequest());
	                    codedinputstream.readMessage(builder23, extensionregistrylite);
	                    setConversationRequest(builder23.buildPartial());
	                    break;
	
	                case 58: // ':'
	                    EventStreamRequest.Builder builder22 = EventStreamRequest.newBuilder();
	                    if(hasEventStreamRequest())
	                        builder22.mergeFrom(getEventStreamRequest());
	                    codedinputstream.readMessage(builder22, extensionregistrylite);
	                    setEventStreamRequest(builder22.buildPartial());
	                    break;
	
	                case 66: // 'B'
	                    DeviceRegistrationRequest.Builder builder21 = DeviceRegistrationRequest.newBuilder();
	                    if(hasDeviceRegistrationRequest())
	                        builder21.mergeFrom(getDeviceRegistrationRequest());
	                    codedinputstream.readMessage(builder21, extensionregistrylite);
	                    setDeviceRegistrationRequest(builder21.buildPartial());
	                    break;
	
	                case 74: // 'J'
	                    PingRequest.Builder builder20 = PingRequest.newBuilder();
	                    if(hasPingRequest())
	                        builder20.mergeFrom(getPingRequest());
	                    codedinputstream.readMessage(builder20, extensionregistrylite);
	                    setPingRequest(builder20.buildPartial());
	                    break;
	
	                case 82: // 'R'
	                    ConversationListRequest.Builder builder19 = ConversationListRequest.newBuilder();
	                    if(hasConversationListRequest())
	                        builder19.mergeFrom(getConversationListRequest());
	                    codedinputstream.readMessage(builder19, extensionregistrylite);
	                    setConversationListRequest(builder19.buildPartial());
	                    break;
	
	                case 90: // 'Z'
	                    UserCreationRequest.Builder builder18 = UserCreationRequest.newBuilder();
	                    if(hasUserCreationRequest())
	                        builder18.mergeFrom(getUserCreationRequest());
	                    codedinputstream.readMessage(builder18, extensionregistrylite);
	                    setUserCreationRequest(builder18.buildPartial());
	                    break;
	
	                case 98: // 'b'
	                    InviteRequest.Builder builder17 = InviteRequest.newBuilder();
	                    if(hasInviteRequest())
	                        builder17.mergeFrom(getInviteRequest());
	                    codedinputstream.readMessage(builder17, extensionregistrylite);
	                    setInviteRequest(builder17.buildPartial());
	                    break;
	
	                case 106: // 'j'
	                    LeaveConversationRequest.Builder builder16 = LeaveConversationRequest.newBuilder();
	                    if(hasLeaveConversationRequest())
	                        builder16.mergeFrom(getLeaveConversationRequest());
	                    codedinputstream.readMessage(builder16, extensionregistrylite);
	                    setLeaveConversationRequest(builder16.buildPartial());
	                    break;
	
	                case 114: // 'r'
	                    ConversationRenameRequest.Builder builder15 = ConversationRenameRequest.newBuilder();
	                    if(hasConversationRenameRequest())
	                        builder15.mergeFrom(getConversationRenameRequest());
	                    codedinputstream.readMessage(builder15, extensionregistrylite);
	                    setConversationRenameRequest(builder15.buildPartial());
	                    break;
	
	                case 122: // 'z'
	                    TileEventRequest.Builder builder14 = TileEventRequest.newBuilder();
	                    if(hasTileEventRequest())
	                        builder14.mergeFrom(getTileEventRequest());
	                    codedinputstream.readMessage(builder14, extensionregistrylite);
	                    setTileEventRequest(builder14.buildPartial());
	                    break;
	
	                case 130: 
	                    ConversationPreferenceRequest.Builder builder13 = ConversationPreferenceRequest.newBuilder();
	                    if(hasConversationPreferenceRequest())
	                        builder13.mergeFrom(getConversationPreferenceRequest());
	                    codedinputstream.readMessage(builder13, extensionregistrylite);
	                    setConversationPreferenceRequest(builder13.buildPartial());
	                    break;
	
	                case 138: 
	                    ReplyToInviteRequest.Builder builder12 = ReplyToInviteRequest.newBuilder();
	                    if(hasReplyToInviteRequest())
	                        builder12.mergeFrom(getReplyToInviteRequest());
	                    codedinputstream.readMessage(builder12, extensionregistrylite);
	                    setReplyToInviteRequest(builder12.buildPartial());
	                    break;
	
	                case 146: 
	                    SetAclsRequest.Builder builder11 = SetAclsRequest.newBuilder();
	                    if(hasSetAclsRequest())
	                        builder11.mergeFrom(getSetAclsRequest());
	                    codedinputstream.readMessage(builder11, extensionregistrylite);
	                    setSetAclsRequest(builder11.buildPartial());
	                    break;
	
	                case 154: 
	                    UserInfoRequest.Builder builder10 = UserInfoRequest.newBuilder();
	                    if(hasUserInfoRequest())
	                        builder10.mergeFrom(getUserInfoRequest());
	                    codedinputstream.readMessage(builder10, extensionregistrylite);
	                    setUserInfoRequest(builder10.buildPartial());
	                    break;
	
	                case 162: 
	                    ConversationSearchRequest.Builder builder9 = ConversationSearchRequest.newBuilder();
	                    if(hasConversationSearchRequest())
	                        builder9.mergeFrom(getConversationSearchRequest());
	                    codedinputstream.readMessage(builder9, extensionregistrylite);
	                    setConversationSearchRequest(builder9.buildPartial());
	                    break;
	
	                case 170: 
	                    EventSearchRequest.Builder builder8 = EventSearchRequest.newBuilder();
	                    if(hasEventSearchRequest())
	                        builder8.mergeFrom(getEventSearchRequest());
	                    codedinputstream.readMessage(builder8, extensionregistrylite);
	                    setEventSearchRequest(builder8.buildPartial());
	                    break;
	
	                case 178: 
	                    SuggestionsRequest.Builder builder7 = SuggestionsRequest.newBuilder();
	                    if(hasSuggestionsRequest())
	                        builder7.mergeFrom(getSuggestionsRequest());
	                    codedinputstream.readMessage(builder7, extensionregistrylite);
	                    setSuggestionsRequest(builder7.buildPartial());
	                    break;
	
	                case 186: 
	                    GlobalConversationPreferencesRequest.Builder builder6 = GlobalConversationPreferencesRequest.newBuilder();
	                    if(hasGlobalConversationPreferencesRequest())
	                        builder6.mergeFrom(getGlobalConversationPreferencesRequest());
	                    codedinputstream.readMessage(builder6, extensionregistrylite);
	                    setGlobalConversationPreferencesRequest(builder6.buildPartial());
	                    break;
	
	                case 194: 
	                    ConversationJoinRequest.Builder builder5 = ConversationJoinRequest.newBuilder();
	                    if(hasConversationJoinRequest())
	                        builder5.mergeFrom(getConversationJoinRequest());
	                    codedinputstream.readMessage(builder5, extensionregistrylite);
	                    setConversationJoinRequest(builder5.buildPartial());
	                    break;
	
	                case 202: 
	                    HangoutInviteRequest.Builder builder4 = HangoutInviteRequest.newBuilder();
	                    if(hasHangoutInviteRequest())
	                        builder4.mergeFrom(getHangoutInviteRequest());
	                    codedinputstream.readMessage(builder4, extensionregistrylite);
	                    setHangoutInviteRequest(builder4.buildPartial());
	                    break;
	
	                case 210: 
	                    HangoutInviteKeepAliveRequest.Builder builder3 = HangoutInviteKeepAliveRequest.newBuilder();
	                    if(hasHangoutInviteKeepAliveRequest())
	                        builder3.mergeFrom(getHangoutInviteKeepAliveRequest());
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    setHangoutInviteKeepAliveRequest(builder3.buildPartial());
	                    break;
	
	                case 218: 
	                    HangoutInviteReplyRequest.Builder builder2 = HangoutInviteReplyRequest.newBuilder();
	                    if(hasHangoutInviteReplyRequest())
	                        builder2.mergeFrom(getHangoutInviteReplyRequest());
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    setHangoutInviteReplyRequest(builder2.buildPartial());
	                    break;
	
	                case 226: 
	                    HangoutInviteFinishRequest.Builder builder1 = HangoutInviteFinishRequest.newBuilder();
	                    if(hasHangoutInviteFinishRequest())
	                        builder1.mergeFrom(getHangoutInviteFinishRequest());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setHangoutInviteFinishRequest(builder1.buildPartial());
	                    break;
	
	                case 234: 
	                    HangoutRingFinishRequest.Builder builder = HangoutRingFinishRequest.newBuilder();
	                    if(hasHangoutRingFinishRequest())
	                        builder.mergeFrom(getHangoutRingFinishRequest());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setHangoutRingFinishRequest(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final BunchClientRequest build()
	        {
	            BunchClientRequest bunchclientrequest = buildPartial();
	            if(!bunchclientrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("bunchclientrequest"));
	            else
	                return bunchclientrequest;
	        }
	
	        public final BunchClientRequest buildPartial()
	        {
	            BunchClientRequest bunchclientrequest = new BunchClientRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            bunchclientrequest.requestClientId_ = requestClientId_;
	            if((i & 2) == 2)
	                k |= 2;
	            bunchclientrequest.chatMessageRequest_ = chatMessageRequest_;
	            if((i & 4) == 4)
	                k |= 4;
	            bunchclientrequest.presenceRequest_ = presenceRequest_;
	            if((i & 8) == 8)
	                k |= 8;
	            bunchclientrequest.typingRequest_ = typingRequest_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            bunchclientrequest.receiptRequest_ = receiptRequest_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            bunchclientrequest.conversationRequest_ = conversationRequest_;
	            if((i & 0x40) == 64)
	                k |= 0x40;
	            bunchclientrequest.eventStreamRequest_ = eventStreamRequest_;
	            if((i & 0x80) == 128)
	                k |= 0x80;
	            bunchclientrequest.deviceRegistrationRequest_ = deviceRegistrationRequest_;
	            if((i & 0x100) == 256)
	                k |= 0x100;
	            bunchclientrequest.pingRequest_ = pingRequest_;
	            if((i & 0x200) == 512)
	                k |= 0x200;
	            bunchclientrequest.conversationListRequest_ = conversationListRequest_;
	            if((i & 0x400) == 1024)
	                k |= 0x400;
	            bunchclientrequest.userCreationRequest_ = userCreationRequest_;
	            if((i & 0x800) == 2048)
	                k |= 0x800;
	            bunchclientrequest.inviteRequest_ = inviteRequest_;
	            if((i & 0x1000) == 4096)
	                k |= 0x1000;
	            bunchclientrequest.leaveConversationRequest_ = leaveConversationRequest_;
	            if((i & 0x2000) == 8192)
	                k |= 0x2000;
	            bunchclientrequest.conversationRenameRequest_ = conversationRenameRequest_;
	            if((i & 0x4000) == 16384)
	                k |= 0x4000;
	            bunchclientrequest.tileEventRequest_ = tileEventRequest_;
	            if((i & 0x8000) == 32768)
	                k |= 0x8000;
	            bunchclientrequest.conversationPreferenceRequest_ = conversationPreferenceRequest_;
	            if((i & 0x10000) == 0x10000)
	                k |= 0x10000;
	            bunchclientrequest.replyToInviteRequest_ = replyToInviteRequest_;
	            if((i & 0x20000) == 0x20000)
	                k |= 0x20000;
	            bunchclientrequest.setAclsRequest_ = setAclsRequest_;
	            if((i & 0x40000) == 0x40000)
	                k |= 0x40000;
	            bunchclientrequest.userInfoRequest_ = userInfoRequest_;
	            if((i & 0x80000) == 0x80000)
	                k |= 0x80000;
	            bunchclientrequest.conversationSearchRequest_ = conversationSearchRequest_;
	            if((0x100000 & i) == 0x100000)
	                k |= 0x100000;
	            bunchclientrequest.eventSearchRequest_ = eventSearchRequest_;
	            if((0x200000 & i) == 0x200000)
	                k |= 0x200000;
	            bunchclientrequest.suggestionsRequest_ = suggestionsRequest_;
	            if((0x400000 & i) == 0x400000)
	                k |= 0x400000;
	            bunchclientrequest.globalConversationPreferencesRequest_ = globalConversationPreferencesRequest_;
	            if((0x800000 & i) == 0x800000)
	                k |= 0x800000;
	            bunchclientrequest.conversationJoinRequest_ = conversationJoinRequest_;
	            if((0x1000000 & i) == 0x1000000)
	                k |= 0x1000000;
	            bunchclientrequest.hangoutInviteRequest_ = hangoutInviteRequest_;
	            if((0x2000000 & i) == 0x2000000)
	                k |= 0x2000000;
	            bunchclientrequest.hangoutInviteKeepAliveRequest_ = hangoutInviteKeepAliveRequest_;
	            if((0x4000000 & i) == 0x4000000)
	                k |= 0x4000000;
	            bunchclientrequest.hangoutInviteReplyRequest_ = hangoutInviteReplyRequest_;
	            if((0x8000000 & i) == 0x8000000)
	                k |= 0x8000000;
	            bunchclientrequest.hangoutInviteFinishRequest_ = hangoutInviteFinishRequest_;
	            if((0x10000000 & i) == 0x10000000)
	                k |= 0x10000000;
	            bunchclientrequest.hangoutRingFinishRequest_ = hangoutRingFinishRequest_;
	            bunchclientrequest.bitField0_ = k;
	            return bunchclientrequest;
	        }
	
	        public final BunchClientRequest.Builder clear()
	        {
	            super.clear();
	            requestClientId_ = "";
	            bitField0_ = -2 & bitField0_;
	            chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            presenceRequest_ = PresenceRequest.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            typingRequest_ = TypingRequest.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            receiptRequest_ = ReceiptRequest.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            conversationRequest_ = NewConversationRequest.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            pingRequest_ = PingRequest.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            conversationListRequest_ = ConversationListRequest.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            userCreationRequest_ = UserCreationRequest.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            inviteRequest_ = InviteRequest.getDefaultInstance();
	            bitField0_ = 0xfffff7ff & bitField0_;
	            leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
	            bitField0_ = 0xffffdfff & bitField0_;
	            tileEventRequest_ = TileEventRequest.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
	            bitField0_ = 0xfffeffff & bitField0_;
	            setAclsRequest_ = SetAclsRequest.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            userInfoRequest_ = UserInfoRequest.getDefaultInstance();
	            bitField0_ = 0xfffbffff & bitField0_;
	            conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
	            bitField0_ = 0xfff7ffff & bitField0_;
	            eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
	            bitField0_ = 0xffefffff & bitField0_;
	            suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
	            bitField0_ = 0xffdfffff & bitField0_;
	            globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
	            bitField0_ = 0xffbfffff & bitField0_;
	            conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
	            bitField0_ = 0xff7fffff & bitField0_;
	            hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
	            bitField0_ = 0xfeffffff & bitField0_;
	            hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
	            bitField0_ = 0xfdffffff & bitField0_;
	            hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
	            bitField0_ = 0xfbffffff & bitField0_;
	            hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
	            bitField0_ = 0xf7ffffff & bitField0_;
	            hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
	            bitField0_ = 0xefffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearChatMessageRequest()
	        {
	            chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearConversationJoinRequest()
	        {
	            conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
	            bitField0_ = 0xff7fffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearConversationListRequest()
	        {
	            conversationListRequest_ = ConversationListRequest.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearConversationPreferenceRequest()
	        {
	            conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearConversationRenameRequest()
	        {
	            conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
	            bitField0_ = 0xffffdfff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearConversationRequest()
	        {
	            conversationRequest_ = NewConversationRequest.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearConversationSearchRequest()
	        {
	            conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
	            bitField0_ = 0xfff7ffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearDeviceRegistrationRequest()
	        {
	            deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearEventSearchRequest()
	        {
	            eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
	            bitField0_ = 0xffefffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearEventStreamRequest()
	        {
	            eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearGlobalConversationPreferencesRequest()
	        {
	            globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
	            bitField0_ = 0xffbfffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearHangoutInviteFinishRequest()
	        {
	            hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
	            bitField0_ = 0xf7ffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearHangoutInviteKeepAliveRequest()
	        {
	            hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
	            bitField0_ = 0xfdffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearHangoutInviteReplyRequest()
	        {
	            hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
	            bitField0_ = 0xfbffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearHangoutInviteRequest()
	        {
	            hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
	            bitField0_ = 0xfeffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearHangoutRingFinishRequest()
	        {
	            hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
	            bitField0_ = 0xefffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearInviteRequest()
	        {
	            inviteRequest_ = InviteRequest.getDefaultInstance();
	            bitField0_ = 0xfffff7ff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearLeaveConversationRequest()
	        {
	            leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearPingRequest()
	        {
	            pingRequest_ = PingRequest.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearPresenceRequest()
	        {
	            presenceRequest_ = PresenceRequest.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearReceiptRequest()
	        {
	            receiptRequest_ = ReceiptRequest.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearReplyToInviteRequest()
	        {
	            replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
	            bitField0_ = 0xfffeffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearRequestClientId()
	        {
	            bitField0_ = -2 & bitField0_;
	            requestClientId_ = BunchClientRequest.getDefaultInstance().getRequestClientId();
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearSetAclsRequest()
	        {
	            setAclsRequest_ = SetAclsRequest.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearSuggestionsRequest()
	        {
	            suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
	            bitField0_ = 0xffdfffff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearTileEventRequest()
	        {
	            tileEventRequest_ = TileEventRequest.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearTypingRequest()
	        {
	            typingRequest_ = TypingRequest.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearUserCreationRequest()
	        {
	            userCreationRequest_ = UserCreationRequest.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder clearUserInfoRequest()
	        {
	            userInfoRequest_ = UserInfoRequest.getDefaultInstance();
	            bitField0_ = 0xfffbffff & bitField0_;
	            return this;
	        }
	
	        public final ChatMessageRequest getChatMessageRequest()
	        {
	            return chatMessageRequest_;
	        }
	
	        public final ConversationJoinRequest getConversationJoinRequest()
	        {
	            return conversationJoinRequest_;
	        }
	
	        public final ConversationListRequest getConversationListRequest()
	        {
	            return conversationListRequest_;
	        }
	
	        public final ConversationPreferenceRequest getConversationPreferenceRequest()
	        {
	            return conversationPreferenceRequest_;
	        }
	
	        public final ConversationRenameRequest getConversationRenameRequest()
	        {
	            return conversationRenameRequest_;
	        }
	
	        public final NewConversationRequest getConversationRequest()
	        {
	            return conversationRequest_;
	        }
	
	        public final ConversationSearchRequest getConversationSearchRequest()
	        {
	            return conversationSearchRequest_;
	        }
	
	        public final BunchClientRequest getDefaultInstanceForType()
	        {
	            return BunchClientRequest.getDefaultInstance();
	        }
	
	        public final DeviceRegistrationRequest getDeviceRegistrationRequest()
	        {
	            return deviceRegistrationRequest_;
	        }
	
	        public final EventSearchRequest getEventSearchRequest()
	        {
	            return eventSearchRequest_;
	        }
	
	        public final EventStreamRequest getEventStreamRequest()
	        {
	            return eventStreamRequest_;
	        }
	
	        public final GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
	        {
	            return globalConversationPreferencesRequest_;
	        }
	
	        public final HangoutInviteFinishRequest getHangoutInviteFinishRequest()
	        {
	            return hangoutInviteFinishRequest_;
	        }
	
	        public final HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
	        {
	            return hangoutInviteKeepAliveRequest_;
	        }
	
	        public final HangoutInviteReplyRequest getHangoutInviteReplyRequest()
	        {
	            return hangoutInviteReplyRequest_;
	        }
	
	        public final HangoutInviteRequest getHangoutInviteRequest()
	        {
	            return hangoutInviteRequest_;
	        }
	
	        public final HangoutRingFinishRequest getHangoutRingFinishRequest()
	        {
	            return hangoutRingFinishRequest_;
	        }
	
	        public final InviteRequest getInviteRequest()
	        {
	            return inviteRequest_;
	        }
	
	        public final LeaveConversationRequest getLeaveConversationRequest()
	        {
	            return leaveConversationRequest_;
	        }
	
	        public final PingRequest getPingRequest()
	        {
	            return pingRequest_;
	        }
	
	        public final PresenceRequest getPresenceRequest()
	        {
	            return presenceRequest_;
	        }
	
	        public final ReceiptRequest getReceiptRequest()
	        {
	            return receiptRequest_;
	        }
	
	        public final ReplyToInviteRequest getReplyToInviteRequest()
	        {
	            return replyToInviteRequest_;
	        }
	
	        public final String getRequestClientId()
	        {
	            Object obj = requestClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final SetAclsRequest getSetAclsRequest()
	        {
	            return setAclsRequest_;
	        }
	
	        public final SuggestionsRequest getSuggestionsRequest()
	        {
	            return suggestionsRequest_;
	        }
	
	        public final TileEventRequest getTileEventRequest()
	        {
	            return tileEventRequest_;
	        }
	
	        public final TypingRequest getTypingRequest()
	        {
	            return typingRequest_;
	        }
	
	        public final UserCreationRequest getUserCreationRequest()
	        {
	            return userCreationRequest_;
	        }
	
	        public final UserInfoRequest getUserInfoRequest()
	        {
	            return userInfoRequest_;
	        }
	
	        public final boolean hasChatMessageRequest()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationJoinRequest()
	        {
	            boolean flag;
	            if((0x800000 & bitField0_) == 0x800000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationListRequest()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationPreferenceRequest()
	        {
	            boolean flag;
	            if((0x8000 & bitField0_) == 32768)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationRenameRequest()
	        {
	            boolean flag;
	            if((0x2000 & bitField0_) == 8192)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationRequest()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationSearchRequest()
	        {
	            boolean flag;
	            if((0x80000 & bitField0_) == 0x80000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasDeviceRegistrationRequest()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventSearchRequest()
	        {
	            boolean flag;
	            if((0x100000 & bitField0_) == 0x100000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventStreamRequest()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasGlobalConversationPreferencesRequest()
	        {
	            boolean flag;
	            if((0x400000 & bitField0_) == 0x400000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteFinishRequest()
	        {
	            boolean flag;
	            if((0x8000000 & bitField0_) == 0x8000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteKeepAliveRequest()
	        {
	            boolean flag;
	            if((0x2000000 & bitField0_) == 0x2000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteReplyRequest()
	        {
	            boolean flag;
	            if((0x4000000 & bitField0_) == 0x4000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteRequest()
	        {
	            boolean flag;
	            if((0x1000000 & bitField0_) == 0x1000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutRingFinishRequest()
	        {
	            boolean flag;
	            if((0x10000000 & bitField0_) == 0x10000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteRequest()
	        {
	            boolean flag;
	            if((0x800 & bitField0_) == 2048)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLeaveConversationRequest()
	        {
	            boolean flag;
	            if((0x1000 & bitField0_) == 4096)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPingRequest()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPresenceRequest()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceiptRequest()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReplyToInviteRequest()
	        {
	            boolean flag;
	            if((0x10000 & bitField0_) == 0x10000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRequestClientId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSetAclsRequest()
	        {
	            boolean flag;
	            if((0x20000 & bitField0_) == 0x20000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSuggestionsRequest()
	        {
	            boolean flag;
	            if((0x200000 & bitField0_) == 0x200000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileEventRequest()
	        {
	            boolean flag;
	            if((0x4000 & bitField0_) == 16384)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTypingRequest()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserCreationRequest()
	        {
	            boolean flag;
	            if((0x400 & bitField0_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserInfoRequest()
	        {
	            boolean flag;
	            if((0x40000 & bitField0_) == 0x40000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((BunchClientRequest)generatedmessagelite);
	        }
	
	        public final BunchClientRequest.Builder mergeFrom(BunchClientRequest bunchclientrequest)
	        {
	            if(bunchclientrequest == BunchClientRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(bunchclientrequest.hasRequestClientId())
	                setRequestClientId(bunchclientrequest.getRequestClientId());
	            if(bunchclientrequest.hasChatMessageRequest())
	            {
	                ChatMessageRequest chatmessagerequest = bunchclientrequest.getChatMessageRequest();
	                if((2 & bitField0_) == 2 && chatMessageRequest_ != ChatMessageRequest.getDefaultInstance())
	                    chatMessageRequest_ = ChatMessageRequest.newBuilder(chatMessageRequest_).mergeFrom(chatmessagerequest).buildPartial();
	                else
	                    chatMessageRequest_ = chatmessagerequest;
	                bitField0_ = 2 | bitField0_;
	            }
	            if(bunchclientrequest.hasPresenceRequest())
	            {
	                PresenceRequest presencerequest = bunchclientrequest.getPresenceRequest();
	                if((4 & bitField0_) == 4 && presenceRequest_ != PresenceRequest.getDefaultInstance())
	                    presenceRequest_ = PresenceRequest.newBuilder(presenceRequest_).mergeFrom(presencerequest).buildPartial();
	                else
	                    presenceRequest_ = presencerequest;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(bunchclientrequest.hasTypingRequest())
	            {
	                TypingRequest typingrequest = bunchclientrequest.getTypingRequest();
	                if((8 & bitField0_) == 8 && typingRequest_ != TypingRequest.getDefaultInstance())
	                    typingRequest_ = TypingRequest.newBuilder(typingRequest_).mergeFrom(typingrequest).buildPartial();
	                else
	                    typingRequest_ = typingrequest;
	                bitField0_ = 8 | bitField0_;
	            }
	            if(bunchclientrequest.hasReceiptRequest())
	            {
	                ReceiptRequest receiptrequest = bunchclientrequest.getReceiptRequest();
	                if((0x10 & bitField0_) == 16 && receiptRequest_ != ReceiptRequest.getDefaultInstance())
	                    receiptRequest_ = ReceiptRequest.newBuilder(receiptRequest_).mergeFrom(receiptrequest).buildPartial();
	                else
	                    receiptRequest_ = receiptrequest;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            if(bunchclientrequest.hasConversationRequest())
	            {
	                NewConversationRequest newconversationrequest = bunchclientrequest.getConversationRequest();
	                if((0x20 & bitField0_) == 32 && conversationRequest_ != NewConversationRequest.getDefaultInstance())
	                    conversationRequest_ = NewConversationRequest.newBuilder(conversationRequest_).mergeFrom(newconversationrequest).buildPartial();
	                else
	                    conversationRequest_ = newconversationrequest;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            if(bunchclientrequest.hasEventStreamRequest())
	            {
	                EventStreamRequest eventstreamrequest = bunchclientrequest.getEventStreamRequest();
	                if((0x40 & bitField0_) == 64 && eventStreamRequest_ != EventStreamRequest.getDefaultInstance())
	                    eventStreamRequest_ = EventStreamRequest.newBuilder(eventStreamRequest_).mergeFrom(eventstreamrequest).buildPartial();
	                else
	                    eventStreamRequest_ = eventstreamrequest;
	                bitField0_ = 0x40 | bitField0_;
	            }
	            if(bunchclientrequest.hasDeviceRegistrationRequest())
	            {
	                DeviceRegistrationRequest deviceregistrationrequest = bunchclientrequest.getDeviceRegistrationRequest();
	                if((0x80 & bitField0_) == 128 && deviceRegistrationRequest_ != DeviceRegistrationRequest.getDefaultInstance())
	                    deviceRegistrationRequest_ = DeviceRegistrationRequest.newBuilder(deviceRegistrationRequest_).mergeFrom(deviceregistrationrequest).buildPartial();
	                else
	                    deviceRegistrationRequest_ = deviceregistrationrequest;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            if(bunchclientrequest.hasPingRequest())
	            {
	                PingRequest pingrequest = bunchclientrequest.getPingRequest();
	                if((0x100 & bitField0_) == 256 && pingRequest_ != PingRequest.getDefaultInstance())
	                    pingRequest_ = PingRequest.newBuilder(pingRequest_).mergeFrom(pingrequest).buildPartial();
	                else
	                    pingRequest_ = pingrequest;
	                bitField0_ = 0x100 | bitField0_;
	            }
	            if(bunchclientrequest.hasConversationListRequest())
	            {
	                ConversationListRequest conversationlistrequest = bunchclientrequest.getConversationListRequest();
	                if((0x200 & bitField0_) == 512 && conversationListRequest_ != ConversationListRequest.getDefaultInstance())
	                    conversationListRequest_ = ConversationListRequest.newBuilder(conversationListRequest_).mergeFrom(conversationlistrequest).buildPartial();
	                else
	                    conversationListRequest_ = conversationlistrequest;
	                bitField0_ = 0x200 | bitField0_;
	            }
	            if(bunchclientrequest.hasUserCreationRequest())
	            {
	                UserCreationRequest usercreationrequest = bunchclientrequest.getUserCreationRequest();
	                if((0x400 & bitField0_) == 1024 && userCreationRequest_ != UserCreationRequest.getDefaultInstance())
	                    userCreationRequest_ = UserCreationRequest.newBuilder(userCreationRequest_).mergeFrom(usercreationrequest).buildPartial();
	                else
	                    userCreationRequest_ = usercreationrequest;
	                bitField0_ = 0x400 | bitField0_;
	            }
	            if(bunchclientrequest.hasInviteRequest())
	            {
	                InviteRequest inviterequest = bunchclientrequest.getInviteRequest();
	                if((0x800 & bitField0_) == 2048 && inviteRequest_ != InviteRequest.getDefaultInstance())
	                    inviteRequest_ = InviteRequest.newBuilder(inviteRequest_).mergeFrom(inviterequest).buildPartial();
	                else
	                    inviteRequest_ = inviterequest;
	                bitField0_ = 0x800 | bitField0_;
	            }
	            if(bunchclientrequest.hasLeaveConversationRequest())
	            {
	                LeaveConversationRequest leaveconversationrequest = bunchclientrequest.getLeaveConversationRequest();
	                if((0x1000 & bitField0_) == 4096 && leaveConversationRequest_ != LeaveConversationRequest.getDefaultInstance())
	                    leaveConversationRequest_ = LeaveConversationRequest.newBuilder(leaveConversationRequest_).mergeFrom(leaveconversationrequest).buildPartial();
	                else
	                    leaveConversationRequest_ = leaveconversationrequest;
	                bitField0_ = 0x1000 | bitField0_;
	            }
	            if(bunchclientrequest.hasConversationRenameRequest())
	            {
	                ConversationRenameRequest conversationrenamerequest = bunchclientrequest.getConversationRenameRequest();
	                if((0x2000 & bitField0_) == 8192 && conversationRenameRequest_ != ConversationRenameRequest.getDefaultInstance())
	                    conversationRenameRequest_ = ConversationRenameRequest.newBuilder(conversationRenameRequest_).mergeFrom(conversationrenamerequest).buildPartial();
	                else
	                    conversationRenameRequest_ = conversationrenamerequest;
	                bitField0_ = 0x2000 | bitField0_;
	            }
	            if(bunchclientrequest.hasTileEventRequest())
	            {
	                TileEventRequest tileeventrequest = bunchclientrequest.getTileEventRequest();
	                if((0x4000 & bitField0_) == 16384 && tileEventRequest_ != TileEventRequest.getDefaultInstance())
	                    tileEventRequest_ = TileEventRequest.newBuilder(tileEventRequest_).mergeFrom(tileeventrequest).buildPartial();
	                else
	                    tileEventRequest_ = tileeventrequest;
	                bitField0_ = 0x4000 | bitField0_;
	            }
	            if(bunchclientrequest.hasConversationPreferenceRequest())
	            {
	                ConversationPreferenceRequest conversationpreferencerequest = bunchclientrequest.getConversationPreferenceRequest();
	                if((0x8000 & bitField0_) == 32768 && conversationPreferenceRequest_ != ConversationPreferenceRequest.getDefaultInstance())
	                    conversationPreferenceRequest_ = ConversationPreferenceRequest.newBuilder(conversationPreferenceRequest_).mergeFrom(conversationpreferencerequest).buildPartial();
	                else
	                    conversationPreferenceRequest_ = conversationpreferencerequest;
	                bitField0_ = 0x8000 | bitField0_;
	            }
	            if(bunchclientrequest.hasReplyToInviteRequest())
	            {
	                ReplyToInviteRequest replytoinviterequest = bunchclientrequest.getReplyToInviteRequest();
	                if((0x10000 & bitField0_) == 0x10000 && replyToInviteRequest_ != ReplyToInviteRequest.getDefaultInstance())
	                    replyToInviteRequest_ = ReplyToInviteRequest.newBuilder(replyToInviteRequest_).mergeFrom(replytoinviterequest).buildPartial();
	                else
	                    replyToInviteRequest_ = replytoinviterequest;
	                bitField0_ = 0x10000 | bitField0_;
	            }
	            if(bunchclientrequest.hasSetAclsRequest())
	            {
	                SetAclsRequest setaclsrequest = bunchclientrequest.getSetAclsRequest();
	                if((0x20000 & bitField0_) == 0x20000 && setAclsRequest_ != SetAclsRequest.getDefaultInstance())
	                    setAclsRequest_ = SetAclsRequest.newBuilder(setAclsRequest_).mergeFrom(setaclsrequest).buildPartial();
	                else
	                    setAclsRequest_ = setaclsrequest;
	                bitField0_ = 0x20000 | bitField0_;
	            }
	            if(bunchclientrequest.hasUserInfoRequest())
	            {
	                UserInfoRequest userinforequest = bunchclientrequest.getUserInfoRequest();
	                if((0x40000 & bitField0_) == 0x40000 && userInfoRequest_ != UserInfoRequest.getDefaultInstance())
	                    userInfoRequest_ = UserInfoRequest.newBuilder(userInfoRequest_).mergeFrom(userinforequest).buildPartial();
	                else
	                    userInfoRequest_ = userinforequest;
	                bitField0_ = 0x40000 | bitField0_;
	            }
	            if(bunchclientrequest.hasConversationSearchRequest())
	            {
	                ConversationSearchRequest conversationsearchrequest = bunchclientrequest.getConversationSearchRequest();
	                if((0x80000 & bitField0_) == 0x80000 && conversationSearchRequest_ != ConversationSearchRequest.getDefaultInstance())
	                    conversationSearchRequest_ = ConversationSearchRequest.newBuilder(conversationSearchRequest_).mergeFrom(conversationsearchrequest).buildPartial();
	                else
	                    conversationSearchRequest_ = conversationsearchrequest;
	                bitField0_ = 0x80000 | bitField0_;
	            }
	            if(bunchclientrequest.hasEventSearchRequest())
	            {
	                EventSearchRequest eventsearchrequest = bunchclientrequest.getEventSearchRequest();
	                if((0x100000 & bitField0_) == 0x100000 && eventSearchRequest_ != EventSearchRequest.getDefaultInstance())
	                    eventSearchRequest_ = EventSearchRequest.newBuilder(eventSearchRequest_).mergeFrom(eventsearchrequest).buildPartial();
	                else
	                    eventSearchRequest_ = eventsearchrequest;
	                bitField0_ = 0x100000 | bitField0_;
	            }
	            if(bunchclientrequest.hasSuggestionsRequest())
	            {
	                SuggestionsRequest suggestionsrequest = bunchclientrequest.getSuggestionsRequest();
	                if((0x200000 & bitField0_) == 0x200000 && suggestionsRequest_ != SuggestionsRequest.getDefaultInstance())
	                    suggestionsRequest_ = SuggestionsRequest.newBuilder(suggestionsRequest_).mergeFrom(suggestionsrequest).buildPartial();
	                else
	                    suggestionsRequest_ = suggestionsrequest;
	                bitField0_ = 0x200000 | bitField0_;
	            }
	            if(bunchclientrequest.hasGlobalConversationPreferencesRequest())
	            {
	                GlobalConversationPreferencesRequest globalconversationpreferencesrequest = bunchclientrequest.getGlobalConversationPreferencesRequest();
	                if((0x400000 & bitField0_) == 0x400000 && globalConversationPreferencesRequest_ != GlobalConversationPreferencesRequest.getDefaultInstance())
	                    globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.newBuilder(globalConversationPreferencesRequest_).mergeFrom(globalconversationpreferencesrequest).buildPartial();
	                else
	                    globalConversationPreferencesRequest_ = globalconversationpreferencesrequest;
	                bitField0_ = 0x400000 | bitField0_;
	            }
	            if(bunchclientrequest.hasConversationJoinRequest())
	            {
	                ConversationJoinRequest conversationjoinrequest = bunchclientrequest.getConversationJoinRequest();
	                if((0x800000 & bitField0_) == 0x800000 && conversationJoinRequest_ != ConversationJoinRequest.getDefaultInstance())
	                    conversationJoinRequest_ = ConversationJoinRequest.newBuilder(conversationJoinRequest_).mergeFrom(conversationjoinrequest).buildPartial();
	                else
	                    conversationJoinRequest_ = conversationjoinrequest;
	                bitField0_ = 0x800000 | bitField0_;
	            }
	            if(bunchclientrequest.hasHangoutInviteRequest())
	            {
	                HangoutInviteRequest hangoutinviterequest = bunchclientrequest.getHangoutInviteRequest();
	                if((0x1000000 & bitField0_) == 0x1000000 && hangoutInviteRequest_ != HangoutInviteRequest.getDefaultInstance())
	                    hangoutInviteRequest_ = HangoutInviteRequest.newBuilder(hangoutInviteRequest_).mergeFrom(hangoutinviterequest).buildPartial();
	                else
	                    hangoutInviteRequest_ = hangoutinviterequest;
	                bitField0_ = 0x1000000 | bitField0_;
	            }
	            if(bunchclientrequest.hasHangoutInviteKeepAliveRequest())
	            {
	                HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest = bunchclientrequest.getHangoutInviteKeepAliveRequest();
	                if((0x2000000 & bitField0_) == 0x2000000 && hangoutInviteKeepAliveRequest_ != HangoutInviteKeepAliveRequest.getDefaultInstance())
	                    hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.newBuilder(hangoutInviteKeepAliveRequest_).mergeFrom(hangoutinvitekeepaliverequest).buildPartial();
	                else
	                    hangoutInviteKeepAliveRequest_ = hangoutinvitekeepaliverequest;
	                bitField0_ = 0x2000000 | bitField0_;
	            }
	            if(bunchclientrequest.hasHangoutInviteReplyRequest())
	            {
	                HangoutInviteReplyRequest hangoutinvitereplyrequest = bunchclientrequest.getHangoutInviteReplyRequest();
	                if((0x4000000 & bitField0_) == 0x4000000 && hangoutInviteReplyRequest_ != HangoutInviteReplyRequest.getDefaultInstance())
	                    hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.newBuilder(hangoutInviteReplyRequest_).mergeFrom(hangoutinvitereplyrequest).buildPartial();
	                else
	                    hangoutInviteReplyRequest_ = hangoutinvitereplyrequest;
	                bitField0_ = 0x4000000 | bitField0_;
	            }
	            if(bunchclientrequest.hasHangoutInviteFinishRequest())
	            {
	                HangoutInviteFinishRequest hangoutinvitefinishrequest = bunchclientrequest.getHangoutInviteFinishRequest();
	                if((0x8000000 & bitField0_) == 0x8000000 && hangoutInviteFinishRequest_ != HangoutInviteFinishRequest.getDefaultInstance())
	                    hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.newBuilder(hangoutInviteFinishRequest_).mergeFrom(hangoutinvitefinishrequest).buildPartial();
	                else
	                    hangoutInviteFinishRequest_ = hangoutinvitefinishrequest;
	                bitField0_ = 0x8000000 | bitField0_;
	            }
	            if(bunchclientrequest.hasHangoutRingFinishRequest())
	            {
	                HangoutRingFinishRequest hangoutringfinishrequest = bunchclientrequest.getHangoutRingFinishRequest();
	                if((0x10000000 & bitField0_) == 0x10000000 && hangoutRingFinishRequest_ != HangoutRingFinishRequest.getDefaultInstance())
	                    hangoutRingFinishRequest_ = HangoutRingFinishRequest.newBuilder(hangoutRingFinishRequest_).mergeFrom(hangoutringfinishrequest).buildPartial();
	                else
	                    hangoutRingFinishRequest_ = hangoutringfinishrequest;
	                bitField0_ = 0x10000000 | bitField0_;
	            }
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setChatMessageRequest(ChatMessageRequest.Builder builder)
	        {
	            chatMessageRequest_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setChatMessageRequest(ChatMessageRequest chatmessagerequest)
	        {
	            if(chatmessagerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                chatMessageRequest_ = chatmessagerequest;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setConversationJoinRequest(ConversationJoinRequest.Builder builder)
	        {
	            conversationJoinRequest_ = builder.build();
	            bitField0_ = 0x800000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setConversationJoinRequest(ConversationJoinRequest conversationjoinrequest)
	        {
	            if(conversationjoinrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationJoinRequest_ = conversationjoinrequest;
	                bitField0_ = 0x800000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setConversationListRequest(ConversationListRequest.Builder builder)
	        {
	            conversationListRequest_ = builder.build();
	            bitField0_ = 0x200 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setConversationListRequest(ConversationListRequest conversationlistrequest)
	        {
	            if(conversationlistrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationListRequest_ = conversationlistrequest;
	                bitField0_ = 0x200 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setConversationPreferenceRequest(ConversationPreferenceRequest.Builder builder)
	        {
	            conversationPreferenceRequest_ = builder.build();
	            bitField0_ = 0x8000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setConversationPreferenceRequest(ConversationPreferenceRequest conversationpreferencerequest)
	        {
	            if(conversationpreferencerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationPreferenceRequest_ = conversationpreferencerequest;
	                bitField0_ = 0x8000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setConversationRenameRequest(ConversationRenameRequest.Builder builder)
	        {
	            conversationRenameRequest_ = builder.build();
	            bitField0_ = 0x2000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setConversationRenameRequest(ConversationRenameRequest conversationrenamerequest)
	        {
	            if(conversationrenamerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationRenameRequest_ = conversationrenamerequest;
	                bitField0_ = 0x2000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setConversationRequest(NewConversationRequest.Builder builder)
	        {
	            conversationRequest_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setConversationRequest(NewConversationRequest newconversationrequest)
	        {
	            if(newconversationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationRequest_ = newconversationrequest;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setConversationSearchRequest(ConversationSearchRequest.Builder builder)
	        {
	            conversationSearchRequest_ = builder.build();
	            bitField0_ = 0x80000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setConversationSearchRequest(ConversationSearchRequest conversationsearchrequest)
	        {
	            if(conversationsearchrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationSearchRequest_ = conversationsearchrequest;
	                bitField0_ = 0x80000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setDeviceRegistrationRequest(DeviceRegistrationRequest.Builder builder)
	        {
	            deviceRegistrationRequest_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setDeviceRegistrationRequest(DeviceRegistrationRequest deviceregistrationrequest)
	        {
	            if(deviceregistrationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                deviceRegistrationRequest_ = deviceregistrationrequest;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setEventSearchRequest(EventSearchRequest.Builder builder)
	        {
	            eventSearchRequest_ = builder.build();
	            bitField0_ = 0x100000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setEventSearchRequest(EventSearchRequest eventsearchrequest)
	        {
	            if(eventsearchrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventSearchRequest_ = eventsearchrequest;
	                bitField0_ = 0x100000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setEventStreamRequest(EventStreamRequest.Builder builder)
	        {
	            eventStreamRequest_ = builder.build();
	            bitField0_ = 0x40 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setEventStreamRequest(EventStreamRequest eventstreamrequest)
	        {
	            if(eventstreamrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventStreamRequest_ = eventstreamrequest;
	                bitField0_ = 0x40 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setGlobalConversationPreferencesRequest(GlobalConversationPreferencesRequest.Builder builder)
	        {
	            globalConversationPreferencesRequest_ = builder.build();
	            bitField0_ = 0x400000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setGlobalConversationPreferencesRequest(GlobalConversationPreferencesRequest globalconversationpreferencesrequest)
	        {
	            if(globalconversationpreferencesrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                globalConversationPreferencesRequest_ = globalconversationpreferencesrequest;
	                bitField0_ = 0x400000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteFinishRequest(HangoutInviteFinishRequest.Builder builder)
	        {
	            hangoutInviteFinishRequest_ = builder.build();
	            bitField0_ = 0x8000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteFinishRequest(HangoutInviteFinishRequest hangoutinvitefinishrequest)
	        {
	            if(hangoutinvitefinishrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteFinishRequest_ = hangoutinvitefinishrequest;
	                bitField0_ = 0x8000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteKeepAliveRequest(HangoutInviteKeepAliveRequest.Builder builder)
	        {
	            hangoutInviteKeepAliveRequest_ = builder.build();
	            bitField0_ = 0x2000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteKeepAliveRequest(HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest)
	        {
	            if(hangoutinvitekeepaliverequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteKeepAliveRequest_ = hangoutinvitekeepaliverequest;
	                bitField0_ = 0x2000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteReplyRequest(HangoutInviteReplyRequest.Builder builder)
	        {
	            hangoutInviteReplyRequest_ = builder.build();
	            bitField0_ = 0x4000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteReplyRequest(HangoutInviteReplyRequest hangoutinvitereplyrequest)
	        {
	            if(hangoutinvitereplyrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteReplyRequest_ = hangoutinvitereplyrequest;
	                bitField0_ = 0x4000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteRequest(HangoutInviteRequest.Builder builder)
	        {
	            hangoutInviteRequest_ = builder.build();
	            bitField0_ = 0x1000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setHangoutInviteRequest(HangoutInviteRequest hangoutinviterequest)
	        {
	            if(hangoutinviterequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteRequest_ = hangoutinviterequest;
	                bitField0_ = 0x1000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setHangoutRingFinishRequest(HangoutRingFinishRequest.Builder builder)
	        {
	            hangoutRingFinishRequest_ = builder.build();
	            bitField0_ = 0x10000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setHangoutRingFinishRequest(HangoutRingFinishRequest hangoutringfinishrequest)
	        {
	            if(hangoutringfinishrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutRingFinishRequest_ = hangoutringfinishrequest;
	                bitField0_ = 0x10000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setInviteRequest(InviteRequest.Builder builder)
	        {
	            inviteRequest_ = builder.build();
	            bitField0_ = 0x800 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setInviteRequest(InviteRequest inviterequest)
	        {
	            if(inviterequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                inviteRequest_ = inviterequest;
	                bitField0_ = 0x800 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setLeaveConversationRequest(LeaveConversationRequest.Builder builder)
	        {
	            leaveConversationRequest_ = builder.build();
	            bitField0_ = 0x1000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setLeaveConversationRequest(LeaveConversationRequest leaveconversationrequest)
	        {
	            if(leaveconversationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                leaveConversationRequest_ = leaveconversationrequest;
	                bitField0_ = 0x1000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setPingRequest(PingRequest.Builder builder)
	        {
	            pingRequest_ = builder.build();
	            bitField0_ = 0x100 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setPingRequest(PingRequest pingrequest)
	        {
	            if(pingrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                pingRequest_ = pingrequest;
	                bitField0_ = 0x100 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setPresenceRequest(PresenceRequest.Builder builder)
	        {
	            presenceRequest_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setPresenceRequest(PresenceRequest presencerequest)
	        {
	            if(presencerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                presenceRequest_ = presencerequest;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setReceiptRequest(ReceiptRequest.Builder builder)
	        {
	            receiptRequest_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setReceiptRequest(ReceiptRequest receiptrequest)
	        {
	            if(receiptrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                receiptRequest_ = receiptrequest;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setReplyToInviteRequest(ReplyToInviteRequest.Builder builder)
	        {
	            replyToInviteRequest_ = builder.build();
	            bitField0_ = 0x10000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setReplyToInviteRequest(ReplyToInviteRequest replytoinviterequest)
	        {
	            if(replytoinviterequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                replyToInviteRequest_ = replytoinviterequest;
	                bitField0_ = 0x10000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setRequestClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                requestClientId_ = s;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setSetAclsRequest(SetAclsRequest.Builder builder)
	        {
	            setAclsRequest_ = builder.build();
	            bitField0_ = 0x20000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setSetAclsRequest(SetAclsRequest setaclsrequest)
	        {
	            if(setaclsrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                setAclsRequest_ = setaclsrequest;
	                bitField0_ = 0x20000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setSuggestionsRequest(SuggestionsRequest.Builder builder)
	        {
	            suggestionsRequest_ = builder.build();
	            bitField0_ = 0x200000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setSuggestionsRequest(SuggestionsRequest suggestionsrequest)
	        {
	            if(suggestionsrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                suggestionsRequest_ = suggestionsrequest;
	                bitField0_ = 0x200000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setTileEventRequest(TileEventRequest.Builder builder)
	        {
	            tileEventRequest_ = builder.build();
	            bitField0_ = 0x4000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setTileEventRequest(TileEventRequest tileeventrequest)
	        {
	            if(tileeventrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                tileEventRequest_ = tileeventrequest;
	                bitField0_ = 0x4000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setTypingRequest(TypingRequest.Builder builder)
	        {
	            typingRequest_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setTypingRequest(TypingRequest typingrequest)
	        {
	            if(typingrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                typingRequest_ = typingrequest;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setUserCreationRequest(UserCreationRequest.Builder builder)
	        {
	            userCreationRequest_ = builder.build();
	            bitField0_ = 0x400 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setUserCreationRequest(UserCreationRequest usercreationrequest)
	        {
	            if(usercreationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userCreationRequest_ = usercreationrequest;
	                bitField0_ = 0x400 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchClientRequest.Builder setUserInfoRequest(UserInfoRequest.Builder builder)
	        {
	            userInfoRequest_ = builder.build();
	            bitField0_ = 0x40000 | bitField0_;
	            return this;
	        }
	
	        public final BunchClientRequest.Builder setUserInfoRequest(UserInfoRequest userinforequest)
	        {
	            if(userinforequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userInfoRequest_ = userinforequest;
	                bitField0_ = 0x40000 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//===================================================================================================
	//								Suggestion
	//===================================================================================================
	public static interface SuggestionOrBuilder extends MessageLiteOrBuilder {

		public abstract Data.Participant getSuggestedUser(int i);

		public abstract int getSuggestedUserCount();

		public abstract List getSuggestedUserList();
	}
	
	public static final class Suggestion extends GeneratedMessageLite implements SuggestionOrBuilder {

		private static final Suggestion defaultInstance;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private List suggestedUser_;

	    static 
	    {
	        Suggestion suggestion = new Suggestion();
	        defaultInstance = suggestion;
	        suggestion.suggestedUser_ = Collections.emptyList();
	    }

	    private Suggestion()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    Suggestion(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    public static Suggestion getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public final Suggestion getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 0;
	            for(int k = 0; k < suggestedUser_.size(); k++)
	                j += CodedOutputStream.computeMessageSize(1, (MessageLite)suggestedUser_.get(k));
	
	            memoizedSerializedSize = j;
	            l = j;
	        }
	        return l;
	    }
	
	    public final Data.Participant getSuggestedUser(int i)
	    {
	        return (Data.Participant)suggestedUser_.get(i);
	    }
	
	    public final int getSuggestedUserCount()
	    {
	        return suggestedUser_.size();
	    }
	
	    public final List getSuggestedUserList()
	    {
	        return suggestedUser_;
	    }
	
	    public final Data.ParticipantOrBuilder getSuggestedUserOrBuilder(int i)
	    {
	        return (Data.ParticipantOrBuilder)suggestedUser_.get(i);
	    }
	
	    public final List getSuggestedUserOrBuilderList()
	    {
	        return suggestedUser_;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	    
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
        {
            return new Builder();
        }

        public final com.google.protobuf.MessageLite.Builder toBuilder()
        {
            return new Builder().mergeFrom(this);
        }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException
	    {
	        getSerializedSize();
	        for(int i = 0; i < suggestedUser_.size(); i++)
	            codedoutputstream.writeMessage(1, (MessageLite)suggestedUser_.get(i));
	
	    }
	    
	    //==============================================================================
	    //							Builder
	    //==============================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements SuggestionOrBuilder {

			private int bitField0_;
	        private List suggestedUser_;

	        private Builder()
	        {
	            suggestedUser_ = Collections.emptyList();
	        }
	        
	        public Suggestion.Builder clone()
	        {
	            return (new Suggestion.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureSuggestedUserIsMutable()
	        {
	            if((1 & bitField0_) != 1)
	            {
	                suggestedUser_ = new ArrayList(suggestedUser_);
	                bitField0_ = 1 | bitField0_;
	            }
	        }
	
	        public Suggestion.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    Data.Participant.Builder builder = Data.Participant.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addSuggestedUser(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final Suggestion.Builder addAllSuggestedUser(Iterable iterable)
	        {
	            ensureSuggestedUserIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, suggestedUser_);
	            return this;
	        }
	
	        public final Suggestion.Builder addSuggestedUser(int i, Data.Participant.Builder builder)
	        {
	            ensureSuggestedUserIsMutable();
	            suggestedUser_.add(i, builder.build());
	            return this;
	        }
	
	        public final Suggestion.Builder addSuggestedUser(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureSuggestedUserIsMutable();
	                suggestedUser_.add(i, participant);
	                return this;
	            }
	        }
	
	        public final Suggestion.Builder addSuggestedUser(Data.Participant.Builder builder)
	        {
	            ensureSuggestedUserIsMutable();
	            suggestedUser_.add(builder.build());
	            return this;
	        }
	
	        public final Suggestion.Builder addSuggestedUser(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureSuggestedUserIsMutable();
	                suggestedUser_.add(participant);
	                return this;
	            }
	        }
	
	        public final Suggestion build()
	        {
	            Suggestion suggestion = buildPartial();
	            if(!suggestion.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("suggestion"));
	            else
	                return suggestion;
	        }
	
	        public final Suggestion buildPartial()
	        {
	            Suggestion suggestion = new Suggestion(this);
	            int _tmp = bitField0_;
	            if((1 & bitField0_) == 1)
	            {
	                suggestedUser_ = Collections.unmodifiableList(suggestedUser_);
	                bitField0_ = -2 & bitField0_;
	            }
	            suggestion.suggestedUser_ = suggestedUser_;
	            return suggestion;
	        }
	
	        public final Suggestion.Builder clear()
	        {
	            super.clear();
	            suggestedUser_ = Collections.emptyList();
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final Suggestion.Builder clearSuggestedUser()
	        {
	            suggestedUser_ = Collections.emptyList();
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final Suggestion getDefaultInstanceForType()
	        {
	            return Suggestion.getDefaultInstance();
	        }
	
	        public final Data.Participant getSuggestedUser(int i)
	        {
	            return (Data.Participant)suggestedUser_.get(i);
	        }
	
	        public final int getSuggestedUserCount()
	        {
	            return suggestedUser_.size();
	        }
	
	        public final List getSuggestedUserList()
	        {
	            return Collections.unmodifiableList(suggestedUser_);
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((Suggestion)lite);
			}
	        
	        public final Suggestion.Builder mergeFrom(Suggestion suggestion)
	        {
	            if(suggestion != Suggestion.getDefaultInstance() && !suggestion.suggestedUser_.isEmpty())
	                if(suggestedUser_.isEmpty())
	                {
	                    suggestedUser_ = suggestion.suggestedUser_;
	                    bitField0_ = -2 & bitField0_;
	                } else
	                {
	                    ensureSuggestedUserIsMutable();
	                    suggestedUser_.addAll(suggestion.suggestedUser_);
	                }
	            return this;
	        }
	
	        public final Suggestion.Builder setSuggestedUser(int i, Data.Participant.Builder builder)
	        {
	            ensureSuggestedUserIsMutable();
	            suggestedUser_.set(i, builder.build());
	            return this;
	        }
	
	        public final Suggestion.Builder setSuggestedUser(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureSuggestedUserIsMutable();
	                suggestedUser_.set(i, participant);
	                return this;
	            }
	        }
	    }
	}
	
	public static interface SuggestionsResponseOrBuilder extends
			MessageLiteOrBuilder {

		public abstract String getRequestError();

		public abstract Data.ResponseStatus getStatus();

		public abstract Suggestion getSuggestion(int i);

		public abstract int getSuggestionCount();

		public abstract List getSuggestionList();

		public abstract boolean hasRequestError();

		public abstract boolean hasStatus();
	}
	
	public static final class SuggestionsResponse extends GeneratedMessageLite implements SuggestionsResponseOrBuilder {
		
		private static final SuggestionsResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;
	    private List suggestion_;

	    static 
	    {
	        SuggestionsResponse suggestionsresponse = new SuggestionsResponse();
	        defaultInstance = suggestionsresponse;
	        suggestionsresponse.status_ = Data.ResponseStatus.OK;
	        suggestionsresponse.requestError_ = "";
	        suggestionsresponse.suggestion_ = Collections.emptyList();
	    }

	    private SuggestionsResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    SuggestionsResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    public static SuggestionsResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(SuggestionsResponse suggestionsresponse)
	    {
	        return new Builder().mergeFrom(suggestionsresponse);
	    }
	
	    public final SuggestionsResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            for(int l = 0; l < suggestion_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(3, (MessageLite)suggestion_.get(l));
	
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final Suggestion getSuggestion(int i)
	    {
	        return (Suggestion)suggestion_.get(i);
	    }
	
	    public final int getSuggestionCount()
	    {
	        return suggestion_.size();
	    }
	
	    public final List getSuggestionList()
	    {
	        return suggestion_;
	    }
	
	    public final SuggestionOrBuilder getSuggestionOrBuilder(int i)
	    {
	        return (SuggestionOrBuilder)suggestion_.get(i);
	    }
	
	    public final List getSuggestionOrBuilderList()
	    {
	        return suggestion_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	    
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
        {
            return new Builder();
        }

        public final com.google.protobuf.MessageLite.Builder toBuilder()
        {
            return new Builder().mergeFrom(this);
        }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	        for(int i = 0; i < suggestion_.size(); i++)
	            codedoutputstream.writeMessage(3, (MessageLite)suggestion_.get(i));
	
	    }
	    
	    //==============================================================================
	    //							Builder
	    //==============================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements SuggestionsResponseOrBuilder {
	    	
			private int bitField0_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;
	        private List suggestion_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	            suggestion_ = Collections.emptyList();
	        }
	        
	        public SuggestionsResponse.Builder clone()
	        {
	            return (new SuggestionsResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureSuggestionIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                suggestion_ = new ArrayList(suggestion_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public SuggestionsResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Suggestion.Builder builder = Suggestion.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addSuggestion(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final SuggestionsResponse.Builder addAllSuggestion(Iterable iterable)
	        {
	            ensureSuggestionIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, suggestion_);
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder addSuggestion(int i, Suggestion.Builder builder)
	        {
	            ensureSuggestionIsMutable();
	            suggestion_.add(i, builder.build());
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder addSuggestion(int i, Suggestion suggestion)
	        {
	            if(suggestion == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureSuggestionIsMutable();
	                suggestion_.add(i, suggestion);
	                return this;
	            }
	        }
	
	        public final SuggestionsResponse.Builder addSuggestion(Suggestion.Builder builder)
	        {
	            ensureSuggestionIsMutable();
	            suggestion_.add(builder.build());
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder addSuggestion(Suggestion suggestion)
	        {
	            if(suggestion == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureSuggestionIsMutable();
	                suggestion_.add(suggestion);
	                return this;
	            }
	        }
	
	        public final SuggestionsResponse build()
	        {
	            SuggestionsResponse suggestionsresponse = buildPartial();
	            if(!suggestionsresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("suggesionsresponse"));
	            else
	                return suggestionsresponse;
	        }
	
	        public final SuggestionsResponse buildPartial()
	        {
	            SuggestionsResponse suggestionsresponse = new SuggestionsResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            suggestionsresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            suggestionsresponse.requestError_ = requestError_;
	            if((4 & bitField0_) == 4)
	            {
	                suggestion_ = Collections.unmodifiableList(suggestion_);
	                bitField0_ = -5 & bitField0_;
	            }
	            suggestionsresponse.suggestion_ = suggestion_;
	            suggestionsresponse.bitField0_ = k;
	            return suggestionsresponse;
	        }
	
	        public final SuggestionsResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            suggestion_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = SuggestionsResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder clearSuggestion()
	        {
	            suggestion_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	        
	        public final SuggestionsResponse getDefaultInstanceForType()
	        {
	            return SuggestionsResponse.getDefaultInstance();
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final Suggestion getSuggestion(int i)
	        {
	            return (Suggestion)suggestion_.get(i);
	        }
	
	        public final int getSuggestionCount()
	        {
	            return suggestion_.size();
	        }
	
	        public final List getSuggestionList()
	        {
	            return Collections.unmodifiableList(suggestion_);
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((SuggestionsResponse)lite);
			}
	        
	        public final SuggestionsResponse.Builder mergeFrom(SuggestionsResponse suggestionsresponse)
	        {
	            if(suggestionsresponse == SuggestionsResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(suggestionsresponse.hasStatus())
	                setStatus(suggestionsresponse.getStatus());
	            if(suggestionsresponse.hasRequestError())
	                setRequestError(suggestionsresponse.getRequestError());
	            if(!suggestionsresponse.suggestion_.isEmpty())
	                if(suggestion_.isEmpty())
	                {
	                    suggestion_ = suggestionsresponse.suggestion_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureSuggestionIsMutable();
	                    suggestion_.addAll(suggestionsresponse.suggestion_);
	                }
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final SuggestionsResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final SuggestionsResponse.Builder setSuggestion(int i, Suggestion.Builder builder)
	        {
	            ensureSuggestionIsMutable();
	            suggestion_.set(i, builder.build());
	            return this;
	        }
	
	        public final SuggestionsResponse.Builder setSuggestion(int i, Suggestion suggestion)
	        {
	            if(suggestion == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureSuggestionIsMutable();
	                suggestion_.set(i, suggestion);
	                return this;
	            }
	        }
	    }
	}
	
	//======================================================================================
	//						ChatMessage
	//======================================================================================
	public static interface ChatMessageOrBuilder extends MessageLiteOrBuilder {

		public abstract Data.Content getContent(int i);

		public abstract int getContentCount();

		public abstract List getContentList();

		public abstract String getConversationId();

		public abstract String getId();

		public abstract String getMessageClientId();

		public abstract ChatMessage.ReceiverState getReceiverState();

		public abstract String getRecipientId(int i);

		public abstract int getRecipientIdCount();

		public abstract List getRecipientIdList();

		public abstract boolean getRetry();

		public abstract String getSenderId();

		public abstract String getShardingHint();

		public abstract long getTimestamp();

		public abstract boolean hasConversationId();

		public abstract boolean hasId();

		public abstract boolean hasMessageClientId();

		public abstract boolean hasReceiverState();

		public abstract boolean hasRetry();

		public abstract boolean hasSenderId();

		public abstract boolean hasShardingHint();

		public abstract boolean hasTimestamp();
	}
	
	public static interface ChatMessageRequestOrBuilder extends
			MessageLiteOrBuilder {

		public abstract Data.Content getContent(int i);

		public abstract int getContentCount();

		public abstract List getContentList();

		public abstract String getConversationId();

		public abstract String getMessageClientId();

		public abstract boolean getRetry();

		public abstract Data.StubbyInfo getStubbyInfo();

		public abstract boolean hasConversationId();

		public abstract boolean hasMessageClientId();

		public abstract boolean hasRetry();

		public abstract boolean hasStubbyInfo();
	}
	
	public static final class ChatMessageRequest extends GeneratedMessageLite implements ChatMessageRequestOrBuilder {
		
		private static final ChatMessageRequest defaultInstance;
	    private int bitField0_;
	    private List content_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object messageClientId_;
	    private boolean retry_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        ChatMessageRequest chatmessagerequest = new ChatMessageRequest();
	        defaultInstance = chatmessagerequest;
	        chatmessagerequest.messageClientId_ = "";
	        chatmessagerequest.conversationId_ = "";
	        chatmessagerequest.content_ = Collections.emptyList();
	        chatmessagerequest.retry_ = false;
	        chatmessagerequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private ChatMessageRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ChatMessageRequest(Builder builder)
	    {
	    	super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ChatMessageRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getMessageClientIdBytes()
	    {
	        Object obj = messageClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            messageClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ChatMessageRequest chatmessagerequest)
	    {
	        return new Builder().mergeFrom(chatmessagerequest);
	    }
	
	    public final Data.Content getContent(int i)
	    {
	        return (Data.Content)content_.get(i);
	    }
	
	    public final int getContentCount()
	    {
	        return content_.size();
	    }
	
	    public final List getContentList()
	    {
	        return content_;
	    }
	
	    public final Data.ContentOrBuilder getContentOrBuilder(int i)
	    {
	        return (Data.ContentOrBuilder)content_.get(i);
	    }
	
	    public final List getContentOrBuilderList()
	    {
	        return content_;
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ChatMessageRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getMessageClientId()
	    {
	        Object obj = messageClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                messageClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final boolean getRetry()
	    {
	        return retry_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getMessageClientIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            for(int l = 0; l < content_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(3, (MessageLite)content_.get(l));
	
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBoolSize(4, retry_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(5, stubbyInfo_);
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMessageClientId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRetry()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getMessageClientIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        for(int i = 0; i < content_.size(); i++)
	            codedoutputstream.writeMessage(3, (MessageLite)content_.get(i));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBool(4, retry_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(5, stubbyInfo_);
	    }
	    
	    
	    //==============================================================================
	    //						Builder
	    //==============================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ChatMessageRequestOrBuilder {
	    	
	    	private int bitField0_;
	        private List content_;
	        private Object conversationId_;
	        private Object messageClientId_;
	        private boolean retry_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            messageClientId_ = "";
	            conversationId_ = "";
	            content_ = Collections.emptyList();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	
	        public ChatMessageRequest.Builder clone()
	        {
	            return (new ChatMessageRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureContentIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                content_ = new ArrayList(content_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public ChatMessageRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    messageClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Data.Content.Builder builder1 = Data.Content.newBuilder();
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    addContent(builder1.buildPartial());
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 8 | bitField0_;
	                    retry_ = codedinputstream.readBool();
	                    break;
	
	                case 42: // '*'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ChatMessageRequest.Builder addAllContent(Iterable iterable)
	        {
	            ensureContentIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, content_);
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder addContent(int i, Data.Content.Builder builder)
	        {
	            ensureContentIsMutable();
	            content_.add(i, builder.build());
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder addContent(int i, Data.Content content)
	        {
	            if(content == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureContentIsMutable();
	                content_.add(i, content);
	                return this;
	            }
	        }
	
	        public final ChatMessageRequest.Builder addContent(Data.Content.Builder builder)
	        {
	            ensureContentIsMutable();
	            content_.add(builder.build());
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder addContent(Data.Content content)
	        {
	            if(content == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureContentIsMutable();
	                content_.add(content);
	                return this;
	            }
	        }
	
	        public final ChatMessageRequest build()
	        {
	            ChatMessageRequest chatmessagerequest = buildPartial();
	            if(!chatmessagerequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("chatmessagerequest"));
	            else
	                return chatmessagerequest;
	        }
	
	        public final ChatMessageRequest buildPartial()
	        {
	            ChatMessageRequest chatmessagerequest = new ChatMessageRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            chatmessagerequest.messageClientId_ = messageClientId_;
	            if((i & 2) == 2)
	                k |= 2;
	            chatmessagerequest.conversationId_ = conversationId_;
	            if((4 & bitField0_) == 4)
	            {
	                content_ = Collections.unmodifiableList(content_);
	                bitField0_ = -5 & bitField0_;
	            }
	            chatmessagerequest.content_ = content_;
	            if((i & 8) == 8)
	                k |= 4;
	            chatmessagerequest.retry_ = retry_;
	            if((i & 0x10) == 16)
	                k |= 8;
	            chatmessagerequest.stubbyInfo_ = stubbyInfo_;
	            chatmessagerequest.bitField0_ = k;
	            return chatmessagerequest;
	        }
	
	        public final ChatMessageRequest.Builder clear()
	        {
	            super.clear();
	            messageClientId_ = "";
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            content_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            retry_ = false;
	            bitField0_ = -9 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder clearContent()
	        {
	            content_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = ChatMessageRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder clearMessageClientId()
	        {
	            bitField0_ = -2 & bitField0_;
	            messageClientId_ = ChatMessageRequest.getDefaultInstance().getMessageClientId();
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder clearRetry()
	        {
	            bitField0_ = -9 & bitField0_;
	            retry_ = false;
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final Data.Content getContent(int i)
	        {
	            return (Data.Content)content_.get(i);
	        }
	
	        public final int getContentCount()
	        {
	            return content_.size();
	        }
	
	        public final List getContentList()
	        {
	            return Collections.unmodifiableList(content_);
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ChatMessageRequest getDefaultInstanceForType()
	        {
	            return ChatMessageRequest.getDefaultInstance();
	        }
	
	        public final String getMessageClientId()
	        {
	            Object obj = messageClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                messageClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean getRetry()
	        {
	            return retry_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMessageClientId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRetry()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	        
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((ChatMessageRequest)lite);
			}

			public final ChatMessageRequest.Builder mergeFrom(ChatMessageRequest chatmessagerequest)
	        {
	            if(chatmessagerequest == ChatMessageRequest.getDefaultInstance()) 
	            	return this;
	            
	            if(chatmessagerequest.hasMessageClientId())
	                setMessageClientId(chatmessagerequest.getMessageClientId());
	            if(chatmessagerequest.hasConversationId())
	                setConversationId(chatmessagerequest.getConversationId());
	            if(!chatmessagerequest.content_.isEmpty())
	                if(content_.isEmpty())
	                {
	                    content_ = chatmessagerequest.content_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureContentIsMutable();
	                    content_.addAll(chatmessagerequest.content_);
	                }
	            if(chatmessagerequest.hasRetry())
	                setRetry(chatmessagerequest.getRetry());
	            if(chatmessagerequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = chatmessagerequest.getStubbyInfo();
	                if((0x10 & bitField0_) == 16 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder setContent(int i, Data.Content.Builder builder)
	        {
	            ensureContentIsMutable();
	            content_.set(i, builder.build());
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder setContent(int i, Data.Content content)
	        {
	            if(content == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureContentIsMutable();
	                content_.set(i, content);
	                return this;
	            }
	        }
	
	        public final ChatMessageRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessageRequest.Builder setMessageClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                messageClientId_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessageRequest.Builder setRetry(boolean flag)
	        {
	            bitField0_ = 8 | bitField0_;
	            retry_ = flag;
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final ChatMessageRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
    	}
	}
	
	//==================================================================================================
	//									ChatMessageResponse
	//==================================================================================================
	public static interface ChatMessageResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getMessageClientId();
	
	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasMessageClientId();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	
	public static final class ChatMessageResponse extends GeneratedMessageLite implements ChatMessageResponseOrBuilder {
		
		private static final ChatMessageResponse defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object messageClientId_;
	    private Object requestError_;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        ChatMessageResponse chatmessageresponse = new ChatMessageResponse();
	        defaultInstance = chatmessageresponse;
	        chatmessageresponse.status_ = Data.ResponseStatus.OK;
	        chatmessageresponse.requestError_ = "";
	        chatmessageresponse.messageClientId_ = "";
	        chatmessageresponse.timestamp_ = 0L;
	        chatmessageresponse.conversationId_ = "";
	    }

	    private ChatMessageResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ChatMessageResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ChatMessageResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getMessageClientIdBytes()
	    {
	        Object obj = messageClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            messageClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ChatMessageResponse chatmessageresponse)
	    {
	        return new Builder().mergeFrom(chatmessageresponse);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ChatMessageResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getMessageClientId()
	    {
	        Object obj = messageClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                messageClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getMessageClientIdBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeInt64Size(4, timestamp_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeBytesSize(5, getConversationIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMessageClientId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getMessageClientIdBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeInt64(4, timestamp_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBytes(5, getConversationIdBytes());
	    }
	    
	    
	    //==========================================================================
	    //					Builder
	    //==========================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ChatMessageResponseOrBuilder {
	
			private int bitField0_;
	        private Object conversationId_;
	        private Object messageClientId_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	            messageClientId_ = "";
	            conversationId_ = "";
	        }
	        
	        public ChatMessageResponse.Builder clone()
	        {
	            return (new ChatMessageResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ChatMessageResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    messageClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 8 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 0x10 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ChatMessageResponse build()
	        {
	            ChatMessageResponse chatmessageresponse = buildPartial();
	            if(!chatmessageresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("chatmessageresponse"));
	            else
	                return chatmessageresponse;
	        }
	
	        public final ChatMessageResponse buildPartial()
	        {
	            ChatMessageResponse chatmessageresponse = new ChatMessageResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            chatmessageresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            chatmessageresponse.requestError_ = requestError_;
	            if((i & 4) == 4)
	                k |= 4;
	            chatmessageresponse.messageClientId_ = messageClientId_;
	            if((i & 8) == 8)
	                k |= 8;
	            chatmessageresponse.timestamp_ = timestamp_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            chatmessageresponse.conversationId_ = conversationId_;
	            chatmessageresponse.bitField0_ = k;
	            return chatmessageresponse;
	        }
	
	        public final ChatMessageResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            messageClientId_ = "";
	            bitField0_ = -5 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -9 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final ChatMessageResponse.Builder clearConversationId()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            conversationId_ = ChatMessageResponse.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ChatMessageResponse.Builder clearMessageClientId()
	        {
	            bitField0_ = -5 & bitField0_;
	            messageClientId_ = ChatMessageResponse.getDefaultInstance().getMessageClientId();
	            return this;
	        }
	
	        public final ChatMessageResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = ChatMessageResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final ChatMessageResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ChatMessageResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -9 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ChatMessageResponse getDefaultInstanceForType()
	        {
	            return ChatMessageResponse.getDefaultInstance();
	        }
	
	        public final String getMessageClientId()
	        {
	            Object obj = messageClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                messageClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMessageClientId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((ChatMessageResponse)lite);
			}
	        
	        public final ChatMessageResponse.Builder mergeFrom(ChatMessageResponse chatmessageresponse)
	        {
	            if(chatmessageresponse == ChatMessageResponse.getDefaultInstance()) 
	            	return this;
	            
	            if(chatmessageresponse.hasStatus())
	                setStatus(chatmessageresponse.getStatus());
	            if(chatmessageresponse.hasRequestError())
	                setRequestError(chatmessageresponse.getRequestError());
	            if(chatmessageresponse.hasMessageClientId())
	                setMessageClientId(chatmessageresponse.getMessageClientId());
	            if(chatmessageresponse.hasTimestamp())
	                setTimestamp(chatmessageresponse.getTimestamp());
	            if(chatmessageresponse.hasConversationId())
	                setConversationId(chatmessageresponse.getConversationId());
	            return this;
	        }
	
	        public final ChatMessageResponse.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessageResponse.Builder setMessageClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                messageClientId_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessageResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessageResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final ChatMessageResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 8 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//======================================================================================
	//						ClientConversation
	//======================================================================================
	public static interface ClientConversationOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationClientId();
	
	    public abstract Data.ConversationMetadata getConversationMetadata();
	
	    public abstract long getCreatedAt();
	
	    public abstract long getFirstEventTimestamp();
	
	    public abstract boolean getHidden();
	
	    public abstract String getId();
	
	    public abstract Data.Participant getInactiveParticipant(int i);
	
	    public abstract int getInactiveParticipantCount();
	
	    public abstract List getInactiveParticipantList();
	
	    public abstract Data.Participant getInviter();
	
	    public abstract ChatMessage getLastMessage();
	
	    public abstract EventStreamResponse.Event getLastPreviewEvent();
	
	    public abstract boolean getMuted();
	
	    public abstract String getName();
	
	    public abstract boolean getNeedsAccept();
	
	    public abstract boolean getOffTheRecord();
	
	    public abstract Data.Participant getParticipant(int i);
	
	    public abstract int getParticipantCount();
	
	    public abstract String getParticipantId(int i);
	
	    public abstract int getParticipantIdCount();
	
	    public abstract List getParticipantIdList();
	
	    public abstract List getParticipantList();
	
	    public abstract Data.ConversationType getType();
	
	    public abstract long getUnreadCount();
	
	    public abstract boolean hasConversationClientId();
	
	    public abstract boolean hasConversationMetadata();
	
	    public abstract boolean hasCreatedAt();
	
	    public abstract boolean hasFirstEventTimestamp();
	
	    public abstract boolean hasHidden();
	
	    public abstract boolean hasId();
	
	    public abstract boolean hasInviter();
	
	    public abstract boolean hasLastMessage();
	
	    public abstract boolean hasLastPreviewEvent();
	
	    public abstract boolean hasMuted();
	
	    public abstract boolean hasName();
	
	    public abstract boolean hasNeedsAccept();
	
	    public abstract boolean hasOffTheRecord();
	
	    public abstract boolean hasType();
	
	    public abstract boolean hasUnreadCount();
	}
	
	public static final class ClientConversation extends GeneratedMessageLite implements ClientConversationOrBuilder {

		private static final ClientConversation defaultInstance;
	    private int bitField0_;
	    private Object conversationClientId_;
	    private Data.ConversationMetadata conversationMetadata_;
	    private long createdAt_;
	    private long firstEventTimestamp_;
	    private boolean hidden_;
	    private Object id_;
	    private List inactiveParticipant_;
	    private Data.Participant inviter_;
	    private ChatMessage lastMessage_;
	    private EventStreamResponse.Event lastPreviewEvent_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private boolean muted_;
	    private Object name_;
	    private boolean needsAccept_;
	    private boolean offTheRecord_;
	    private LazyStringList participantId_;
	    private List participant_;
	    private Data.ConversationType type_;
	    private long unreadCount_;
	
	    static 
	    {
	        ClientConversation clientconversation = new ClientConversation();
	        defaultInstance = clientconversation;
	        clientconversation.id_ = "";
	        clientconversation.type_ = Data.ConversationType.ONE_TO_ONE;
	        clientconversation.offTheRecord_ = false;
	        clientconversation.participantId_ = LazyStringArrayList.EMPTY;
	        clientconversation.name_ = "";
	        clientconversation.muted_ = false;
	        clientconversation.unreadCount_ = 0L;
	        clientconversation.participant_ = Collections.emptyList();
	        clientconversation.needsAccept_ = false;
	        clientconversation.inactiveParticipant_ = Collections.emptyList();
	        clientconversation.createdAt_ = 0L;
	        clientconversation.hidden_ = false;
	        clientconversation.inviter_ = Data.Participant.getDefaultInstance();
	        clientconversation.conversationClientId_ = "";
	        clientconversation.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	        clientconversation.lastPreviewEvent_ = EventStreamResponse.Event.getDefaultInstance();
	        clientconversation.firstEventTimestamp_ = 0L;
	        clientconversation.lastMessage_ = ChatMessage.getDefaultInstance();
	    }

	    private ClientConversation()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    ClientConversation(Builder builder)
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationClientIdBytes()
	    {
	        Object obj = conversationClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }

	    public static ClientConversation getDefaultInstance()
	    {
	        return defaultInstance;
	    }

	    private ByteString getIdBytes()
	    {
	        Object obj = id_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            id_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }

	    private ByteString getNameBytes()
	    {
	        Object obj = name_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            name_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }

	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ClientConversation clientconversation)
	    {
	        return new Builder().mergeFrom(clientconversation);
	    }

	    public final String getConversationClientId()
	    {
	        Object obj = conversationClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }

	    public final Data.ConversationMetadata getConversationMetadata()
	    {
	        return conversationMetadata_;
	    }

	    public final long getCreatedAt()
	    {
	        return createdAt_;
	    }
	    
	    public final ClientConversation getDefaultInstanceForType()
        {
            return defaultInstance;
        }
	
	    public final long getFirstEventTimestamp()
	    {
	        return firstEventTimestamp_;
	    }
	
	    public final boolean getHidden()
	    {
	        return hidden_;
	    }
	
	    public final String getId()
	    {
	        Object obj = id_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                id_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Data.Participant getInactiveParticipant(int i)
	    {
	        return (Data.Participant)inactiveParticipant_.get(i);
	    }
	
	    public final int getInactiveParticipantCount()
	    {
	        return inactiveParticipant_.size();
	    }
	
	    public final List getInactiveParticipantList()
	    {
	        return inactiveParticipant_;
	    }
	
	    public final Data.ParticipantOrBuilder getInactiveParticipantOrBuilder(int i)
	    {
	        return (Data.ParticipantOrBuilder)inactiveParticipant_.get(i);
	    }
	
	    public final List getInactiveParticipantOrBuilderList()
	    {
	        return inactiveParticipant_;
	    }
	
	    public final Data.Participant getInviter()
	    {
	        return inviter_;
	    }
	
	    public final ChatMessage getLastMessage()
	    {
	        return lastMessage_;
	    }
	
	    public final EventStreamResponse.Event getLastPreviewEvent()
	    {
	        return lastPreviewEvent_;
	    }
	
	    public final boolean getMuted()
	    {
	        return muted_;
	    }
	
	    public final String getName()
	    {
	        Object obj = name_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                name_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final boolean getNeedsAccept()
	    {
	        return needsAccept_;
	    }
	
	    public final boolean getOffTheRecord()
	    {
	        return offTheRecord_;
	    }
	
	    public final Data.Participant getParticipant(int i)
	    {
	        return (Data.Participant)participant_.get(i);
	    }
	
	    public final int getParticipantCount()
	    {
	        return participant_.size();
	    }
	
	    public final String getParticipantId(int i)
	    {
	        return (String)participantId_.get(i);
	    }
	
	    public final int getParticipantIdCount()
	    {
	        return participantId_.size();
	    }
	
	    public final List getParticipantIdList()
	    {
	        return participantId_;
	    }
	
	    public final List getParticipantList()
	    {
	        return participant_;
	    }
	
	    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int i)
	    {
	        return (Data.ParticipantOrBuilder)participant_.get(i);
	    }
	
	    public final List getParticipantOrBuilderList()
	    {
	        return participant_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i2;
	        if(i != -1)
	        {
	            i2 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(2, type_.getNumber());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBoolSize(4, offTheRecord_);
	            int l = 0;
	            for(int i1 = 0; i1 < participantId_.size(); i1++)
	                l += CodedOutputStream.computeBytesSizeNoTag(participantId_.getByteString(i1));
	
	            int j1 = k + l + 1 * getParticipantIdList().size();
	            if((8 & bitField0_) == 8)
	                j1 += CodedOutputStream.computeBytesSize(6, getNameBytes());
	            if((0x4000 & bitField0_) == 16384)
	                j1 += CodedOutputStream.computeMessageSize(7, lastMessage_);
	            if((0x10 & bitField0_) == 16)
	                j1 += CodedOutputStream.computeBoolSize(8, muted_);
	            if((0x20 & bitField0_) == 32)
	                j1 += CodedOutputStream.computeInt64Size(9, unreadCount_);
	            for(int k1 = 0; k1 < participant_.size(); k1++)
	                j1 += CodedOutputStream.computeMessageSize(10, (MessageLite)participant_.get(k1));
	
	            if((0x40 & bitField0_) == 64)
	                j1 += CodedOutputStream.computeBoolSize(11, needsAccept_);
	            if((0x200 & bitField0_) == 512)
	                j1 += CodedOutputStream.computeMessageSize(12, inviter_);
	            for(int l1 = 0; l1 < inactiveParticipant_.size(); l1++)
	                j1 += CodedOutputStream.computeMessageSize(13, (MessageLite)inactiveParticipant_.get(l1));
	
	            if((0x80 & bitField0_) == 128)
	                j1 += CodedOutputStream.computeInt64Size(14, createdAt_);
	            if((0x100 & bitField0_) == 256)
	                j1 += CodedOutputStream.computeBoolSize(15, hidden_);
	            if((0x400 & bitField0_) == 1024)
	                j1 += CodedOutputStream.computeBytesSize(16, getConversationClientIdBytes());
	            if((0x800 & bitField0_) == 2048)
	                j1 += CodedOutputStream.computeMessageSize(17, conversationMetadata_);
	            if((0x1000 & bitField0_) == 4096)
	                j1 += CodedOutputStream.computeMessageSize(18, lastPreviewEvent_);
	            if((0x2000 & bitField0_) == 8192)
	                j1 += CodedOutputStream.computeInt64Size(19, firstEventTimestamp_);
	            memoizedSerializedSize = j1;
	            i2 = j1;
	        }
	        return i2;
	    }
	
	    public final Data.ConversationType getType()
	    {
	        return type_;
	    }
	
	    public final long getUnreadCount()
	    {
	        return unreadCount_;
	    }
	
	    public final boolean hasConversationClientId()
	    {
	        boolean flag;
	        if((0x400 & bitField0_) == 1024)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationMetadata()
	    {
	        boolean flag;
	        if((0x800 & bitField0_) == 2048)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasCreatedAt()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasFirstEventTimestamp()
	    {
	        boolean flag;
	        if((0x2000 & bitField0_) == 8192)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHidden()
	    {
	        boolean flag;
	        if((0x100 & bitField0_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviter()
	    {
	        boolean flag;
	        if((0x200 & bitField0_) == 512)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLastMessage()
	    {
	        boolean flag;
	        if((0x4000 & bitField0_) == 16384)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLastPreviewEvent()
	    {
	        boolean flag;
	        if((0x1000 & bitField0_) == 4096)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMuted()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasName()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasNeedsAccept()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasOffTheRecord()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUnreadCount()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
        {
            return new Builder();
        }

        public final com.google.protobuf.MessageLite.Builder toBuilder()
        {
            return new Builder().mergeFrom(this);
        }
        
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(2, type_.getNumber());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBool(4, offTheRecord_);
	        for(int i = 0; i < participantId_.size(); i++)
	            codedoutputstream.writeBytes(5, participantId_.getByteString(i));
	
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(6, getNameBytes());
	        if((0x4000 & bitField0_) == 16384)
	            codedoutputstream.writeMessage(7, lastMessage_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBool(8, muted_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeInt64(9, unreadCount_);
	        for(int j = 0; j < participant_.size(); j++)
	            codedoutputstream.writeMessage(10, (MessageLite)participant_.get(j));
	
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeBool(11, needsAccept_);
	        if((0x200 & bitField0_) == 512)
	            codedoutputstream.writeMessage(12, inviter_);
	        for(int k = 0; k < inactiveParticipant_.size(); k++)
	            codedoutputstream.writeMessage(13, (MessageLite)inactiveParticipant_.get(k));
	
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeInt64(14, createdAt_);
	        if((0x100 & bitField0_) == 256)
	            codedoutputstream.writeBool(15, hidden_);
	        if((0x400 & bitField0_) == 1024)
	            codedoutputstream.writeBytes(16, getConversationClientIdBytes());
	        if((0x800 & bitField0_) == 2048)
	            codedoutputstream.writeMessage(17, conversationMetadata_);
	        if((0x1000 & bitField0_) == 4096)
	            codedoutputstream.writeMessage(18, lastPreviewEvent_);
	        if((0x2000 & bitField0_) == 8192)
	            codedoutputstream.writeInt64(19, firstEventTimestamp_);
	    }
	    
	    //=====================================================================================
	    //							Builder
	    //=====================================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ClientConversationOrBuilder {
	    	
			private int bitField0_;
	        private Object conversationClientId_;
	        private Data.ConversationMetadata conversationMetadata_;
	        private long createdAt_;
	        private long firstEventTimestamp_;
	        private boolean hidden_;
	        private Object id_;
	        private List inactiveParticipant_;
	        private Data.Participant inviter_;
	        private ChatMessage lastMessage_;
	        private EventStreamResponse.Event lastPreviewEvent_;
	        private boolean muted_;
	        private Object name_;
	        private boolean needsAccept_;
	        private boolean offTheRecord_;
	        private LazyStringList participantId_;
	        private List participant_;
	        private Data.ConversationType type_;
	        private long unreadCount_;
	
	
	        Builder()
	        {
	            id_ = "";
	            type_ = Data.ConversationType.ONE_TO_ONE;
	            participantId_ = LazyStringArrayList.EMPTY;
	            name_ = "";
	            participant_ = Collections.emptyList();
	            inactiveParticipant_ = Collections.emptyList();
	            inviter_ = Data.Participant.getDefaultInstance();
	            conversationClientId_ = "";
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	            lastPreviewEvent_ = EventStreamResponse.Event.getDefaultInstance();
	            lastMessage_ = ChatMessage.getDefaultInstance();
	        }
		        
	        public ClientConversation.Builder clone()
	        {
	            return (new ClientConversation.Builder()).mergeFrom(buildPartial());
	        }

	        private void ensureInactiveParticipantIsMutable()
	        {
	            if((0x200 & bitField0_) != 512)
	            {
	                inactiveParticipant_ = new ArrayList(inactiveParticipant_);
	                bitField0_ = 0x200 | bitField0_;
	            }
	        }

	        private void ensureParticipantIdIsMutable()
	        {
	            if((8 & bitField0_) != 8)
	            {
	                participantId_ = new LazyStringArrayList(participantId_);
	                bitField0_ = 8 | bitField0_;
	            }
	        }

	        private void ensureParticipantIsMutable()
	        {
	            if((0x80 & bitField0_) != 128)
	            {
	                participant_ = new ArrayList(participant_);
	                bitField0_ = 0x80 | bitField0_;
	            }
	        }
	
	        public ClientConversation.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    id_ = codedinputstream.readBytes();
	                    break;
	
	                case 16: // '\020'
	                    Data.ConversationType conversationtype = Data.ConversationType.valueOf(codedinputstream.readEnum());
	                    if(conversationtype != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        type_ = conversationtype;
	                    }
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 4 | bitField0_;
	                    offTheRecord_ = codedinputstream.readBool();
	                    break;
	
	                case 42: // '*'
	                    ensureParticipantIdIsMutable();
	                    participantId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 50: // '2'
	                    bitField0_ = 0x10 | bitField0_;
	                    name_ = codedinputstream.readBytes();
	                    break;
	
	                case 58: // ':'
	                    ChatMessage.Builder builder5 = ChatMessage.newBuilder();
	                    if(hasLastMessage())
	                        builder5.mergeFrom(getLastMessage());
	                    codedinputstream.readMessage(builder5, extensionregistrylite);
	                    setLastMessage(builder5.buildPartial());
	                    break;
	
	                case 64: // '@'
	                    bitField0_ = 0x20 | bitField0_;
	                    muted_ = codedinputstream.readBool();
	                    break;
	
	                case 72: // 'H'
	                    bitField0_ = 0x40 | bitField0_;
	                    unreadCount_ = codedinputstream.readInt64();
	                    break;
	
	                case 82: // 'R'
	                    Data.Participant.Builder builder4 = Data.Participant.newBuilder();
	                    codedinputstream.readMessage(builder4, extensionregistrylite);
	                    addParticipant(builder4.buildPartial());
	                    break;
	
	                case 88: // 'X'
	                    bitField0_ = 0x100 | bitField0_;
	                    needsAccept_ = codedinputstream.readBool();
	                    break;
	
	                case 98: // 'b'
	                    Data.Participant.Builder builder3 = Data.Participant.newBuilder();
	                    if(hasInviter())
	                        builder3.mergeFrom(getInviter());
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    setInviter(builder3.buildPartial());
	                    break;
	
	                case 106: // 'j'
	                    Data.Participant.Builder builder2 = Data.Participant.newBuilder();
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    addInactiveParticipant(builder2.buildPartial());
	                    break;
	
	                case 112: // 'p'
	                    bitField0_ = 0x400 | bitField0_;
	                    createdAt_ = codedinputstream.readInt64();
	                    break;
	
	                case 120: // 'x'
	                    bitField0_ = 0x800 | bitField0_;
	                    hidden_ = codedinputstream.readBool();
	                    break;
	
	                case 130: 
	                    bitField0_ = 0x2000 | bitField0_;
	                    conversationClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 138: 
	                    Data.ConversationMetadata.Builder builder1 = Data.ConversationMetadata.newBuilder();
	                    if(hasConversationMetadata())
	                        builder1.mergeFrom(getConversationMetadata());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setConversationMetadata(builder1.buildPartial());
	                    break;
	
	                case 146: 
	                    EventStreamResponse.Event.Builder builder = EventStreamResponse.Event.newBuilder();
	                    if(hasLastPreviewEvent())
	                        builder.mergeFrom(getLastPreviewEvent());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setLastPreviewEvent(builder.buildPartial());
	                    break;
	
	                case 152: 
	                    bitField0_ = 0x10000 | bitField0_;
	                    firstEventTimestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ClientConversation.Builder addAllInactiveParticipant(Iterable iterable)
	        {
	            ensureInactiveParticipantIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, inactiveParticipant_);
	            return this;
	        }
	
	        public final ClientConversation.Builder addAllParticipant(Iterable iterable)
	        {
	            ensureParticipantIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participant_);
	            return this;
	        }
	
	        public final ClientConversation.Builder addAllParticipantId(Iterable iterable)
	        {
	            ensureParticipantIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participantId_);
	            return this;
	        }
	
	        public final ClientConversation.Builder addInactiveParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureInactiveParticipantIsMutable();
	            inactiveParticipant_.add(i, builder.build());
	            return this;
	        }
	
	        public final ClientConversation.Builder addInactiveParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureInactiveParticipantIsMutable();
	                inactiveParticipant_.add(i, participant);
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder addInactiveParticipant(Data.Participant.Builder builder)
	        {
	            ensureInactiveParticipantIsMutable();
	            inactiveParticipant_.add(builder.build());
	            return this;
	        }
	
	        public final ClientConversation.Builder addInactiveParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureInactiveParticipantIsMutable();
	                inactiveParticipant_.add(participant);
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder addParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(i, builder.build());
	            return this;
	        }
	
	        public final ClientConversation.Builder addParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(i, participant);
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder addParticipant(Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(builder.build());
	            return this;
	        }
	
	        public final ClientConversation.Builder addParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(participant);
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder addParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIdIsMutable();
	                participantId_.add(s);
	                return this;
	            }
	        }
	
	        public final ClientConversation build()
	        {
	            ClientConversation clientconversation = buildPartial();
	            if(!clientconversation.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("clientconversation"));
	            else
	                return clientconversation;
	        }
	
	        public final ClientConversation buildPartial()
	        {
	            ClientConversation clientconversation = new ClientConversation(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            clientconversation.id_ = id_;
	            if((i & 2) == 2)
	                k |= 2;
	            clientconversation.type_ = type_;
	            if((i & 4) == 4)
	                k |= 4;
	            clientconversation.offTheRecord_ = offTheRecord_;
	            if((8 & bitField0_) == 8)
	            {
	                participantId_ = new UnmodifiableLazyStringList(participantId_);
	                bitField0_ = -9 & bitField0_;
	            }
	            clientconversation.participantId_ = participantId_;
	            if((i & 0x10) == 16)
	                k |= 8;
	            clientconversation.name_ = name_;
	            if((i & 0x20) == 32)
	                k |= 0x10;
	            clientconversation.muted_ = muted_;
	            if((i & 0x40) == 64)
	                k |= 0x20;
	            clientconversation.unreadCount_ = unreadCount_;
	            if((0x80 & bitField0_) == 128)
	            {
	                participant_ = Collections.unmodifiableList(participant_);
	                bitField0_ = 0xffffff7f & bitField0_;
	            }
	            clientconversation.participant_ = participant_;
	            if((i & 0x100) == 256)
	                k |= 0x40;
	            clientconversation.needsAccept_ = needsAccept_;
	            if((0x200 & bitField0_) == 512)
	            {
	                inactiveParticipant_ = Collections.unmodifiableList(inactiveParticipant_);
	                bitField0_ = 0xfffffdff & bitField0_;
	            }
	            clientconversation.inactiveParticipant_ = inactiveParticipant_;
	            if((i & 0x400) == 1024)
	                k |= 0x80;
	            clientconversation.createdAt_ = createdAt_;
	            if((i & 0x800) == 2048)
	                k |= 0x100;
	            clientconversation.hidden_ = hidden_;
	            if((i & 0x1000) == 4096)
	                k |= 0x200;
	            clientconversation.inviter_ = inviter_;
	            if((i & 0x2000) == 8192)
	                k |= 0x400;
	            clientconversation.conversationClientId_ = conversationClientId_;
	            if((i & 0x4000) == 16384)
	                k |= 0x800;
	            clientconversation.conversationMetadata_ = conversationMetadata_;
	            if((i & 0x8000) == 32768)
	                k |= 0x1000;
	            clientconversation.lastPreviewEvent_ = lastPreviewEvent_;
	            if((i & 0x10000) == 0x10000)
	                k |= 0x2000;
	            clientconversation.firstEventTimestamp_ = firstEventTimestamp_;
	            if((i & 0x20000) == 0x20000)
	                k |= 0x4000;
	            clientconversation.lastMessage_ = lastMessage_;
	            clientconversation.bitField0_ = k;
	            return clientconversation;
	        }
	
	        public final ClientConversation.Builder clear()
	        {
	            super.clear();
	            id_ = "";
	            bitField0_ = -2 & bitField0_;
	            type_ = Data.ConversationType.ONE_TO_ONE;
	            bitField0_ = -3 & bitField0_;
	            offTheRecord_ = false;
	            bitField0_ = -5 & bitField0_;
	            participantId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -9 & bitField0_;
	            name_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            muted_ = false;
	            bitField0_ = 0xffffffdf & bitField0_;
	            unreadCount_ = 0L;
	            bitField0_ = 0xffffffbf & bitField0_;
	            participant_ = Collections.emptyList();
	            bitField0_ = 0xffffff7f & bitField0_;
	            needsAccept_ = false;
	            bitField0_ = 0xfffffeff & bitField0_;
	            inactiveParticipant_ = Collections.emptyList();
	            bitField0_ = 0xfffffdff & bitField0_;
	            createdAt_ = 0L;
	            bitField0_ = 0xfffffbff & bitField0_;
	            hidden_ = false;
	            bitField0_ = 0xfffff7ff & bitField0_;
	            inviter_ = Data.Participant.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            conversationClientId_ = "";
	            bitField0_ = 0xffffdfff & bitField0_;
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            lastPreviewEvent_ = EventStreamResponse.Event.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            firstEventTimestamp_ = 0L;
	            bitField0_ = 0xfffeffff & bitField0_;
	            lastMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearConversationClientId()
	        {
	            bitField0_ = 0xffffdfff & bitField0_;
	            conversationClientId_ = ClientConversation.getDefaultInstance().getConversationClientId();
	            return this;
	        }
	
	        public final ClientConversation.Builder clearConversationMetadata()
	        {
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearCreatedAt()
	        {
	            bitField0_ = 0xfffffbff & bitField0_;
	            createdAt_ = 0L;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearFirstEventTimestamp()
	        {
	            bitField0_ = 0xfffeffff & bitField0_;
	            firstEventTimestamp_ = 0L;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearHidden()
	        {
	            bitField0_ = 0xfffff7ff & bitField0_;
	            hidden_ = false;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearId()
	        {
	            bitField0_ = -2 & bitField0_;
	            id_ = ClientConversation.getDefaultInstance().getId();
	            return this;
	        }
	
	        public final ClientConversation.Builder clearInactiveParticipant()
	        {
	            inactiveParticipant_ = Collections.emptyList();
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearInviter()
	        {
	            inviter_ = Data.Participant.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearLastMessage()
	        {
	            lastMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearLastPreviewEvent()
	        {
	            lastPreviewEvent_ = EventStreamResponse.Event.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearMuted()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            muted_ = false;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearName()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            name_ = ClientConversation.getDefaultInstance().getName();
	            return this;
	        }
	
	        public final ClientConversation.Builder clearNeedsAccept()
	        {
	            bitField0_ = 0xfffffeff & bitField0_;
	            needsAccept_ = false;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearOffTheRecord()
	        {
	            bitField0_ = -5 & bitField0_;
	            offTheRecord_ = false;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearParticipant()
	        {
	            participant_ = Collections.emptyList();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearParticipantId()
	        {
	            participantId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearType()
	        {
	            bitField0_ = -3 & bitField0_;
	            type_ = Data.ConversationType.ONE_TO_ONE;
	            return this;
	        }
	
	        public final ClientConversation.Builder clearUnreadCount()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            unreadCount_ = 0L;
	            return this;
	        }
	
	        public final String getConversationClientId()
	        {
	            Object obj = conversationClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ConversationMetadata getConversationMetadata()
	        {
	            return conversationMetadata_;
	        }
	
	        public final long getCreatedAt()
	        {
	            return createdAt_;
	        }
	
	        public final ClientConversation getDefaultInstanceForType()
	        {
	            return ClientConversation.getDefaultInstance();
	        }
	
	        public final long getFirstEventTimestamp()
	        {
	            return firstEventTimestamp_;
	        }
	
	        public final boolean getHidden()
	        {
	            return hidden_;
	        }
	
	        public final String getId()
	        {
	            Object obj = id_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                id_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.Participant getInactiveParticipant(int i)
	        {
	            return (Data.Participant)inactiveParticipant_.get(i);
	        }
	
	        public final int getInactiveParticipantCount()
	        {
	            return inactiveParticipant_.size();
	        }
	
	        public final List getInactiveParticipantList()
	        {
	            return Collections.unmodifiableList(inactiveParticipant_);
	        }
	
	        public final Data.Participant getInviter()
	        {
	            return inviter_;
	        }
	
	        public final ChatMessage getLastMessage()
	        {
	            return lastMessage_;
	        }
	
	        public final EventStreamResponse.Event getLastPreviewEvent()
	        {
	            return lastPreviewEvent_;
	        }
	
	        public final boolean getMuted()
	        {
	            return muted_;
	        }
	
	        public final String getName()
	        {
	            Object obj = name_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                name_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean getNeedsAccept()
	        {
	            return needsAccept_;
	        }
	
	        public final boolean getOffTheRecord()
	        {
	            return offTheRecord_;
	        }
	
	        public final Data.Participant getParticipant(int i)
	        {
	            return (Data.Participant)participant_.get(i);
	        }
	
	        public final int getParticipantCount()
	        {
	            return participant_.size();
	        }
	
	        public final String getParticipantId(int i)
	        {
	            return (String)participantId_.get(i);
	        }
	
	        public final int getParticipantIdCount()
	        {
	            return participantId_.size();
	        }
	
	        public final List getParticipantIdList()
	        {
	            return Collections.unmodifiableList(participantId_);
	        }
	
	        public final List getParticipantList()
	        {
	            return Collections.unmodifiableList(participant_);
	        }
	
	        public final Data.ConversationType getType()
	        {
	            return type_;
	        }
	
	        public final long getUnreadCount()
	        {
	            return unreadCount_;
	        }
	
	        public final boolean hasConversationClientId()
	        {
	            boolean flag;
	            if((0x2000 & bitField0_) == 8192)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationMetadata()
	        {
	            boolean flag;
	            if((0x4000 & bitField0_) == 16384)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasCreatedAt()
	        {
	            boolean flag;
	            if((0x400 & bitField0_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasFirstEventTimestamp()
	        {
	            boolean flag;
	            if((0x10000 & bitField0_) == 0x10000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHidden()
	        {
	            boolean flag;
	            if((0x800 & bitField0_) == 2048)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviter()
	        {
	            boolean flag;
	            if((0x1000 & bitField0_) == 4096)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLastMessage()
	        {
	            boolean flag;
	            if((0x20000 & bitField0_) == 0x20000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLastPreviewEvent()
	        {
	            boolean flag;
	            if((0x8000 & bitField0_) == 32768)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMuted()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasName()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasNeedsAccept()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasOffTheRecord()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUnreadCount()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((ClientConversation)lite);
			}

	        public final ClientConversation.Builder mergeFrom(ClientConversation clientconversation)
	        {
	            if(clientconversation == ClientConversation.getDefaultInstance()){
	            	return this;
	            }
	            
	            if(clientconversation.hasId())
	                setId(clientconversation.getId());
	            if(clientconversation.hasType())
	                setType(clientconversation.getType());
	            if(clientconversation.hasOffTheRecord())
	                setOffTheRecord(clientconversation.getOffTheRecord());
	            if(!clientconversation.participantId_.isEmpty())
	                if(participantId_.isEmpty())
	                {
	                    participantId_ = clientconversation.participantId_;
	                    bitField0_ = -9 & bitField0_;
	                } else
	                {
	                    ensureParticipantIdIsMutable();
	                    participantId_.addAll(clientconversation.participantId_);
	                }
	            if(clientconversation.hasName())
	                setName(clientconversation.getName());
	            if(clientconversation.hasMuted())
	                setMuted(clientconversation.getMuted());
	            if(clientconversation.hasUnreadCount())
	                setUnreadCount(clientconversation.getUnreadCount());
	            if(!clientconversation.participant_.isEmpty())
	                if(participant_.isEmpty())
	                {
	                    participant_ = clientconversation.participant_;
	                    bitField0_ = 0xffffff7f & bitField0_;
	                } else
	                {
	                    ensureParticipantIsMutable();
	                    participant_.addAll(clientconversation.participant_);
	                }
	            if(clientconversation.hasNeedsAccept())
	                setNeedsAccept(clientconversation.getNeedsAccept());
	            if(!clientconversation.inactiveParticipant_.isEmpty())
	                if(inactiveParticipant_.isEmpty())
	                {
	                    inactiveParticipant_ = clientconversation.inactiveParticipant_;
	                    bitField0_ = 0xfffffdff & bitField0_;
	                } else
	                {
	                    ensureInactiveParticipantIsMutable();
	                    inactiveParticipant_.addAll(clientconversation.inactiveParticipant_);
	                }
	            if(clientconversation.hasCreatedAt())
	                setCreatedAt(clientconversation.getCreatedAt());
	            if(clientconversation.hasHidden())
	                setHidden(clientconversation.getHidden());
	            if(clientconversation.hasInviter())
	            {
	                Data.Participant participant = clientconversation.getInviter();
	                if((0x1000 & bitField0_) == 4096 && inviter_ != Data.Participant.getDefaultInstance())
	                    inviter_ = Data.Participant.newBuilder(inviter_).mergeFrom(participant).buildPartial();
	                else
	                    inviter_ = participant;
	                bitField0_ = 0x1000 | bitField0_;
	            }
	            if(clientconversation.hasConversationClientId())
	                setConversationClientId(clientconversation.getConversationClientId());
	            if(clientconversation.hasConversationMetadata())
	            {
	                Data.ConversationMetadata conversationmetadata = clientconversation.getConversationMetadata();
	                if((0x4000 & bitField0_) == 16384 && conversationMetadata_ != Data.ConversationMetadata.getDefaultInstance())
	                    conversationMetadata_ = Data.ConversationMetadata.newBuilder(conversationMetadata_).mergeFrom(conversationmetadata).buildPartial();
	                else
	                    conversationMetadata_ = conversationmetadata;
	                bitField0_ = 0x4000 | bitField0_;
	            }
	            if(clientconversation.hasLastPreviewEvent())
	            {
	                EventStreamResponse.Event event = clientconversation.getLastPreviewEvent();
	                if((0x8000 & bitField0_) == 32768 && lastPreviewEvent_ != EventStreamResponse.Event.getDefaultInstance())
	                    lastPreviewEvent_ = EventStreamResponse.Event.newBuilder(lastPreviewEvent_).mergeFrom(event).buildPartial();
	                else
	                    lastPreviewEvent_ = event;
	                bitField0_ = 0x8000 | bitField0_;
	            }
	            if(clientconversation.hasFirstEventTimestamp())
	                setFirstEventTimestamp(clientconversation.getFirstEventTimestamp());
	            if(clientconversation.hasLastMessage())
	            {
	                ChatMessage chatmessage = clientconversation.getLastMessage();
	                if((0x20000 & bitField0_) == 0x20000 && lastMessage_ != ChatMessage.getDefaultInstance())
	                    lastMessage_ = ChatMessage.newBuilder(lastMessage_).mergeFrom(chatmessage).buildPartial();
	                else
	                    lastMessage_ = chatmessage;
	                bitField0_ = 0x20000 | bitField0_;
	            }
	            return this;
	        }
	
	        public final ClientConversation.Builder setConversationClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x2000 | bitField0_;
	                conversationClientId_ = s;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setConversationMetadata(Data.ConversationMetadata.Builder builder)
	        {
	            conversationMetadata_ = builder.build();
	            bitField0_ = 0x4000 | bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder setConversationMetadata(Data.ConversationMetadata conversationmetadata)
	        {
	            if(conversationmetadata == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationMetadata_ = conversationmetadata;
	                bitField0_ = 0x4000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setCreatedAt(long l)
	        {
	            bitField0_ = 0x400 | bitField0_;
	            createdAt_ = l;
	            return this;
	        }
	
	        public final ClientConversation.Builder setFirstEventTimestamp(long l)
	        {
	            bitField0_ = 0x10000 | bitField0_;
	            firstEventTimestamp_ = l;
	            return this;
	        }
	
	        public final ClientConversation.Builder setHidden(boolean flag)
	        {
	            bitField0_ = 0x800 | bitField0_;
	            hidden_ = flag;
	            return this;
	        }
	
	        public final ClientConversation.Builder setId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                id_ = s;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setInactiveParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureInactiveParticipantIsMutable();
	            inactiveParticipant_.set(i, builder.build());
	            return this;
	        }
	
	        public final ClientConversation.Builder setInactiveParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureInactiveParticipantIsMutable();
	                inactiveParticipant_.set(i, participant);
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setInviter(Data.Participant.Builder builder)
	        {
	            inviter_ = builder.build();
	            bitField0_ = 0x1000 | bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder setInviter(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                inviter_ = participant;
	                bitField0_ = 0x1000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setLastMessage(ChatMessage.Builder builder)
	        {
	            lastMessage_ = builder.build();
	            bitField0_ = 0x20000 | bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder setLastMessage(ChatMessage chatmessage)
	        {
	            if(chatmessage == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                lastMessage_ = chatmessage;
	                bitField0_ = 0x20000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setLastPreviewEvent(EventStreamResponse.Event.Builder builder)
	        {
	            lastPreviewEvent_ = builder.build();
	            bitField0_ = 0x8000 | bitField0_;
	            return this;
	        }
	
	        public final ClientConversation.Builder setLastPreviewEvent(EventStreamResponse.Event event)
	        {
	            if(event == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                lastPreviewEvent_ = event;
	                bitField0_ = 0x8000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setMuted(boolean flag)
	        {
	            bitField0_ = 0x20 | bitField0_;
	            muted_ = flag;
	            return this;
	        }
	
	        public final ClientConversation.Builder setName(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                name_ = s;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setNeedsAccept(boolean flag)
	        {
	            bitField0_ = 0x100 | bitField0_;
	            needsAccept_ = flag;
	            return this;
	        }
	
	        public final ClientConversation.Builder setOffTheRecord(boolean flag)
	        {
	            bitField0_ = 4 | bitField0_;
	            offTheRecord_ = flag;
	            return this;
	        }
	
	        public final ClientConversation.Builder setParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.set(i, builder.build());
	            return this;
	        }
	
	        public final ClientConversation.Builder setParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.set(i, participant);
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setParticipantId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIdIsMutable();
	                participantId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setType(Data.ConversationType conversationtype)
	        {
	            if(conversationtype == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                type_ = conversationtype;
	                return this;
	            }
	        }
	
	        public final ClientConversation.Builder setUnreadCount(long l)
	        {
	            bitField0_ = 0x40 | bitField0_;
	            unreadCount_ = l;
	            return this;
	        }

	    }
	}
	
	//================================================================================
	//							ChatMessage
	//================================================================================
	public static final class ChatMessage extends GeneratedMessageLite implements ChatMessageOrBuilder {
	
		private static final ChatMessage defaultInstance;
	    private int bitField0_;
	    private List content_;
	    private Object conversationId_;
	    private Object id_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object messageClientId_;
	    private ReceiverState receiverState_;
	    private LazyStringList recipientId_;
	    private boolean retry_;
	    private Object senderId_;
	    private Object shardingHint_;
	    private long timestamp_;

	    static 
	    {
	        ChatMessage chatmessage = new ChatMessage();
	        defaultInstance = chatmessage;
	        chatmessage.messageClientId_ = "";
	        chatmessage.id_ = "";
	        chatmessage.timestamp_ = 0L;
	        chatmessage.conversationId_ = "";
	        chatmessage.senderId_ = "";
	        chatmessage.content_ = Collections.emptyList();
	        chatmessage.shardingHint_ = "";
	        chatmessage.retry_ = false;
	        chatmessage.receiverState_ = ReceiverState.UNKNOWN;
	        chatmessage.recipientId_ = LazyStringArrayList.EMPTY;
	    }

	    private ChatMessage()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ChatMessage(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ChatMessage getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getIdBytes()
	    {
	        Object obj = id_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            id_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getMessageClientIdBytes()
	    {
	        Object obj = messageClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            messageClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getShardingHintBytes()
	    {
	        Object obj = shardingHint_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            shardingHint_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ChatMessage chatmessage)
	    {
	        return new Builder().mergeFrom(chatmessage);
	    }
	
	    public final Data.Content getContent(int i)
	    {
	        return (Data.Content)content_.get(i);
	    }
	
	    public final int getContentCount()
	    {
	        return content_.size();
	    }
	
	    public final List getContentList()
	    {
	        return content_;
	    }
	
	    public final Data.ContentOrBuilder getContentOrBuilder(int i)
	    {
	        return (Data.ContentOrBuilder)content_.get(i);
	    }
	
	    public final List getContentOrBuilderList()
	    {
	        return content_;
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ChatMessage getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getId()
	    {
	        Object obj = id_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                id_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getMessageClientId()
	    {
	        Object obj = messageClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                messageClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ReceiverState getReceiverState()
	    {
	        return receiverState_;
	    }
	
	    public final String getRecipientId(int i)
	    {
	        return (String)recipientId_.get(i);
	    }
	
	    public final int getRecipientIdCount()
	    {
	        return recipientId_.size();
	    }
	
	    public final List getRecipientIdList()
	    {
	        return recipientId_;
	    }
	
	    public final boolean getRetry()
	    {
	        return retry_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l1;
	        if(i != -1)
	        {
	            l1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getMessageClientIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeInt64Size(3, timestamp_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getConversationIdBytes());
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeBytesSize(5, getSenderIdBytes());
	            for(int l = 0; l < content_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(6, (MessageLite)content_.get(l));
	
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeBytesSize(7, getShardingHintBytes());
	            int i1 = 0;
	            for(int j1 = 0; j1 < recipientId_.size(); j1++)
	                i1 += CodedOutputStream.computeBytesSizeNoTag(recipientId_.getByteString(j1));
	
	            int k1 = k + i1 + 1 * getRecipientIdList().size();
	            if((0x40 & bitField0_) == 64)
	                k1 += CodedOutputStream.computeBoolSize(9, retry_);
	            if((0x80 & bitField0_) == 128)
	                k1 += CodedOutputStream.computeEnumSize(10, receiverState_.getNumber());
	            memoizedSerializedSize = k1;
	            l1 = k1;
	        }
	        return l1;
	    }
	
	    public final String getShardingHint()
	    {
	        Object obj = shardingHint_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                shardingHint_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMessageClientId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReceiverState()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRetry()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasShardingHint()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
        {
            return new Builder();
        }

        public final com.google.protobuf.MessageLite.Builder toBuilder()
        {
            return new Builder().mergeFrom(this);
        }
        
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getMessageClientIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeInt64(3, timestamp_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getConversationIdBytes());
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBytes(5, getSenderIdBytes());
	        for(int i = 0; i < content_.size(); i++)
	            codedoutputstream.writeMessage(6, (MessageLite)content_.get(i));
	
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeBytes(7, getShardingHintBytes());
	        for(int j = 0; j < recipientId_.size(); j++)
	            codedoutputstream.writeBytes(8, recipientId_.getByteString(j));
	
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeBool(9, retry_);
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeEnum(10, receiverState_.getNumber());
	    }
	    
	    public static enum ReceiverState implements com.google.protobuf.Internal.EnumLite {
	    	UNKNOWN(0),
	    	NO_RECEIPT(1),
	    	DELIVERED(2),
	    	READ(3);
	    	
	    	int value;
	    	
	    	private ReceiverState(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber() {
	            return value;
	        }
	    	
	    	public static ReceiverState valueOf(int value) {
	    		for(ReceiverState s : ReceiverState.values()) {
	    			if(s.value == value) {
	    				return s;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //=================================================================================
	    //							Builder
	    //=================================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ChatMessageOrBuilder {
	
			private int bitField0_;
	        private List content_;
	        private Object conversationId_;
	        private Object id_;
	        private Object messageClientId_;
	        private ChatMessage.ReceiverState receiverState_;
	        private LazyStringList recipientId_;
	        private boolean retry_;
	        private Object senderId_;
	        private Object shardingHint_;
	        private long timestamp_;

	        private Builder()
	        {
	            messageClientId_ = "";
	            id_ = "";
	            conversationId_ = "";
	            senderId_ = "";
	            content_ = Collections.emptyList();
	            shardingHint_ = "";
	            receiverState_ = ChatMessage.ReceiverState.UNKNOWN;
	            recipientId_ = LazyStringArrayList.EMPTY;
	        }
	        
	        public ChatMessage.Builder clone()
	        {
	            return (new ChatMessage.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureContentIsMutable()
	        {
	            if((0x20 & bitField0_) != 32)
	            {
	                content_ = new ArrayList(content_);
	                bitField0_ = 0x20 | bitField0_;
	            }
	        }
	
	        private void ensureRecipientIdIsMutable()
	        {
	            if((0x200 & bitField0_) != 512)
	            {
	                recipientId_ = new LazyStringArrayList(recipientId_);
	                bitField0_ = 0x200 | bitField0_;
	            }
	        }
	
	        public ChatMessage.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    messageClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    id_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 0x10 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 50: // '2'
	                    Data.Content.Builder builder = Data.Content.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addContent(builder.buildPartial());
	                    break;
	
	                case 58: // ':'
	                    bitField0_ = 0x40 | bitField0_;
	                    shardingHint_ = codedinputstream.readBytes();
	                    break;
	
	                case 66: // 'B'
	                    ensureRecipientIdIsMutable();
	                    recipientId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 72: // 'H'
	                    bitField0_ = 0x80 | bitField0_;
	                    retry_ = codedinputstream.readBool();
	                    break;
	
	                case 80: // 'P'
	                    ChatMessage.ReceiverState receiverstate = ChatMessage.ReceiverState.valueOf(codedinputstream.readEnum());
	                    if(receiverstate != null)
	                    {
	                        bitField0_ = 0x100 | bitField0_;
	                        receiverState_ = receiverstate;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ChatMessage.Builder addAllContent(Iterable iterable)
	        {
	            ensureContentIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, content_);
	            return this;
	        }
	
	        public final ChatMessage.Builder addAllRecipientId(Iterable iterable)
	        {
	            ensureRecipientIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, recipientId_);
	            return this;
	        }
	
	        public final ChatMessage.Builder addContent(int i, Data.Content.Builder builder)
	        {
	            ensureContentIsMutable();
	            content_.add(i, builder.build());
	            return this;
	        }
	
	        public final ChatMessage.Builder addContent(int i, Data.Content content)
	        {
	            if(content == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureContentIsMutable();
	                content_.add(i, content);
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder addContent(Data.Content.Builder builder)
	        {
	            ensureContentIsMutable();
	            content_.add(builder.build());
	            return this;
	        }
	
	        public final ChatMessage.Builder addContent(Data.Content content)
	        {
	            if(content == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureContentIsMutable();
	                content_.add(content);
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder addRecipientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.add(s);
	                return this;
	            }
	        }
	
	        public final ChatMessage build()
	        {
	            ChatMessage chatmessage = buildPartial();
	            if(!chatmessage.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("chatmessage"));
	            else
	                return chatmessage;
	        }
	
	        public final ChatMessage buildPartial()
	        {
	            ChatMessage chatmessage = new ChatMessage(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            chatmessage.messageClientId_ = messageClientId_;
	            if((i & 2) == 2)
	                k |= 2;
	            chatmessage.id_ = id_;
	            if((i & 4) == 4)
	                k |= 4;
	            chatmessage.timestamp_ = timestamp_;
	            if((i & 8) == 8)
	                k |= 8;
	            chatmessage.conversationId_ = conversationId_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            chatmessage.senderId_ = senderId_;
	            if((0x20 & bitField0_) == 32)
	            {
	                content_ = Collections.unmodifiableList(content_);
	                bitField0_ = 0xffffffdf & bitField0_;
	            }
	            chatmessage.content_ = content_;
	            if((i & 0x40) == 64)
	                k |= 0x20;
	            chatmessage.shardingHint_ = shardingHint_;
	            if((i & 0x80) == 128)
	                k |= 0x40;
	            chatmessage.retry_ = retry_;
	            if((i & 0x100) == 256)
	                k |= 0x80;
	            chatmessage.receiverState_ = receiverState_;
	            if((0x200 & bitField0_) == 512)
	            {
	                recipientId_ = new UnmodifiableLazyStringList(recipientId_);
	                bitField0_ = 0xfffffdff & bitField0_;
	            }
	            chatmessage.recipientId_ = recipientId_;
	            chatmessage.bitField0_ = k;
	            return chatmessage;
	        }
	
	        public final ChatMessage.Builder clear()
	        {
	            super.clear();
	            messageClientId_ = "";
	            bitField0_ = -2 & bitField0_;
	            id_ = "";
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -5 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -9 & bitField0_;
	            senderId_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            content_ = Collections.emptyList();
	            bitField0_ = 0xffffffdf & bitField0_;
	            shardingHint_ = "";
	            bitField0_ = 0xffffffbf & bitField0_;
	            retry_ = false;
	            bitField0_ = 0xffffff7f & bitField0_;
	            receiverState_ = ChatMessage.ReceiverState.UNKNOWN;
	            bitField0_ = 0xfffffeff & bitField0_;
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final ChatMessage.Builder clearContent()
	        {
	            content_ = Collections.emptyList();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final ChatMessage.Builder clearConversationId()
	        {
	            bitField0_ = -9 & bitField0_;
	            conversationId_ = ChatMessage.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ChatMessage.Builder clearId()
	        {
	            bitField0_ = -3 & bitField0_;
	            id_ = ChatMessage.getDefaultInstance().getId();
	            return this;
	        }
	
	        public final ChatMessage.Builder clearMessageClientId()
	        {
	            bitField0_ = -2 & bitField0_;
	            messageClientId_ = ChatMessage.getDefaultInstance().getMessageClientId();
	            return this;
	        }
	
	        public final ChatMessage.Builder clearReceiverState()
	        {
	            bitField0_ = 0xfffffeff & bitField0_;
	            receiverState_ = ChatMessage.ReceiverState.UNKNOWN;
	            return this;
	        }
	
	        public final ChatMessage.Builder clearRecipientId()
	        {
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final ChatMessage.Builder clearRetry()
	        {
	            bitField0_ = 0xffffff7f & bitField0_;
	            retry_ = false;
	            return this;
	        }
	
	        public final ChatMessage.Builder clearSenderId()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            senderId_ = ChatMessage.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final ChatMessage.Builder clearShardingHint()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            shardingHint_ = ChatMessage.getDefaultInstance().getShardingHint();
	            return this;
	        }
	
	        public final ChatMessage.Builder clearTimestamp()
	        {
	            bitField0_ = -5 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final Data.Content getContent(int i)
	        {
	            return (Data.Content)content_.get(i);
	        }
	
	        public final int getContentCount()
	        {
	            return content_.size();
	        }
	
	        public final List getContentList()
	        {
	            return Collections.unmodifiableList(content_);
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ChatMessage getDefaultInstanceForType()
	        {
	            return ChatMessage.getDefaultInstance();
	        }
	
	        public final String getId()
	        {
	            Object obj = id_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                id_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getMessageClientId()
	        {
	            Object obj = messageClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                messageClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ChatMessage.ReceiverState getReceiverState()
	        {
	            return receiverState_;
	        }
	
	        public final String getRecipientId(int i)
	        {
	            return (String)recipientId_.get(i);
	        }
	
	        public final int getRecipientIdCount()
	        {
	            return recipientId_.size();
	        }
	
	        public final List getRecipientIdList()
	        {
	            return Collections.unmodifiableList(recipientId_);
	        }
	
	        public final boolean getRetry()
	        {
	            return retry_;
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getShardingHint()
	        {
	            Object obj = shardingHint_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                shardingHint_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMessageClientId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceiverState()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRetry()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasShardingHint()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((ChatMessage)lite);
			}
	        
	        public final ChatMessage.Builder mergeFrom(ChatMessage chatmessage)
	        {
	            if(chatmessage == ChatMessage.getDefaultInstance()) 
	            	return this;
	            
	            if(chatmessage.hasMessageClientId())
	                setMessageClientId(chatmessage.getMessageClientId());
	            if(chatmessage.hasId())
	                setId(chatmessage.getId());
	            if(chatmessage.hasTimestamp())
	                setTimestamp(chatmessage.getTimestamp());
	            if(chatmessage.hasConversationId())
	                setConversationId(chatmessage.getConversationId());
	            if(chatmessage.hasSenderId())
	                setSenderId(chatmessage.getSenderId());
	            if(!chatmessage.content_.isEmpty())
	                if(content_.isEmpty())
	                {
	                    content_ = chatmessage.content_;
	                    bitField0_ = 0xffffffdf & bitField0_;
	                } else
	                {
	                    ensureContentIsMutable();
	                    content_.addAll(chatmessage.content_);
	                }
	            if(chatmessage.hasShardingHint())
	                setShardingHint(chatmessage.getShardingHint());
	            if(chatmessage.hasRetry())
	                setRetry(chatmessage.getRetry());
	            if(chatmessage.hasReceiverState())
	                setReceiverState(chatmessage.getReceiverState());
	            if(!chatmessage.recipientId_.isEmpty())
	                if(recipientId_.isEmpty())
	                {
	                    recipientId_ = chatmessage.recipientId_;
	                    bitField0_ = 0xfffffdff & bitField0_;
	                } else
	                {
	                    ensureRecipientIdIsMutable();
	                    recipientId_.addAll(chatmessage.recipientId_);
	                }
	            return this;
	        }
	
	        public final ChatMessage.Builder setContent(int i, Data.Content.Builder builder)
	        {
	            ensureContentIsMutable();
	            content_.set(i, builder.build());
	            return this;
	        }
	
	        public final ChatMessage.Builder setContent(int i, Data.Content content)
	        {
	            if(content == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureContentIsMutable();
	                content_.set(i, content);
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                id_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setMessageClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                messageClientId_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setReceiverState(ChatMessage.ReceiverState receiverstate)
	        {
	            if(receiverstate == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x100 | bitField0_;
	                receiverState_ = receiverstate;
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setRecipientId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setRetry(boolean flag)
	        {
	            bitField0_ = 0x80 | bitField0_;
	            retry_ = flag;
	            return this;
	        }
	
	        public final ChatMessage.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setShardingHint(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x40 | bitField0_;
	                shardingHint_ = s;
	                return this;
	            }
	        }
	
	        public final ChatMessage.Builder setTimestamp(long l)
	        {
	            bitField0_ = 4 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//======================================================================================
	//
	//======================================================================================
	
	public static interface SuggestionsRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract int getCount();
	
	    public abstract String getParticipantId(int i);
	
	    public abstract int getParticipantIdCount();
	
	    public abstract List getParticipantIdList();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract SuggestionsRequest.SuggestionsType getSuggestionsType();
	
	    public abstract boolean hasCount();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasSuggestionsType();
	}
	
	public static final class SuggestionsRequest extends GeneratedMessageLite implements SuggestionsRequestOrBuilder {

		private static final SuggestionsRequest defaultInstance;
	    private int bitField0_;
	    private int count_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private LazyStringList participantId_;
	    private Data.StubbyInfo stubbyInfo_;
	    private SuggestionsType suggestionsType_;
	
	    static 
	    {
	        SuggestionsRequest suggestionsrequest = new SuggestionsRequest();
	        defaultInstance = suggestionsrequest;
	        suggestionsrequest.participantId_ = LazyStringArrayList.EMPTY;
	        suggestionsrequest.count_ = 0;
	        suggestionsrequest.suggestionsType_ = SuggestionsType.ALL;
	        suggestionsrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }
	
	    private SuggestionsRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    SuggestionsRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static SuggestionsRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(SuggestionsRequest suggestionsrequest)
	    {
	        return new Builder().mergeFrom(suggestionsrequest);
	    }
	
	    public final int getCount()
	    {
	        return count_;
	    }
	
	    public final SuggestionsRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getParticipantId(int i)
	    {
	        return (String)participantId_.get(i);
	    }
	
	    public final int getParticipantIdCount()
	    {
	        return participantId_.size();
	    }
	
	    public final List getParticipantIdList()
	    {
	        return participantId_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 0;
	            for(int k = 0; k < participantId_.size(); k++)
	                j += CodedOutputStream.computeBytesSizeNoTag(participantId_.getByteString(k));
	
	            int l = j + 0 + 1 * getParticipantIdList().size();
	            if((4 & bitField0_) == 4)
	                l += CodedOutputStream.computeMessageSize(2, stubbyInfo_);
	            if((1 & bitField0_) == 1)
	                l += CodedOutputStream.computeInt32Size(3, count_);
	            if((2 & bitField0_) == 2)
	                l += CodedOutputStream.computeEnumSize(4, suggestionsType_.getNumber());
	            memoizedSerializedSize = l;
	            i1 = l;
	        }
	        return i1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final SuggestionsType getSuggestionsType()
	    {
	        return suggestionsType_;
	    }
	
	    public final boolean hasCount()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSuggestionsType()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        for(int i = 0; i < participantId_.size(); i++)
	            codedoutputstream.writeBytes(1, participantId_.getByteString(i));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(2, stubbyInfo_);
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeInt32(3, count_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(4, suggestionsType_.getNumber());
	    }
	
	    
	    //===========================================================================================
	    //
	    //===========================================================================================
	    public static enum SuggestionsType implements com.google.protobuf.Internal.EnumLite {
	    	ALL(1),
	    	ONLY_NEW(2),
	    	HANGOUT(3);
	    	
	    	int value;
	    	
	    	private SuggestionsType(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static SuggestionsType valueOf(int value) {
	    		for(SuggestionsType t : SuggestionsType.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		
	    		return null;
	    	}
	    }
	    
	    //===========================================================================================
	    //
	    //===========================================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements SuggestionsRequestOrBuilder
	    {
	
	    	private int bitField0_;
	        private int count_;
	        private LazyStringList participantId_;
	        private Data.StubbyInfo stubbyInfo_;
	        private SuggestionsRequest.SuggestionsType suggestionsType_;

	        private Builder()
	        {
	            participantId_ = LazyStringArrayList.EMPTY;
	            suggestionsType_ = SuggestionsRequest.SuggestionsType.ALL;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public SuggestionsRequest.Builder clone()
	        {
	            return (new SuggestionsRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureParticipantIdIsMutable()
	        {
	            if((1 & bitField0_) != 1)
	            {
	                participantId_ = new LazyStringArrayList(participantId_);
	                bitField0_ = 1 | bitField0_;
	            }
	        }
	
	        public SuggestionsRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    ensureParticipantIdIsMutable();
	                    participantId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 18: // '\022'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 2 | bitField0_;
	                    count_ = codedinputstream.readInt32();
	                    break;
	
	                case 32: // ' '
	                    SuggestionsRequest.SuggestionsType suggestionstype = SuggestionsRequest.SuggestionsType.valueOf(codedinputstream.readEnum());
	                    if(suggestionstype != null)
	                    {
	                        bitField0_ = 4 | bitField0_;
	                        suggestionsType_ = suggestionstype;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final SuggestionsRequest.Builder addAllParticipantId(Iterable iterable)
	        {
	            ensureParticipantIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participantId_);
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder addParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIdIsMutable();
	                participantId_.add(s);
	                return this;
	            }
	        }
	
	        public final SuggestionsRequest build()
	        {
	            SuggestionsRequest suggestionsrequest = buildPartial();
	            if(!suggestionsrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("suggestionsrequest"));
	            else
	                return suggestionsrequest;
	        }
	
	        public final SuggestionsRequest buildPartial()
	        {
	            SuggestionsRequest suggestionsrequest = new SuggestionsRequest(this);
	            int i = bitField0_;
	            if((1 & bitField0_) == 1)
	            {
	                participantId_ = new UnmodifiableLazyStringList(participantId_);
	                bitField0_ = -2 & bitField0_;
	            }
	            suggestionsrequest.participantId_ = participantId_;
	            int j = i & 2;
	            int k = 0;
	            if(j == 2)
	                k = 1;
	            suggestionsrequest.count_ = count_;
	            if((i & 4) == 4)
	                k |= 2;
	            suggestionsrequest.suggestionsType_ = suggestionsType_;
	            if((i & 8) == 8)
	                k |= 4;
	            suggestionsrequest.stubbyInfo_ = stubbyInfo_;
	            suggestionsrequest.bitField0_ = k;
	            return suggestionsrequest;
	        }
	
	        public final SuggestionsRequest.Builder clear()
	        {
	            super.clear();
	            participantId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -2 & bitField0_;
	            count_ = 0;
	            bitField0_ = -3 & bitField0_;
	            suggestionsType_ = SuggestionsRequest.SuggestionsType.ALL;
	            bitField0_ = -5 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder clearCount()
	        {
	            bitField0_ = -3 & bitField0_;
	            count_ = 0;
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder clearParticipantId()
	        {
	            participantId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder clearSuggestionsType()
	        {
	            bitField0_ = -5 & bitField0_;
	            suggestionsType_ = SuggestionsRequest.SuggestionsType.ALL;
	            return this;
	        }
	
	        public final int getCount()
	        {
	            return count_;
	        }
	
	        public final SuggestionsRequest getDefaultInstanceForType()
	        {
	            return SuggestionsRequest.getDefaultInstance();
	        }
	
	        public final String getParticipantId(int i)
	        {
	            return (String)participantId_.get(i);
	        }
	
	        public final int getParticipantIdCount()
	        {
	            return participantId_.size();
	        }
	
	        public final List getParticipantIdList()
	        {
	            return Collections.unmodifiableList(participantId_);
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final SuggestionsRequest.SuggestionsType getSuggestionsType()
	        {
	            return suggestionsType_;
	        }
	
	        public final boolean hasCount()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSuggestionsType()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((SuggestionsRequest)generatedmessagelite);
	        }
	
	        public final SuggestionsRequest.Builder mergeFrom(SuggestionsRequest suggestionsrequest)
	        {
	            if(suggestionsrequest == SuggestionsRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(!suggestionsrequest.participantId_.isEmpty())
	                if(participantId_.isEmpty())
	                {
	                    participantId_ = suggestionsrequest.participantId_;
	                    bitField0_ = -2 & bitField0_;
	                } else
	                {
	                    ensureParticipantIdIsMutable();
	                    participantId_.addAll(suggestionsrequest.participantId_);
	                }
	            if(suggestionsrequest.hasCount())
	                setCount(suggestionsrequest.getCount());
	            if(suggestionsrequest.hasSuggestionsType())
	                setSuggestionsType(suggestionsrequest.getSuggestionsType());
	            if(suggestionsrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = suggestionsrequest.getStubbyInfo();
	                if((8 & bitField0_) == 8 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	            }
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder setCount(int i)
	        {
	            bitField0_ = 2 | bitField0_;
	            count_ = i;
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder setParticipantId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIdIsMutable();
	                participantId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final SuggestionsRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final SuggestionsRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final SuggestionsRequest.Builder setSuggestionsType(SuggestionsRequest.SuggestionsType suggestionstype)
	        {
	            if(suggestionstype == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                suggestionsType_ = suggestionstype;
	                return this;
	            }
	        }
	    }
	}
	
	//======================================================================================
	//								TileEvent	
	//======================================================================================
	public static interface TileEventOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract Data.KeyValue getEventData(int i);
	
	    public abstract int getEventDataCount();
	
	    public abstract List getEventDataList();
	
	    public abstract String getEventType();
	
	    public abstract String getTileType();
	
	    public abstract int getTileVersion();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasEventType();
	
	    public abstract boolean hasTileType();
	
	    public abstract boolean hasTileVersion();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class TileEvent extends GeneratedMessageLite implements TileEventOrBuilder {
	
		private static final TileEvent defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private List eventData_;
	    private Object eventType_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object tileType_;
	    private int tileVersion_;
	    private long timestamp_;

	    static 
	    {
	        TileEvent tileevent = new TileEvent();
	        defaultInstance = tileevent;
	        tileevent.conversationId_ = "";
	        tileevent.timestamp_ = 0L;
	        tileevent.tileType_ = "";
	        tileevent.tileVersion_ = 0;
	        tileevent.eventType_ = "";
	        tileevent.eventData_ = Collections.emptyList();
	    }

	    private TileEvent()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    TileEvent(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static TileEvent getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getEventTypeBytes()
	    {
	        Object obj = eventType_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            eventType_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getTileTypeBytes()
	    {
	        Object obj = tileType_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            tileType_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(TileEvent tileevent)
	    {
	        return new Builder().mergeFrom(tileevent);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final TileEvent getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Data.KeyValue getEventData(int i)
	    {
	        return (Data.KeyValue)eventData_.get(i);
	    }
	
	    public final int getEventDataCount()
	    {
	        return eventData_.size();
	    }
	
	    public final List getEventDataList()
	    {
	        return eventData_;
	    }
	
	    public final Data.KeyValueOrBuilder getEventDataOrBuilder(int i)
	    {
	        return (Data.KeyValueOrBuilder)eventData_.get(i);
	    }
	
	    public final List getEventDataOrBuilderList()
	    {
	        return eventData_;
	    }
	
	    public final String getEventType()
	    {
	        Object obj = eventType_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                eventType_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getTileTypeBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeInt32Size(4, tileVersion_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeBytesSize(5, getEventTypeBytes());
	            for(int l = 0; l < eventData_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(6, (MessageLite)eventData_.get(l));
	
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final String getTileType()
	    {
	        Object obj = tileType_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                tileType_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getTileVersion()
	    {
	        return tileVersion_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventType()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileType()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileVersion()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace() throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getTileTypeBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeInt32(4, tileVersion_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBytes(5, getEventTypeBytes());
	        for(int i = 0; i < eventData_.size(); i++)
	            codedoutputstream.writeMessage(6, (MessageLite)eventData_.get(i));
	
	    }
	    
	    //===================================================================
	    //							Builder
	    //===================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements TileEventOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private List eventData_;
	        private Object eventType_;
	        private Object tileType_;
	        private int tileVersion_;
	        private long timestamp_;


	        private Builder()
	        {
	            conversationId_ = "";
	            tileType_ = "";
	            eventType_ = "";
	            eventData_ = Collections.emptyList();
	        }
	        
	        public TileEvent.Builder clone()
	        {
	            return (new TileEvent.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureEventDataIsMutable()
	        {
	            if((0x20 & bitField0_) != 32)
	            {
	                eventData_ = new ArrayList(eventData_);
	                bitField0_ = 0x20 | bitField0_;
	            }
	        }
	
	        public TileEvent.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    tileType_ = codedinputstream.readBytes();
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 8 | bitField0_;
	                    tileVersion_ = codedinputstream.readInt32();
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 0x10 | bitField0_;
	                    eventType_ = codedinputstream.readBytes();
	                    break;
	
	                case 50: // '2'
	                    Data.KeyValue.Builder builder = Data.KeyValue.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addEventData(builder);
	                    break;
	                }
	            } while(true);
	        }
	
	        public final TileEvent.Builder addAllEventData(Iterable iterable)
	        {
	            ensureEventDataIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, eventData_);
	            return this;
	        }
	
	        public final TileEvent.Builder addEventData(int i, Data.KeyValue.Builder builder)
	        {
	            ensureEventDataIsMutable();
	            eventData_.add(i, builder.build());
	            return this;
	        }
	
	        public final TileEvent.Builder addEventData(int i, Data.KeyValue keyvalue)
	        {
	            if(keyvalue == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventDataIsMutable();
	                eventData_.add(i, keyvalue);
	                return this;
	            }
	        }
	
	        public final TileEvent.Builder addEventData(Data.KeyValue.Builder builder)
	        {
	            ensureEventDataIsMutable();
	            eventData_.add(builder.build());
	            return this;
	        }
	
	        public final TileEvent.Builder addEventData(Data.KeyValue keyvalue)
	        {
	            if(keyvalue == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventDataIsMutable();
	                eventData_.add(keyvalue);
	                return this;
	            }
	        }
	
	        public final TileEvent build()
	        {
	            TileEvent tileevent = buildPartial();
	            if(!tileevent.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("tileevent"));
	            else
	                return tileevent;
	        }
	
	        public final TileEvent buildPartial()
	        {
	            TileEvent tileevent = new TileEvent(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            tileevent.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            tileevent.timestamp_ = timestamp_;
	            if((i & 4) == 4)
	                k |= 4;
	            tileevent.tileType_ = tileType_;
	            if((i & 8) == 8)
	                k |= 8;
	            tileevent.tileVersion_ = tileVersion_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            tileevent.eventType_ = eventType_;
	            if((0x20 & bitField0_) == 32)
	            {
	                eventData_ = Collections.unmodifiableList(eventData_);
	                bitField0_ = 0xffffffdf & bitField0_;
	            }
	            tileevent.eventData_ = eventData_;
	            tileevent.bitField0_ = k;
	            return tileevent;
	        }
	
	        public final TileEvent.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            tileType_ = "";
	            bitField0_ = -5 & bitField0_;
	            tileVersion_ = 0;
	            bitField0_ = -9 & bitField0_;
	            eventType_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            eventData_ = Collections.emptyList();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final TileEvent.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = TileEvent.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final TileEvent.Builder clearEventData()
	        {
	            eventData_ = Collections.emptyList();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final TileEvent.Builder clearEventType()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            eventType_ = TileEvent.getDefaultInstance().getEventType();
	            return this;
	        }
	
	        public final TileEvent.Builder clearTileType()
	        {
	            bitField0_ = -5 & bitField0_;
	            tileType_ = TileEvent.getDefaultInstance().getTileType();
	            return this;
	        }
	
	        public final TileEvent.Builder clearTileVersion()
	        {
	            bitField0_ = -9 & bitField0_;
	            tileVersion_ = 0;
	            return this;
	        }
	
	        public final TileEvent.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final TileEvent getDefaultInstanceForType()
	        {
	            return TileEvent.getDefaultInstance();
	        }
	
	        public final Data.KeyValue getEventData(int i)
	        {
	            return (Data.KeyValue)eventData_.get(i);
	        }
	
	        public final int getEventDataCount()
	        {
	            return eventData_.size();
	        }
	
	        public final List getEventDataList()
	        {
	            return Collections.unmodifiableList(eventData_);
	        }
	
	        public final String getEventType()
	        {
	            Object obj = eventType_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                eventType_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getTileType()
	        {
	            Object obj = tileType_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                tileType_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final int getTileVersion()
	        {
	            return tileVersion_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventType()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileType()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileVersion()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((TileEvent)lite);
			}

			public final TileEvent.Builder mergeFrom(TileEvent tileevent)
	        {
	            if(tileevent == TileEvent.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(tileevent.hasConversationId())
	                setConversationId(tileevent.getConversationId());
	            if(tileevent.hasTimestamp())
	                setTimestamp(tileevent.getTimestamp());
	            if(tileevent.hasTileType())
	                setTileType(tileevent.getTileType());
	            if(tileevent.hasTileVersion())
	                setTileVersion(tileevent.getTileVersion());
	            if(tileevent.hasEventType())
	                setEventType(tileevent.getEventType());
	            if(!tileevent.eventData_.isEmpty())
	                if(eventData_.isEmpty())
	                {
	                    eventData_ = tileevent.eventData_;
	                    bitField0_ = 0xffffffdf & bitField0_;
	                } else
	                {
	                    ensureEventDataIsMutable();
	                    eventData_.addAll(tileevent.eventData_);
	                }
	            return this;
	        }
	
	        public final TileEvent.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final TileEvent.Builder setEventData(int i, Data.KeyValue.Builder builder)
	        {
	            ensureEventDataIsMutable();
	            eventData_.set(i, builder.build());
	            return this;
	        }
	
	        public final TileEvent.Builder setEventData(int i, Data.KeyValue keyvalue)
	        {
	            if(keyvalue == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventDataIsMutable();
	                eventData_.set(i, keyvalue);
	                return this;
	            }
	        }
	
	        public final TileEvent.Builder setEventType(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                eventType_ = s;
	                return this;
	            }
	        }
	
	        public final TileEvent.Builder setTileType(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                tileType_ = s;
	                return this;
	            }
	        }
	
	        public final TileEvent.Builder setTileVersion(int i)
	        {
	            bitField0_ = 8 | bitField0_;
	            tileVersion_ = i;
	            return this;
	        }
	
	        public final TileEvent.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	
	//======================================================================================
	//								TileEventRequest	
	//======================================================================================
	public static interface TileEventRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract Data.KeyValue getEventData(int i);
	
	    public abstract int getEventDataCount();
	
	    public abstract List getEventDataList();
	
	    public abstract String getEventType();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract String getTileType();
	
	    public abstract int getTileVersion();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasEventType();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasTileType();
	
	    public abstract boolean hasTileVersion();
	}
	
	public static final class TileEventRequest extends GeneratedMessageLite implements TileEventRequestOrBuilder {
	
		private static final TileEventRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private List eventData_;
	    private Object eventType_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;
	    private Object tileType_;
	    private int tileVersion_;

	    static 
	    {
	        TileEventRequest tileeventrequest = new TileEventRequest();
	        defaultInstance = tileeventrequest;
	        tileeventrequest.conversationId_ = "";
	        tileeventrequest.tileType_ = "";
	        tileeventrequest.tileVersion_ = 0;
	        tileeventrequest.eventType_ = "";
	        tileeventrequest.eventData_ = Collections.emptyList();
	        tileeventrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private TileEventRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private TileEventRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static TileEventRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getEventTypeBytes()
	    {
	        Object obj = eventType_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            eventType_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getTileTypeBytes()
	    {
	        Object obj = tileType_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            tileType_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(TileEventRequest tileeventrequest)
	    {
	        return new Builder().mergeFrom(tileeventrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final TileEventRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Data.KeyValue getEventData(int i)
	    {
	        return (Data.KeyValue)eventData_.get(i);
	    }
	
	    public final int getEventDataCount()
	    {
	        return eventData_.size();
	    }
	
	    public final List getEventDataList()
	    {
	        return eventData_;
	    }
	
	    public final Data.KeyValueOrBuilder getEventDataOrBuilder(int i)
	    {
	        return (Data.KeyValueOrBuilder)eventData_.get(i);
	    }
	
	    public final List getEventDataOrBuilderList()
	    {
	        return eventData_;
	    }
	
	    public final String getEventType()
	    {
	        Object obj = eventType_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                eventType_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getTileTypeBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeInt32Size(3, tileVersion_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getEventTypeBytes());
	            for(int l = 0; l < eventData_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(5, (MessageLite)eventData_.get(l));
	
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeMessageSize(6, stubbyInfo_);
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final String getTileType()
	    {
	        Object obj = tileType_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                tileType_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getTileVersion()
	    {
	        return tileVersion_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventType()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileType()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileVersion()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getTileTypeBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeInt32(3, tileVersion_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getEventTypeBytes());
	        for(int i = 0; i < eventData_.size(); i++)
	            codedoutputstream.writeMessage(5, (MessageLite)eventData_.get(i));
	
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(6, stubbyInfo_);
	    }
	    
	    
	    //==================================================================
	    //							Builder
	    //==================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements TileEventRequestOrBuilder {
	    	
	    	private int bitField0_;
	        private Object conversationId_;
	        private List eventData_;
	        private Object eventType_;
	        private Data.StubbyInfo stubbyInfo_;
	        private Object tileType_;
	        private int tileVersion_;

	        private Builder()
	        {
	            conversationId_ = "";
	            tileType_ = "";
	            eventType_ = "";
	            eventData_ = Collections.emptyList();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public TileEventRequest.Builder clone()
	        {
	            return (new TileEventRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureEventDataIsMutable()
	        {
	            if((0x10 & bitField0_) != 16)
	            {
	                eventData_ = new ArrayList(eventData_);
	                bitField0_ = 0x10 | bitField0_;
	            }
	        }
	
	        public TileEventRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    tileType_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    tileVersion_ = codedinputstream.readInt32();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    eventType_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    Data.KeyValue.Builder builder1 = Data.KeyValue.newBuilder();
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    addEventData(builder1);
	                    break;
	
	                case 50: // '2'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final TileEventRequest.Builder addAllEventData(Iterable iterable)
	        {
	            ensureEventDataIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, eventData_);
	            return this;
	        }
	
	        public final TileEventRequest.Builder addEventData(int i, Data.KeyValue.Builder builder)
	        {
	            ensureEventDataIsMutable();
	            eventData_.add(i, builder.build());
	            return this;
	        }
	
	        public final TileEventRequest.Builder addEventData(int i, Data.KeyValue keyvalue)
	        {
	            if(keyvalue == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventDataIsMutable();
	                eventData_.add(i, keyvalue);
	                return this;
	            }
	        }
	
	        public final TileEventRequest.Builder addEventData(Data.KeyValue.Builder builder)
	        {
	            ensureEventDataIsMutable();
	            eventData_.add(builder.build());
	            return this;
	        }
	
	        public final TileEventRequest.Builder addEventData(Data.KeyValue keyvalue)
	        {
	            if(keyvalue == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventDataIsMutable();
	                eventData_.add(keyvalue);
	                return this;
	            }
	        }
	
	        public final TileEventRequest build()
	        {
	            TileEventRequest tileeventrequest = buildPartial();
	            if(!tileeventrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("tileeventrequest"));
	            else
	                return tileeventrequest;
	        }
	
	        public final TileEventRequest buildPartial()
	        {
	            TileEventRequest tileeventrequest = new TileEventRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            tileeventrequest.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            tileeventrequest.tileType_ = tileType_;
	            if((i & 4) == 4)
	                k |= 4;
	            tileeventrequest.tileVersion_ = tileVersion_;
	            if((i & 8) == 8)
	                k |= 8;
	            tileeventrequest.eventType_ = eventType_;
	            if((0x10 & bitField0_) == 16)
	            {
	                eventData_ = Collections.unmodifiableList(eventData_);
	                bitField0_ = 0xffffffef & bitField0_;
	            }
	            tileeventrequest.eventData_ = eventData_;
	            if((i & 0x20) == 32)
	                k |= 0x10;
	            tileeventrequest.stubbyInfo_ = stubbyInfo_;
	            tileeventrequest.bitField0_ = k;
	            return tileeventrequest;
	        }
	
	        public final TileEventRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            tileType_ = "";
	            bitField0_ = -3 & bitField0_;
	            tileVersion_ = 0;
	            bitField0_ = -5 & bitField0_;
	            eventType_ = "";
	            bitField0_ = -9 & bitField0_;
	            eventData_ = Collections.emptyList();
	            bitField0_ = 0xffffffef & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final TileEventRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = TileEventRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final TileEventRequest.Builder clearEventData()
	        {
	            eventData_ = Collections.emptyList();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final TileEventRequest.Builder clearEventType()
	        {
	            bitField0_ = -9 & bitField0_;
	            eventType_ = TileEventRequest.getDefaultInstance().getEventType();
	            return this;
	        }
	
	        public final TileEventRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final TileEventRequest.Builder clearTileType()
	        {
	            bitField0_ = -3 & bitField0_;
	            tileType_ = TileEventRequest.getDefaultInstance().getTileType();
	            return this;
	        }
	
	        public final TileEventRequest.Builder clearTileVersion()
	        {
	            bitField0_ = -5 & bitField0_;
	            tileVersion_ = 0;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final TileEventRequest getDefaultInstanceForType()
	        {
	            return TileEventRequest.getDefaultInstance();
	        }
	
	        public final Data.KeyValue getEventData(int i)
	        {
	            return (Data.KeyValue)eventData_.get(i);
	        }
	
	        public final int getEventDataCount()
	        {
	            return eventData_.size();
	        }
	
	        public final List getEventDataList()
	        {
	            return Collections.unmodifiableList(eventData_);
	        }
	
	        public final String getEventType()
	        {
	            Object obj = eventType_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                eventType_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final String getTileType()
	        {
	            Object obj = tileType_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                tileType_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final int getTileVersion()
	        {
	            return tileVersion_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventType()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileType()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileVersion()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((TileEventRequest)generatedmessagelite);
	        }
	
	        public final TileEventRequest.Builder mergeFrom(TileEventRequest tileeventrequest)
	        {
	            if(tileeventrequest == TileEventRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(tileeventrequest.hasConversationId())
	                setConversationId(tileeventrequest.getConversationId());
	            if(tileeventrequest.hasTileType())
	                setTileType(tileeventrequest.getTileType());
	            if(tileeventrequest.hasTileVersion())
	                setTileVersion(tileeventrequest.getTileVersion());
	            if(tileeventrequest.hasEventType())
	                setEventType(tileeventrequest.getEventType());
	            if(!tileeventrequest.eventData_.isEmpty())
	                if(eventData_.isEmpty())
	                {
	                    eventData_ = tileeventrequest.eventData_;
	                    bitField0_ = 0xffffffef & bitField0_;
	                } else
	                {
	                    ensureEventDataIsMutable();
	                    eventData_.addAll(tileeventrequest.eventData_);
	                }
	            if(tileeventrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = tileeventrequest.getStubbyInfo();
	                if((0x20 & bitField0_) == 32 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            return this;
	        }
	
	        public final TileEventRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final TileEventRequest.Builder setEventData(int i, Data.KeyValue.Builder builder)
	        {
	            ensureEventDataIsMutable();
	            eventData_.set(i, builder.build());
	            return this;
	        }
	
	        public final TileEventRequest.Builder setEventData(int i, Data.KeyValue keyvalue)
	        {
	            if(keyvalue == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventDataIsMutable();
	                eventData_.set(i, keyvalue);
	                return this;
	            }
	        }
	
	        public final TileEventRequest.Builder setEventType(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                eventType_ = s;
	                return this;
	            }
	        }
	
	        public final TileEventRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final TileEventRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final TileEventRequest.Builder setTileType(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                tileType_ = s;
	                return this;
	            }
	        }
	
	        public final TileEventRequest.Builder setTileVersion(int i)
	        {
	            bitField0_ = 4 | bitField0_;
	            tileVersion_ = i;
	            return this;
	        }
	    }
	}
	
	
	//======================================================================================
	//								EventStreamResponse	
	//======================================================================================
	
	public static interface EventStreamResponseOrBuilder extends MessageLiteOrBuilder
	{
	
	    public abstract String getConversationId();
	
	    public abstract long getEarliest();
	
	    public abstract EventStreamResponse.Event getEvent(int i);
	
	    public abstract int getEventCount();
	
	    public abstract List getEventList();
	
	    public abstract long getLatest();
	
	    public abstract boolean getMore();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasEarliest();
	
	    public abstract boolean hasLatest();
	
	    public abstract boolean hasMore();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class EventStreamResponse extends GeneratedMessageLite implements EventStreamResponseOrBuilder {
	
		private static final EventStreamResponse defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private long earliest_;
	    private List event_;
	    private long latest_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private boolean more_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        EventStreamResponse eventstreamresponse = new EventStreamResponse();
	        defaultInstance = eventstreamresponse;
	        eventstreamresponse.conversationId_ = "";
	        eventstreamresponse.event_ = Collections.emptyList();
	        eventstreamresponse.more_ = false;
	        eventstreamresponse.earliest_ = 0L;
	        eventstreamresponse.latest_ = 0L;
	        eventstreamresponse.status_ = Data.ResponseStatus.OK;
	    }

	    private EventStreamResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    EventStreamResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static EventStreamResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	    
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
        {
            return new Builder();
        }
	    
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
        {
            return new Builder().mergeFrom(this);
        }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(EventStreamResponse eventstreamresponse)
	    {
	        return new Builder().mergeFrom(eventstreamresponse);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final EventStreamResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final long getEarliest()
	    {
	        return earliest_;
	    }
	
	    public final Event getEvent(int i)
	    {
	        return (Event)event_.get(i);
	    }
	
	    public final int getEventCount()
	    {
	        return event_.size();
	    }
	
	    public final List getEventList()
	    {
	        return event_;
	    }
	
	    public final EventOrBuilder getEventOrBuilder(int i)
	    {
	        return (EventOrBuilder)event_.get(i);
	    }
	
	    public final List getEventOrBuilderList()
	    {
	        return event_;
	    }
	
	    public final long getLatest()
	    {
	        return latest_;
	    }
	
	    public final boolean getMore()
	    {
	        return more_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            for(int l = 0; l < event_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(2, (MessageLite)event_.get(l));
	
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBoolSize(3, more_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeInt64Size(4, earliest_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeInt64Size(5, latest_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeEnumSize(6, status_.getNumber());
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEarliest()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLatest()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMore()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        for(int i = 0; i < event_.size(); i++)
	            codedoutputstream.writeMessage(2, (MessageLite)event_.get(i));
	
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBool(3, more_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeInt64(4, earliest_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeInt64(5, latest_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeEnum(6, status_.getNumber());
	    }
	    
	    //========================================================================
	    //							Builder
	    //========================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements EventStreamResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private long earliest_;
	        private List event_;
	        private long latest_;
	        private boolean more_;
	        private Data.ResponseStatus status_;

	        private Builder()
	        {
	            conversationId_ = "";
	            event_ = Collections.emptyList();
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public EventStreamResponse.Builder clone()
	        {
	            return (new EventStreamResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureEventIsMutable()
	        {
	            if((2 & bitField0_) != 2)
	            {
	                event_ = new ArrayList(event_);
	                bitField0_ = 2 | bitField0_;
	            }
	        }
	
	        public EventStreamResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    EventStreamResponse.Event.Builder builder = EventStreamResponse.Event.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addEvent(builder.buildPartial());
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    more_ = codedinputstream.readBool();
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 8 | bitField0_;
	                    earliest_ = codedinputstream.readInt64();
	                    break;
	
	                case 40: // '('
	                    bitField0_ = 0x10 | bitField0_;
	                    latest_ = codedinputstream.readInt64();
	                    break;
	
	                case 48: // '0'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 0x20 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final EventStreamResponse.Builder addAllEvent(Iterable iterable)
	        {
	            ensureEventIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, event_);
	            return this;
	        }
	
	        public final EventStreamResponse.Builder addEvent(int i, EventStreamResponse.Event.Builder builder)
	        {
	            ensureEventIsMutable();
	            event_.add(i, builder.build());
	            return this;
	        }
	
	        public final EventStreamResponse.Builder addEvent(int i, EventStreamResponse.Event event)
	        {
	            if(event == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventIsMutable();
	                event_.add(i, event);
	                return this;
	            }
	        }
	
	        public final EventStreamResponse.Builder addEvent(EventStreamResponse.Event.Builder builder)
	        {
	            ensureEventIsMutable();
	            event_.add(builder.build());
	            return this;
	        }
	
	        public final EventStreamResponse.Builder addEvent(EventStreamResponse.Event event)
	        {
	            if(event == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventIsMutable();
	                event_.add(event);
	                return this;
	            }
	        }
	
	        public final EventStreamResponse build()
	        {
	            EventStreamResponse eventstreamresponse = buildPartial();
	            if(!eventstreamresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("eventstreamresponse"));
	            else
	                return eventstreamresponse;
	        }
	
	        public final EventStreamResponse buildPartial()
	        {
	            EventStreamResponse eventstreamresponse = new EventStreamResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            eventstreamresponse.conversationId_ = conversationId_;
	            if((2 & bitField0_) == 2)
	            {
	                event_ = Collections.unmodifiableList(event_);
	                bitField0_ = -3 & bitField0_;
	            }
	            eventstreamresponse.event_ = event_;
	            if((i & 4) == 4)
	                k |= 2;
	            eventstreamresponse.more_ = more_;
	            if((i & 8) == 8)
	                k |= 4;
	            eventstreamresponse.earliest_ = earliest_;
	            if((i & 0x10) == 16)
	                k |= 8;
	            eventstreamresponse.latest_ = latest_;
	            if((i & 0x20) == 32)
	                k |= 0x10;
	            eventstreamresponse.status_ = status_;
	            eventstreamresponse.bitField0_ = k;
	            return eventstreamresponse;
	        }
	
	        public final EventStreamResponse.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            event_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            more_ = false;
	            bitField0_ = -5 & bitField0_;
	            earliest_ = 0L;
	            bitField0_ = -9 & bitField0_;
	            latest_ = 0L;
	            bitField0_ = 0xffffffef & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = EventStreamResponse.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final EventStreamResponse.Builder clearEarliest()
	        {
	            bitField0_ = -9 & bitField0_;
	            earliest_ = 0L;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder clearEvent()
	        {
	            event_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder clearLatest()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            latest_ = 0L;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder clearMore()
	        {
	            bitField0_ = -5 & bitField0_;
	            more_ = false;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder clearStatus()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final EventStreamResponse getDefaultInstanceForType()
	        {
	            return EventStreamResponse.getDefaultInstance();
	        }
	
	        public final long getEarliest()
	        {
	            return earliest_;
	        }
	
	        public final EventStreamResponse.Event getEvent(int i)
	        {
	            return (EventStreamResponse.Event)event_.get(i);
	        }
	
	        public final int getEventCount()
	        {
	            return event_.size();
	        }
	
	        public final List getEventList()
	        {
	            return Collections.unmodifiableList(event_);
	        }
	
	        public final long getLatest()
	        {
	            return latest_;
	        }
	
	        public final boolean getMore()
	        {
	            return more_;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEarliest()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLatest()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMore()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((EventStreamResponse)lite);
			}

			public final EventStreamResponse.Builder mergeFrom(EventStreamResponse eventstreamresponse)
	        {
	            if(eventstreamresponse == EventStreamResponse.getDefaultInstance()) {
	            	return this;
	            }
	
	            if(eventstreamresponse.hasConversationId())
	                setConversationId(eventstreamresponse.getConversationId());
	            if(!eventstreamresponse.event_.isEmpty())
	                if(event_.isEmpty())
	                {
	                    event_ = eventstreamresponse.event_;
	                    bitField0_ = -3 & bitField0_;
	                } else
	                {
	                    ensureEventIsMutable();
	                    event_.addAll(eventstreamresponse.event_);
	                }
	            if(eventstreamresponse.hasMore())
	                setMore(eventstreamresponse.getMore());
	            if(eventstreamresponse.hasEarliest())
	                setEarliest(eventstreamresponse.getEarliest());
	            if(eventstreamresponse.hasLatest())
	                setLatest(eventstreamresponse.getLatest());
	            if(eventstreamresponse.hasStatus())
	                setStatus(eventstreamresponse.getStatus());
	            return this;
	        }
	
	        public final EventStreamResponse.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final EventStreamResponse.Builder setEarliest(long l)
	        {
	            bitField0_ = 8 | bitField0_;
	            earliest_ = l;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder setEvent(int i, EventStreamResponse.Event.Builder builder)
	        {
	            ensureEventIsMutable();
	            event_.set(i, builder.build());
	            return this;
	        }
	
	        public final EventStreamResponse.Builder setEvent(int i, EventStreamResponse.Event event)
	        {
	            if(event == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventIsMutable();
	                event_.set(i, event);
	                return this;
	            }
	        }
	
	        public final EventStreamResponse.Builder setLatest(long l)
	        {
	            bitField0_ = 0x10 | bitField0_;
	            latest_ = l;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder setMore(boolean flag)
	        {
	            bitField0_ = 4 | bitField0_;
	            more_ = flag;
	            return this;
	        }
	
	        public final EventStreamResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x20 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	    
	    //
	    
	    public static enum ReceiverState implements com.google.protobuf.Internal.EnumLite {
	    	
	    	UNKNOWN(0),
	    	NO_RECEIPT(1),
	    	DELIVERED(2),
	    	READ(3);
	    	
	    	private int value;
	    	
	    	private ReceiverState(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static ReceiverState valueOf(int value) {
	    		for(ReceiverState r : ReceiverState.values()) {
	    			if(r.value == value) {
	    				return r;
	    			}
	    		}
	    		return null;
	    	}
	    	
	    }
	    
	    //=========================================================================
	    //								Event
	    //=========================================================================
	    public static interface EventOrBuilder extends MessageLiteOrBuilder {

	        public abstract ChatMessage getChatMessage();
	
	        public abstract GroupConversationRename getGroupConversationRename();
	
	        public abstract MembershipChange getMembershipChange();
	
	        public abstract Migration getMigration();
	
	        public abstract Receipt getReceipt();
	
	        public abstract EventStreamResponse.ReceiverState getReceiverState();
	
	        public abstract TileEvent getTileEvent();
	
	        public abstract long getTimestamp();
	
	        public abstract boolean hasChatMessage();
	
	        public abstract boolean hasGroupConversationRename();
	
	        public abstract boolean hasMembershipChange();
	
	        public abstract boolean hasMigration();
	
	        public abstract boolean hasReceipt();
	
	        public abstract boolean hasReceiverState();
	
	        public abstract boolean hasTileEvent();
	
	        public abstract boolean hasTimestamp();
	    }
	    
	    public static final class Event extends GeneratedMessageLite implements EventStreamResponse.EventOrBuilder {
	
	    	private static final EventStreamResponse.Event defaultInstance;
	        private int bitField0_;
	        private ChatMessage chatMessage_;
	        private GroupConversationRename groupConversationRename_;
	        private MembershipChange membershipChange_;
	        private byte memoizedIsInitialized;
	        private int memoizedSerializedSize;
	        private Migration migration_;
	        private Receipt receipt_;
	        private EventStreamResponse.ReceiverState receiverState_;
	        private TileEvent tileEvent_;
	        private long timestamp_;

	        static 
	        {
	            EventStreamResponse.Event event = new EventStreamResponse.Event();
	            defaultInstance = event;
	            event.timestamp_ = 0L;
	            event.receiverState_ = EventStreamResponse.ReceiverState.UNKNOWN;
	            event.chatMessage_ = ChatMessage.getDefaultInstance();
	            event.receipt_ = Receipt.getDefaultInstance();
	            event.membershipChange_ = MembershipChange.getDefaultInstance();
	            event.groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	            event.migration_ = Migration.getDefaultInstance();
	            event.tileEvent_ = TileEvent.getDefaultInstance();
	        }

	        private Event()
	        {
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }

	        Event(Builder builder)
	        {
	            super();
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }
	        
	        public static EventStreamResponse.Event getDefaultInstance()
	        {
	            return defaultInstance;
	        }
	
	        public static Builder newBuilder()
	        {
	            return new Builder();
	        }
	
	        public static Builder newBuilder(EventStreamResponse.Event event)
	        {
	            return new Builder().mergeFrom(event);
	        }
	
	        public final ChatMessage getChatMessage()
	        {
	            return chatMessage_;
	        }
	
	        public final EventStreamResponse.Event getDefaultInstanceForType()
	        {
	            return defaultInstance;
	        }
	
	        public final GroupConversationRename getGroupConversationRename()
	        {
	            return groupConversationRename_;
	        }
	
	        public final MembershipChange getMembershipChange()
	        {
	            return membershipChange_;
	        }
	
	        public final Migration getMigration()
	        {
	            return migration_;
	        }
	
	        public final Receipt getReceipt()
	        {
	            return receipt_;
	        }
	
	        public final EventStreamResponse.ReceiverState getReceiverState()
	        {
	            return receiverState_;
	        }
	
	        public final int getSerializedSize()
	        {
	            int i = memoizedSerializedSize;
	            int l;
	            if(i != -1)
	            {
	                l = i;
	            } else
	            {
	                int j = 1 & bitField0_;
	                int k = 0;
	                if(j == 1)
	                    k = 0 + CodedOutputStream.computeInt64Size(2, timestamp_);
	                if((4 & bitField0_) == 4)
	                    k += CodedOutputStream.computeMessageSize(3, chatMessage_);
	                if((8 & bitField0_) == 8)
	                    k += CodedOutputStream.computeMessageSize(4, receipt_);
	                if((0x10 & bitField0_) == 16)
	                    k += CodedOutputStream.computeMessageSize(5, membershipChange_);
	                if((0x20 & bitField0_) == 32)
	                    k += CodedOutputStream.computeMessageSize(6, groupConversationRename_);
	                if((0x40 & bitField0_) == 64)
	                    k += CodedOutputStream.computeMessageSize(7, migration_);
	                if((0x80 & bitField0_) == 128)
	                    k += CodedOutputStream.computeMessageSize(8, tileEvent_);
	                if((2 & bitField0_) == 2)
	                    k += CodedOutputStream.computeEnumSize(9, receiverState_.getNumber());
	                memoizedSerializedSize = k;
	                l = k;
	            }
	            return l;
	        }
	
	        public final TileEvent getTileEvent()
	        {
	            return tileEvent_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasChatMessage()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasGroupConversationRename()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMembershipChange()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMigration()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceipt()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceiverState()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileEvent()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            boolean flag = true;
	            byte byte0 = memoizedIsInitialized;
	            if(byte0 != -1)
	            {
	                if(byte0 != 1)
	                    flag = false;
	            } else
	            {
	                memoizedIsInitialized = 1;
	            }
	            return flag;
	        }
	
	        public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	        {
	            return new Builder();
	        }

	        public final com.google.protobuf.MessageLite.Builder toBuilder()
	        {
	            return new Builder().mergeFrom(this);
	        }
	        
	        protected final Object writeReplace()
	            throws ObjectStreamException
	        {
	            return super.writeReplace();
	        }
	
	        public final void writeTo(CodedOutputStream codedoutputstream)
	            throws IOException
	        {
	            getSerializedSize();
	            if((1 & bitField0_) == 1)
	                codedoutputstream.writeInt64(2, timestamp_);
	            if((4 & bitField0_) == 4)
	                codedoutputstream.writeMessage(3, chatMessage_);
	            if((8 & bitField0_) == 8)
	                codedoutputstream.writeMessage(4, receipt_);
	            if((0x10 & bitField0_) == 16)
	                codedoutputstream.writeMessage(5, membershipChange_);
	            if((0x20 & bitField0_) == 32)
	                codedoutputstream.writeMessage(6, groupConversationRename_);
	            if((0x40 & bitField0_) == 64)
	                codedoutputstream.writeMessage(7, migration_);
	            if((0x80 & bitField0_) == 128)
	                codedoutputstream.writeMessage(8, tileEvent_);
	            if((2 & bitField0_) == 2)
	                codedoutputstream.writeEnum(9, receiverState_.getNumber());
	        }
	        
	        //==================================================================
	        //						Builder
	        //==================================================================
	        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements EventStreamResponse.EventOrBuilder {
	
	        	private int bitField0_;
		        private ChatMessage chatMessage_;
		        private GroupConversationRename groupConversationRename_;
		        private MembershipChange membershipChange_;
		        private Migration migration_;
		        private Receipt receipt_;
		        private EventStreamResponse.ReceiverState receiverState_;
		        private TileEvent tileEvent_;
		        private long timestamp_;


		        private Builder()
		        {
		            receiverState_ = EventStreamResponse.ReceiverState.UNKNOWN;
		            chatMessage_ = ChatMessage.getDefaultInstance();
		            receipt_ = Receipt.getDefaultInstance();
		            membershipChange_ = MembershipChange.getDefaultInstance();
		            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
		            migration_ = Migration.getDefaultInstance();
		            tileEvent_ = TileEvent.getDefaultInstance();
		        }
		        
		        public EventStreamResponse.Event.Builder clone()
		        {
		            return (new EventStreamResponse.Event.Builder()).mergeFrom(buildPartial());
		        }
	
		        public EventStreamResponse.Event.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
		            
		        	do
		            {
		                int i = codedinputstream.readTag();
		                switch(i)
		                {
		                default:
		                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
		                        continue;
		                    // fall through
	
		                case 0: // '\0'
		                    return this;
	
		                case 16: // '\020'
		                    bitField0_ = 1 | bitField0_;
		                    timestamp_ = codedinputstream.readInt64();
		                    break;
	
		                case 26: // '\032'
		                    ChatMessage.Builder builder5 = ChatMessage.newBuilder();
		                    if(hasChatMessage())
		                        builder5.mergeFrom(getChatMessage());
		                    codedinputstream.readMessage(builder5, extensionregistrylite);
		                    setChatMessage(builder5.buildPartial());
		                    break;
	
		                case 34: // '"'
		                    Receipt.Builder builder4 = Receipt.newBuilder();
		                    if(hasReceipt())
		                        builder4.mergeFrom(getReceipt());
		                    codedinputstream.readMessage(builder4, extensionregistrylite);
		                    setReceipt(builder4.buildPartial());
		                    break;
	
		                case 42: // '*'
		                    MembershipChange.Builder builder3 = MembershipChange.newBuilder();
		                    if(hasMembershipChange())
		                        builder3.mergeFrom(getMembershipChange());
		                    codedinputstream.readMessage(builder3, extensionregistrylite);
		                    setMembershipChange(builder3.buildPartial());
		                    break;
	
		                case 50: // '2'
		                    GroupConversationRename.Builder builder2 = GroupConversationRename.newBuilder();
		                    if(hasGroupConversationRename())
		                        builder2.mergeFrom(getGroupConversationRename());
		                    codedinputstream.readMessage(builder2, extensionregistrylite);
		                    setGroupConversationRename(builder2.buildPartial());
		                    break;
	
		                case 58: // ':'
		                    Migration.Builder builder1 = Migration.newBuilder();
		                    if(hasMigration())
		                        builder1.mergeFrom(getMigration());
		                    codedinputstream.readMessage(builder1, extensionregistrylite);
		                    setMigration(builder1.buildPartial());
		                    break;
	
		                case 66: // 'B'
		                    TileEvent.Builder builder = TileEvent.newBuilder();
		                    if(hasTileEvent())
		                        builder.mergeFrom(getTileEvent());
		                    codedinputstream.readMessage(builder, extensionregistrylite);
		                    setTileEvent(builder.buildPartial());
		                    break;
	
		                case 72: // 'H'
		                    EventStreamResponse.ReceiverState receiverstate = EventStreamResponse.ReceiverState.valueOf(codedinputstream.readEnum());
		                    if(receiverstate != null)
		                    {
		                        bitField0_ = 2 | bitField0_;
		                        receiverState_ = receiverstate;
		                    }
		                    break;
		                }
		            } while(true);
		        }
	
		        public final EventStreamResponse.Event build()
		        {
		            EventStreamResponse.Event event = buildPartial();
		            if(!event.isInitialized())
		                throw new UninitializedMessageException(Arrays.asList("event"));
		            else
		                return event;
		        }
	
		        public final EventStreamResponse.Event buildPartial()
		        {
		            EventStreamResponse.Event event = new EventStreamResponse.Event(this);
		            int i = bitField0_;
		            int j = i & 1;
		            int k = 0;
		            if(j == 1)
		                k = 1;
		            event.timestamp_ = timestamp_;
		            if((i & 2) == 2)
		                k |= 2;
		            event.receiverState_ = receiverState_;
		            if((i & 4) == 4)
		                k |= 4;
		            event.chatMessage_ = chatMessage_;
		            if((i & 8) == 8)
		                k |= 8;
		            event.receipt_ = receipt_;
		            if((i & 0x10) == 16)
		                k |= 0x10;
		            event.membershipChange_ = membershipChange_;
		            if((i & 0x20) == 32)
		                k |= 0x20;
		            event.groupConversationRename_ = groupConversationRename_;
		            if((i & 0x40) == 64)
		                k |= 0x40;
		            event.migration_ = migration_;
		            if((i & 0x80) == 128)
		                k |= 0x80;
		            event.tileEvent_ = tileEvent_;
		            event.bitField0_ = k;
		            return event;
		        }
	
		        public final EventStreamResponse.Event.Builder clear()
		        {
		            super.clear();
		            timestamp_ = 0L;
		            bitField0_ = -2 & bitField0_;
		            receiverState_ = EventStreamResponse.ReceiverState.UNKNOWN;
		            bitField0_ = -3 & bitField0_;
		            chatMessage_ = ChatMessage.getDefaultInstance();
		            bitField0_ = -5 & bitField0_;
		            receipt_ = Receipt.getDefaultInstance();
		            bitField0_ = -9 & bitField0_;
		            membershipChange_ = MembershipChange.getDefaultInstance();
		            bitField0_ = 0xffffffef & bitField0_;
		            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
		            bitField0_ = 0xffffffdf & bitField0_;
		            migration_ = Migration.getDefaultInstance();
		            bitField0_ = 0xffffffbf & bitField0_;
		            tileEvent_ = TileEvent.getDefaultInstance();
		            bitField0_ = 0xffffff7f & bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearChatMessage()
		        {
		            chatMessage_ = ChatMessage.getDefaultInstance();
		            bitField0_ = -5 & bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearGroupConversationRename()
		        {
		            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
		            bitField0_ = 0xffffffdf & bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearMembershipChange()
		        {
		            membershipChange_ = MembershipChange.getDefaultInstance();
		            bitField0_ = 0xffffffef & bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearMigration()
		        {
		            migration_ = Migration.getDefaultInstance();
		            bitField0_ = 0xffffffbf & bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearReceipt()
		        {
		            receipt_ = Receipt.getDefaultInstance();
		            bitField0_ = -9 & bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearReceiverState()
		        {
		            bitField0_ = -3 & bitField0_;
		            receiverState_ = EventStreamResponse.ReceiverState.UNKNOWN;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearTileEvent()
		        {
		            tileEvent_ = TileEvent.getDefaultInstance();
		            bitField0_ = 0xffffff7f & bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder clearTimestamp()
		        {
		            bitField0_ = -2 & bitField0_;
		            timestamp_ = 0L;
		            return this;
		        }
	
		        public final ChatMessage getChatMessage()
		        {
		            return chatMessage_;
		        }
	
		        public final EventStreamResponse.Event getDefaultInstanceForType()
		        {
		            return EventStreamResponse.Event.getDefaultInstance();
		        }
	
		        public final GroupConversationRename getGroupConversationRename()
		        {
		            return groupConversationRename_;
		        }
	
		        public final MembershipChange getMembershipChange()
		        {
		            return membershipChange_;
		        }
	
		        public final Migration getMigration()
		        {
		            return migration_;
		        }
	
		        public final Receipt getReceipt()
		        {
		            return receipt_;
		        }
	
		        public final EventStreamResponse.ReceiverState getReceiverState()
		        {
		            return receiverState_;
		        }
	
		        public final TileEvent getTileEvent()
		        {
		            return tileEvent_;
		        }
	
		        public final long getTimestamp()
		        {
		            return timestamp_;
		        }
	
		        public final boolean hasChatMessage()
		        {
		            boolean flag;
		            if((4 & bitField0_) == 4)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasGroupConversationRename()
		        {
		            boolean flag;
		            if((0x20 & bitField0_) == 32)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasMembershipChange()
		        {
		            boolean flag;
		            if((0x10 & bitField0_) == 16)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasMigration()
		        {
		            boolean flag;
		            if((0x40 & bitField0_) == 64)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasReceipt()
		        {
		            boolean flag;
		            if((8 & bitField0_) == 8)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasReceiverState()
		        {
		            boolean flag;
		            if((2 & bitField0_) == 2)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasTileEvent()
		        {
		            boolean flag;
		            if((0x80 & bitField0_) == 128)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasTimestamp()
		        {
		            boolean flag = true;
		            if((1 & bitField0_) != 1)
		                flag = false;
		            return flag;
		        }
	
		        public final boolean isInitialized()
		        {
		            return true;
		        }
	
		        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
		        {
		            return mergeFrom((EventStreamResponse.Event)generatedmessagelite);
		        }
	
		        public final EventStreamResponse.Event.Builder mergeFrom(EventStreamResponse.Event event)
		        {
		            if(event == EventStreamResponse.Event.getDefaultInstance()) {
		            	return this;
		            }
		            
		            if(event.hasTimestamp())
		                setTimestamp(event.getTimestamp());
		            if(event.hasReceiverState())
		                setReceiverState(event.getReceiverState());
		            if(event.hasChatMessage())
		            {
		                ChatMessage chatmessage = event.getChatMessage();
		                if((4 & bitField0_) == 4 && chatMessage_ != ChatMessage.getDefaultInstance())
		                    chatMessage_ = ChatMessage.newBuilder(chatMessage_).mergeFrom(chatmessage).buildPartial();
		                else
		                    chatMessage_ = chatmessage;
		                bitField0_ = 4 | bitField0_;
		            }
		            if(event.hasReceipt())
		            {
		                Receipt receipt = event.getReceipt();
		                if((8 & bitField0_) == 8 && receipt_ != Receipt.getDefaultInstance())
		                    receipt_ = Receipt.newBuilder(receipt_).mergeFrom(receipt).buildPartial();
		                else
		                    receipt_ = receipt;
		                bitField0_ = 8 | bitField0_;
		            }
		            if(event.hasMembershipChange())
		            {
		                MembershipChange membershipchange = event.getMembershipChange();
		                if((0x10 & bitField0_) == 16 && membershipChange_ != MembershipChange.getDefaultInstance())
		                    membershipChange_ = MembershipChange.newBuilder(membershipChange_).mergeFrom(membershipchange).buildPartial();
		                else
		                    membershipChange_ = membershipchange;
		                bitField0_ = 0x10 | bitField0_;
		            }
		            if(event.hasGroupConversationRename())
		            {
		                GroupConversationRename groupconversationrename = event.getGroupConversationRename();
		                if((0x20 & bitField0_) == 32 && groupConversationRename_ != GroupConversationRename.getDefaultInstance())
		                    groupConversationRename_ = GroupConversationRename.newBuilder(groupConversationRename_).mergeFrom(groupconversationrename).buildPartial();
		                else
		                    groupConversationRename_ = groupconversationrename;
		                bitField0_ = 0x20 | bitField0_;
		            }
		            if(event.hasMigration())
		            {
		                Migration migration = event.getMigration();
		                if((0x40 & bitField0_) == 64 && migration_ != Migration.getDefaultInstance())
		                    migration_ = Migration.newBuilder(migration_).mergeFrom(migration).buildPartial();
		                else
		                    migration_ = migration;
		                bitField0_ = 0x40 | bitField0_;
		            }
		            if(event.hasTileEvent())
		            {
		                TileEvent tileevent = event.getTileEvent();
		                if((0x80 & bitField0_) == 128 && tileEvent_ != TileEvent.getDefaultInstance())
		                    tileEvent_ = TileEvent.newBuilder(tileEvent_).mergeFrom(tileevent).buildPartial();
		                else
		                    tileEvent_ = tileevent;
		                bitField0_ = 0x80 | bitField0_;
		            }
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder setChatMessage(ChatMessage.Builder builder)
		        {
		            chatMessage_ = builder.build();
		            bitField0_ = 4 | bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder setChatMessage(ChatMessage chatmessage)
		        {
		            if(chatmessage == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                chatMessage_ = chatmessage;
		                bitField0_ = 4 | bitField0_;
		                return this;
		            }
		        }
	
		        public final EventStreamResponse.Event.Builder setGroupConversationRename(GroupConversationRename.Builder builder)
		        {
		            groupConversationRename_ = builder.build();
		            bitField0_ = 0x20 | bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder setGroupConversationRename(GroupConversationRename groupconversationrename)
		        {
		            if(groupconversationrename == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                groupConversationRename_ = groupconversationrename;
		                bitField0_ = 0x20 | bitField0_;
		                return this;
		            }
		        }
	
		        public final EventStreamResponse.Event.Builder setMembershipChange(MembershipChange.Builder builder)
		        {
		            membershipChange_ = builder.build();
		            bitField0_ = 0x10 | bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder setMembershipChange(MembershipChange membershipchange)
		        {
		            if(membershipchange == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                membershipChange_ = membershipchange;
		                bitField0_ = 0x10 | bitField0_;
		                return this;
		            }
		        }
	
		        public final EventStreamResponse.Event.Builder setMigration(Migration.Builder builder)
		        {
		            migration_ = builder.build();
		            bitField0_ = 0x40 | bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder setMigration(Migration migration)
		        {
		            if(migration == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                migration_ = migration;
		                bitField0_ = 0x40 | bitField0_;
		                return this;
		            }
		        }
	
		        public final EventStreamResponse.Event.Builder setReceipt(Receipt.Builder builder)
		        {
		            receipt_ = builder.build();
		            bitField0_ = 8 | bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder setReceipt(Receipt receipt)
		        {
		            if(receipt == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                receipt_ = receipt;
		                bitField0_ = 8 | bitField0_;
		                return this;
		            }
		        }
	
		        public final EventStreamResponse.Event.Builder setReceiverState(EventStreamResponse.ReceiverState receiverstate)
		        {
		            if(receiverstate == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                bitField0_ = 2 | bitField0_;
		                receiverState_ = receiverstate;
		                return this;
		            }
		        }
	
		        public final EventStreamResponse.Event.Builder setTileEvent(TileEvent.Builder builder)
		        {
		            tileEvent_ = builder.build();
		            bitField0_ = 0x80 | bitField0_;
		            return this;
		        }
	
		        public final EventStreamResponse.Event.Builder setTileEvent(TileEvent tileevent)
		        {
		            if(tileevent == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                tileEvent_ = tileevent;
		                bitField0_ = 0x80 | bitField0_;
		                return this;
		            }
		        }
	
		        public final EventStreamResponse.Event.Builder setTimestamp(long l)
		        {
		            bitField0_ = 1 | bitField0_;
		            timestamp_ = l;
		            return this;
		        }
		    }
	    }
	}
	
	//==================================================================================================
	//
	//==================================================================================================
	public static interface ReceiptOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getMessageClientId();
	
	    public abstract String getMessageId();
	
	    public abstract long getMessageTimestamp();
	
	    public abstract String getRecipientId(int i);
	
	    public abstract int getRecipientIdCount();
	
	    public abstract List getRecipientIdList();
	
	    public abstract String getSenderId();
	
	    public abstract String getShardingHint();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract long getTimestamp();
	
	    public abstract Receipt.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasMessageClientId();
	
	    public abstract boolean hasMessageId();
	
	    public abstract boolean hasMessageTimestamp();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasShardingHint();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasTimestamp();
	
	    public abstract boolean hasType();
	}
	
	public static final class Receipt extends GeneratedMessageLite implements ReceiptOrBuilder {
		
		private static final Receipt defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object messageClientId_;
	    private Object messageId_;
	    private long messageTimestamp_;
	    private LazyStringList recipientId_;
	    private Object senderId_;
	    private Object shardingHint_;
	    private Data.StubbyInfo stubbyInfo_;
	    private long timestamp_;
	    private Type type_;

	    static 
	    {
	        Receipt receipt = new Receipt();
	        defaultInstance = receipt;
	        receipt.type_ = Type.UNKNOWN;
	        receipt.messageTimestamp_ = 0L;
	        receipt.conversationId_ = "";
	        receipt.senderId_ = "";
	        receipt.timestamp_ = 0L;
	        receipt.messageClientId_ = "";
	        receipt.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        receipt.messageId_ = "";
	        receipt.recipientId_ = LazyStringArrayList.EMPTY;
	        receipt.shardingHint_ = "";
	    }

	    private Receipt()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private Receipt(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Receipt getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getMessageClientIdBytes()
	    {
	        Object obj = messageClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            messageClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getMessageIdBytes()
	    {
	        Object obj = messageId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            messageId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getShardingHintBytes()
	    {
	        Object obj = shardingHint_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            shardingHint_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(Receipt receipt)
	    {
	        return new Builder().mergeFrom(receipt);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Receipt getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getMessageClientId()
	    {
	        Object obj = messageClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                messageClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getMessageId()
	    {
	        Object obj = messageId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                messageId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final long getMessageTimestamp()
	    {
	        return messageTimestamp_;
	    }
	
	    public final String getRecipientId(int i)
	    {
	        return (String)recipientId_.get(i);
	    }
	
	    public final int getRecipientIdCount()
	    {
	        return recipientId_.size();
	    }
	
	    public final List getRecipientIdList()
	    {
	        return recipientId_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int k1;
	        if(i != -1)
	        {
	            k1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((0x80 & bitField0_) == 128)
	                k += CodedOutputStream.computeBytesSize(2, getMessageIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getConversationIdBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeInt64Size(5, timestamp_);
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeBytesSize(6, getMessageClientIdBytes());
	            if((0x100 & bitField0_) == 256)
	                k += CodedOutputStream.computeBytesSize(7, getShardingHintBytes());
	            int l = 0;
	            for(int i1 = 0; i1 < recipientId_.size(); i1++)
	                l += CodedOutputStream.computeBytesSizeNoTag(recipientId_.getByteString(i1));
	
	            int j1 = k + l + 1 * getRecipientIdList().size();
	            if((0x40 & bitField0_) == 64)
	                j1 += CodedOutputStream.computeMessageSize(9, stubbyInfo_);
	            if((2 & bitField0_) == 2)
	                j1 += CodedOutputStream.computeInt64Size(10, messageTimestamp_);
	            memoizedSerializedSize = j1;
	            k1 = j1;
	        }
	        return k1;
	    }
	
	    public final String getShardingHint()
	    {
	        Object obj = shardingHint_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                shardingHint_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final Type getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMessageClientId()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMessageId()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMessageTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasShardingHint()
	    {
	        boolean flag;
	        if((0x100 & bitField0_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeBytes(2, getMessageIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getConversationIdBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getSenderIdBytes());
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeInt64(5, timestamp_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeBytes(6, getMessageClientIdBytes());
	        if((0x100 & bitField0_) == 256)
	            codedoutputstream.writeBytes(7, getShardingHintBytes());
	        for(int i = 0; i < recipientId_.size(); i++)
	            codedoutputstream.writeBytes(8, recipientId_.getByteString(i));
	
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeMessage(9, stubbyInfo_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(10, messageTimestamp_);
	    }
	    
	    public static enum Type implements com.google.protobuf.Internal.EnumLite {
	    	UNKNOWN(0),
	    	ACKNOWLEDGED(1),
	    	DELIVERED(2),
	    	READ(3);
	    	
	    	private int value;
	    	
	    	private Type(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static Type valueOf(int value) {
	    		for(Type t : Type.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //=====================================================================
	    //							Builder
	    //=====================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ReceiptOrBuilder {
	    	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object messageClientId_;
	        private Object messageId_;
	        private long messageTimestamp_;
	        private LazyStringList recipientId_;
	        private Object senderId_;
	        private Object shardingHint_;
	        private Data.StubbyInfo stubbyInfo_;
	        private long timestamp_;
	        private Receipt.Type type_;


	        private Builder()
	        {
	            type_ = Receipt.Type.UNKNOWN;
	            conversationId_ = "";
	            senderId_ = "";
	            messageClientId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            messageId_ = "";
	            recipientId_ = LazyStringArrayList.EMPTY;
	            shardingHint_ = "";
	        }
	
	        public Receipt.Builder clone()
	        {
	            return (new Receipt.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureRecipientIdIsMutable()
	        {
	            if((0x100 & bitField0_) != 256)
	            {
	                recipientId_ = new LazyStringArrayList(recipientId_);
	                bitField0_ = 0x100 | bitField0_;
	            }
	        }
	
	        public Receipt.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	            
	        	do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Receipt.Type type = Receipt.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 0x80 | bitField0_;
	                    messageId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 40: // '('
	                    bitField0_ = 0x10 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 50: // '2'
	                    bitField0_ = 0x20 | bitField0_;
	                    messageClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 58: // ':'
	                    bitField0_ = 0x200 | bitField0_;
	                    shardingHint_ = codedinputstream.readBytes();
	                    break;
	
	                case 66: // 'B'
	                    ensureRecipientIdIsMutable();
	                    recipientId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 74: // 'J'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	
	                case 80: // 'P'
	                    bitField0_ = 2 | bitField0_;
	                    messageTimestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final Receipt.Builder addAllRecipientId(Iterable iterable)
	        {
	            ensureRecipientIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, recipientId_);
	            return this;
	        }
	
	        public final Receipt.Builder addRecipientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.add(s);
	                return this;
	            }
	        }
	
	        public final Receipt build()
	        {
	            Receipt receipt = buildPartial();
	            if(!receipt.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("receipt"));
	            else
	                return receipt;
	        }
	
	        public final Receipt buildPartial()
	        {
	            Receipt receipt = new Receipt(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            receipt.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            receipt.messageTimestamp_ = messageTimestamp_;
	            if((i & 4) == 4)
	                k |= 4;
	            receipt.conversationId_ = conversationId_;
	            if((i & 8) == 8)
	                k |= 8;
	            receipt.senderId_ = senderId_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            receipt.timestamp_ = timestamp_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            receipt.messageClientId_ = messageClientId_;
	            if((i & 0x40) == 64)
	                k |= 0x40;
	            receipt.stubbyInfo_ = stubbyInfo_;
	            if((i & 0x80) == 128)
	                k |= 0x80;
	            receipt.messageId_ = messageId_;
	            if((0x100 & bitField0_) == 256)
	            {
	                recipientId_ = new UnmodifiableLazyStringList(recipientId_);
	                bitField0_ = 0xfffffeff & bitField0_;
	            }
	            receipt.recipientId_ = recipientId_;
	            if((i & 0x200) == 512)
	                k |= 0x100;
	            receipt.shardingHint_ = shardingHint_;
	            receipt.bitField0_ = k;
	            return receipt;
	        }
	
	        public final Receipt.Builder clear()
	        {
	            super.clear();
	            type_ = Receipt.Type.UNKNOWN;
	            bitField0_ = -2 & bitField0_;
	            messageTimestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -5 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -9 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = 0xffffffef & bitField0_;
	            messageClientId_ = "";
	            bitField0_ = 0xffffffdf & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            messageId_ = "";
	            bitField0_ = 0xffffff7f & bitField0_;
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xfffffeff & bitField0_;
	            shardingHint_ = "";
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final Receipt.Builder clearConversationId()
	        {
	            bitField0_ = -5 & bitField0_;
	            conversationId_ = Receipt.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final Receipt.Builder clearMessageClientId()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            messageClientId_ = Receipt.getDefaultInstance().getMessageClientId();
	            return this;
	        }
	
	        public final Receipt.Builder clearMessageId()
	        {
	            bitField0_ = 0xffffff7f & bitField0_;
	            messageId_ = Receipt.getDefaultInstance().getMessageId();
	            return this;
	        }
	
	        public final Receipt.Builder clearMessageTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            messageTimestamp_ = 0L;
	            return this;
	        }
	
	        public final Receipt.Builder clearRecipientId()
	        {
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final Receipt.Builder clearSenderId()
	        {
	            bitField0_ = -9 & bitField0_;
	            senderId_ = Receipt.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final Receipt.Builder clearShardingHint()
	        {
	            bitField0_ = 0xfffffdff & bitField0_;
	            shardingHint_ = Receipt.getDefaultInstance().getShardingHint();
	            return this;
	        }
	
	        public final Receipt.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final Receipt.Builder clearTimestamp()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final Receipt.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = Receipt.Type.UNKNOWN;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Receipt getDefaultInstanceForType()
	        {
	            return Receipt.getDefaultInstance();
	        }
	
	        public final String getMessageClientId()
	        {
	            Object obj = messageClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                messageClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getMessageId()
	        {
	            Object obj = messageId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                messageId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getMessageTimestamp()
	        {
	            return messageTimestamp_;
	        }
	
	        public final String getRecipientId(int i)
	        {
	            return (String)recipientId_.get(i);
	        }
	
	        public final int getRecipientIdCount()
	        {
	            return recipientId_.size();
	        }
	
	        public final List getRecipientIdList()
	        {
	            return Collections.unmodifiableList(recipientId_);
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getShardingHint()
	        {
	            Object obj = shardingHint_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                shardingHint_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final Receipt.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMessageClientId()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMessageId()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMessageTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasShardingHint()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((Receipt)lite);
			}

			public final Receipt.Builder mergeFrom(Receipt receipt)
	        {
	            if(receipt == Receipt.getDefaultInstance()) {
	            	return this;
	            }

	            if(receipt.hasType())
	                setType(receipt.getType());
	            if(receipt.hasMessageTimestamp())
	                setMessageTimestamp(receipt.getMessageTimestamp());
	            if(receipt.hasConversationId())
	                setConversationId(receipt.getConversationId());
	            if(receipt.hasSenderId())
	                setSenderId(receipt.getSenderId());
	            if(receipt.hasTimestamp())
	                setTimestamp(receipt.getTimestamp());
	            if(receipt.hasMessageClientId())
	                setMessageClientId(receipt.getMessageClientId());
	            if(receipt.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = receipt.getStubbyInfo();
	                if((0x40 & bitField0_) == 64 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x40 | bitField0_;
	            }
	            if(receipt.hasMessageId())
	                setMessageId(receipt.getMessageId());
	            if(!receipt.recipientId_.isEmpty())
	                if(recipientId_.isEmpty())
	                {
	                    recipientId_ = receipt.recipientId_;
	                    bitField0_ = 0xfffffeff & bitField0_;
	                } else
	                {
	                    ensureRecipientIdIsMutable();
	                    recipientId_.addAll(receipt.recipientId_);
	                }
	            if(receipt.hasShardingHint())
	                setShardingHint(receipt.getShardingHint());
	            return this;
	        }
	
	        public final Receipt.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final Receipt.Builder setMessageClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x20 | bitField0_;
	                messageClientId_ = s;
	                return this;
	            }
	        }
	
	        public final Receipt.Builder setMessageId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x80 | bitField0_;
	                messageId_ = s;
	                return this;
	            }
	        }
	
	        public final Receipt.Builder setMessageTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            messageTimestamp_ = l;
	            return this;
	        }
	
	        public final Receipt.Builder setRecipientId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final Receipt.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final Receipt.Builder setShardingHint(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x200 | bitField0_;
	                shardingHint_ = s;
	                return this;
	            }
	        }
	
	        public final Receipt.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x40 | bitField0_;
	            return this;
	        }
	
	        public final Receipt.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x40 | bitField0_;
	                return this;
	            }
	        }
	
	        public final Receipt.Builder setTimestamp(long l)
	        {
	            bitField0_ = 0x10 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	
	        public final Receipt.Builder setType(Receipt.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									MembershipChange
	//==================================================================================================
	public static interface MembershipChangeOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract Data.Participant getParticipant(int i);
	
	    public abstract int getParticipantCount();
	
	    public abstract String getParticipantId();
	
	    public abstract List getParticipantList();
	
	    public abstract String getRecipientId(int i);
	
	    public abstract int getRecipientIdCount();
	
	    public abstract List getRecipientIdList();
	
	    public abstract String getSenderId();
	
	    public abstract long getTimestamp();
	
	    public abstract MembershipChange.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasParticipantId();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasTimestamp();
	
	    public abstract boolean hasType();
	}
	
	public static final class MembershipChange extends GeneratedMessageLite implements MembershipChangeOrBuilder {
	
		private static final MembershipChange defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object participantId_;
	    private List participant_;
	    private LazyStringList recipientId_;
	    private Object senderId_;
	    private long timestamp_;
	    private Type type_;

	    static 
	    {
	        MembershipChange membershipchange = new MembershipChange();
	        defaultInstance = membershipchange;
	        membershipchange.type_ = Type.UNKNOWN;
	        membershipchange.senderId_ = "";
	        membershipchange.conversationId_ = "";
	        membershipchange.participantId_ = "";
	        membershipchange.recipientId_ = LazyStringArrayList.EMPTY;
	        membershipchange.timestamp_ = 0L;
	        membershipchange.participant_ = Collections.emptyList();
	    }

	    private MembershipChange()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private MembershipChange(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static MembershipChange getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getParticipantIdBytes()
	    {
	        Object obj = participantId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            participantId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(MembershipChange membershipchange)
	    {
	        return new Builder().mergeFrom(membershipchange);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final MembershipChange getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Data.Participant getParticipant(int i)
	    {
	        return (Data.Participant)participant_.get(i);
	    }
	
	    public final int getParticipantCount()
	    {
	        return participant_.size();
	    }
	
	    public final String getParticipantId()
	    {
	        Object obj = participantId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                participantId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final List getParticipantList()
	    {
	        return participant_;
	    }
	
	    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int i)
	    {
	        return (Data.ParticipantOrBuilder)participant_.get(i);
	    }
	
	    public final List getParticipantOrBuilderList()
	    {
	        return participant_;
	    }
	
	    public final String getRecipientId(int i)
	    {
	        return (String)recipientId_.get(i);
	    }
	
	    public final int getRecipientIdCount()
	    {
	        return recipientId_.size();
	    }
	
	    public final List getRecipientIdList()
	    {
	        return recipientId_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l1;
	        if(i != -1)
	        {
	            l1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getConversationIdBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getParticipantIdBytes());
	            int l = 0;
	            for(int i1 = 0; i1 < recipientId_.size(); i1++)
	                l += CodedOutputStream.computeBytesSizeNoTag(recipientId_.getByteString(i1));
	
	            int j1 = k + l + 1 * getRecipientIdList().size();
	            if((0x10 & bitField0_) == 16)
	                j1 += CodedOutputStream.computeInt64Size(6, timestamp_);
	            for(int k1 = 0; k1 < participant_.size(); k1++)
	                j1 += CodedOutputStream.computeMessageSize(7, (MessageLite)participant_.get(k1));
	
	            memoizedSerializedSize = j1;
	            l1 = j1;
	        }
	        return l1;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final Type getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasParticipantId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getSenderIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getConversationIdBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getParticipantIdBytes());
	        for(int i = 0; i < recipientId_.size(); i++)
	            codedoutputstream.writeBytes(5, recipientId_.getByteString(i));
	
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeInt64(6, timestamp_);
	        for(int j = 0; j < participant_.size(); j++)
	            codedoutputstream.writeMessage(7, (MessageLite)participant_.get(j));
	
	    }
	    
	    public static enum Type implements com.google.protobuf.Internal.EnumLite {
	    	UNKNOWN(0),
	    	JOIN(1),
	    	LEAVE(2);
	    	
	    	private int value;
	    	
	    	private Type(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static Type valueOf(int value) {
	    		for(Type t : Type.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements MembershipChangeOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object participantId_;
	        private List participant_;
	        private LazyStringList recipientId_;
	        private Object senderId_;
	        private long timestamp_;
	        private MembershipChange.Type type_;

	        private Builder()
	        {
	            type_ = MembershipChange.Type.UNKNOWN;
	            senderId_ = "";
	            conversationId_ = "";
	            participantId_ = "";
	            recipientId_ = LazyStringArrayList.EMPTY;
	            participant_ = Collections.emptyList();
	        }
	        
	        public MembershipChange.Builder clone()
	        {
	            return (new MembershipChange.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureParticipantIsMutable()
	        {
	            if((0x40 & bitField0_) != 64)
	            {
	                participant_ = new ArrayList(participant_);
	                bitField0_ = 0x40 | bitField0_;
	            }
	        }
	
	        private void ensureRecipientIdIsMutable()
	        {
	            if((0x10 & bitField0_) != 16)
	            {
	                recipientId_ = new LazyStringArrayList(recipientId_);
	                bitField0_ = 0x10 | bitField0_;
	            }
	        }
	
	        public MembershipChange.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	        	
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    MembershipChange.Type type = MembershipChange.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    participantId_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    ensureRecipientIdIsMutable();
	                    recipientId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 48: // '0'
	                    bitField0_ = 0x20 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 58: // ':'
	                    Data.Participant.Builder builder = Data.Participant.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addParticipant(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final MembershipChange.Builder addAllParticipant(Iterable iterable)
	        {
	            ensureParticipantIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participant_);
	            return this;
	        }
	
	        public final MembershipChange.Builder addAllRecipientId(Iterable iterable)
	        {
	            ensureRecipientIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, recipientId_);
	            return this;
	        }
	
	        public final MembershipChange.Builder addParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(i, builder.build());
	            return this;
	        }
	
	        public final MembershipChange.Builder addParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(i, participant);
	                return this;
	            }
	        }
	
	        public final MembershipChange.Builder addParticipant(Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(builder.build());
	            return this;
	        }
	
	        public final MembershipChange.Builder addParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(participant);
	                return this;
	            }
	        }
	
	        public final MembershipChange.Builder addRecipientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.add(s);
	                return this;
	            }
	        }
	
	        public final MembershipChange build()
	        {
	            MembershipChange membershipchange = buildPartial();
	            if(!membershipchange.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("membershipchange"));
	            else
	                return membershipchange;
	        }
	
	        public final MembershipChange buildPartial()
	        {
	            MembershipChange membershipchange = new MembershipChange(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            membershipchange.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            membershipchange.senderId_ = senderId_;
	            if((i & 4) == 4)
	                k |= 4;
	            membershipchange.conversationId_ = conversationId_;
	            if((i & 8) == 8)
	                k |= 8;
	            membershipchange.participantId_ = participantId_;
	            if((0x10 & bitField0_) == 16)
	            {
	                recipientId_ = new UnmodifiableLazyStringList(recipientId_);
	                bitField0_ = 0xffffffef & bitField0_;
	            }
	            membershipchange.recipientId_ = recipientId_;
	            if((i & 0x20) == 32)
	                k |= 0x10;
	            membershipchange.timestamp_ = timestamp_;
	            if((0x40 & bitField0_) == 64)
	            {
	                participant_ = Collections.unmodifiableList(participant_);
	                bitField0_ = 0xffffffbf & bitField0_;
	            }
	            membershipchange.participant_ = participant_;
	            membershipchange.bitField0_ = k;
	            return membershipchange;
	        }
	
	        public final MembershipChange.Builder clear()
	        {
	            super.clear();
	            type_ = MembershipChange.Type.UNKNOWN;
	            bitField0_ = -2 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -5 & bitField0_;
	            participantId_ = "";
	            bitField0_ = -9 & bitField0_;
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xffffffef & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = 0xffffffdf & bitField0_;
	            participant_ = Collections.emptyList();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final MembershipChange.Builder clearConversationId()
	        {
	            bitField0_ = -5 & bitField0_;
	            conversationId_ = MembershipChange.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final MembershipChange.Builder clearParticipant()
	        {
	            participant_ = Collections.emptyList();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final MembershipChange.Builder clearParticipantId()
	        {
	            bitField0_ = -9 & bitField0_;
	            participantId_ = MembershipChange.getDefaultInstance().getParticipantId();
	            return this;
	        }
	
	        public final MembershipChange.Builder clearRecipientId()
	        {
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final MembershipChange.Builder clearSenderId()
	        {
	            bitField0_ = -3 & bitField0_;
	            senderId_ = MembershipChange.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final MembershipChange.Builder clearTimestamp()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final MembershipChange.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = MembershipChange.Type.UNKNOWN;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final MembershipChange getDefaultInstanceForType()
	        {
	            return MembershipChange.getDefaultInstance();
	        }
	
	        public final Data.Participant getParticipant(int i)
	        {
	            return (Data.Participant)participant_.get(i);
	        }
	
	        public final int getParticipantCount()
	        {
	            return participant_.size();
	        }
	
	        public final String getParticipantId()
	        {
	            Object obj = participantId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                participantId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final List getParticipantList()
	        {
	            return Collections.unmodifiableList(participant_);
	        }
	
	        public final String getRecipientId(int i)
	        {
	            return (String)recipientId_.get(i);
	        }
	
	        public final int getRecipientIdCount()
	        {
	            return recipientId_.size();
	        }
	
	        public final List getRecipientIdList()
	        {
	            return Collections.unmodifiableList(recipientId_);
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final MembershipChange.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasParticipantId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((MembershipChange)lite);
			}

			public final MembershipChange.Builder mergeFrom(MembershipChange membershipchange)
	        {
	            if(membershipchange == MembershipChange.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(membershipchange.hasType())
	                setType(membershipchange.getType());
	            if(membershipchange.hasSenderId())
	                setSenderId(membershipchange.getSenderId());
	            if(membershipchange.hasConversationId())
	                setConversationId(membershipchange.getConversationId());
	            if(membershipchange.hasParticipantId())
	                setParticipantId(membershipchange.getParticipantId());
	            if(!membershipchange.recipientId_.isEmpty())
	                if(recipientId_.isEmpty())
	                {
	                    recipientId_ = membershipchange.recipientId_;
	                    bitField0_ = 0xffffffef & bitField0_;
	                } else
	                {
	                    ensureRecipientIdIsMutable();
	                    recipientId_.addAll(membershipchange.recipientId_);
	                }
	            if(membershipchange.hasTimestamp())
	                setTimestamp(membershipchange.getTimestamp());
	            if(!membershipchange.participant_.isEmpty())
	                if(participant_.isEmpty())
	                {
	                    participant_ = membershipchange.participant_;
	                    bitField0_ = 0xffffffbf & bitField0_;
	                } else
	                {
	                    ensureParticipantIsMutable();
	                    participant_.addAll(membershipchange.participant_);
	                }
	            return this;
	        }
	
	        public final MembershipChange.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final MembershipChange.Builder setParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.set(i, builder.build());
	            return this;
	        }
	
	        public final MembershipChange.Builder setParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.set(i, participant);
	                return this;
	            }
	        }
	
	        public final MembershipChange.Builder setParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                participantId_ = s;
	                return this;
	            }
	        }
	
	        public final MembershipChange.Builder setRecipientId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final MembershipChange.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final MembershipChange.Builder setTimestamp(long l)
	        {
	            bitField0_ = 0x20 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	
	        public final MembershipChange.Builder setType(MembershipChange.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									Migration
	//==================================================================================================
	public static interface MigrationOrBuilder extends MessageLiteOrBuilder {

	    public abstract long getMigratedAt();
	
	    public abstract String getNewId();
	
	    public abstract String getOldId();
	
	    public abstract String getReplacedNewId();
	
	    public abstract String getReplacedOldId();
	
	    public abstract boolean hasMigratedAt();
	
	    public abstract boolean hasNewId();
	
	    public abstract boolean hasOldId();
	
	    public abstract boolean hasReplacedNewId();
	
	    public abstract boolean hasReplacedOldId();
	}
	
	public static final class Migration extends GeneratedMessageLite implements MigrationOrBuilder {
		
		private static final Migration defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private long migratedAt_;
	    private Object newId_;
	    private Object oldId_;
	    private Object replacedNewId_;
	    private Object replacedOldId_;

	    static 
	    {
	        Migration migration = new Migration();
	        defaultInstance = migration;
	        migration.oldId_ = "";
	        migration.newId_ = "";
	        migration.migratedAt_ = 0L;
	        migration.replacedOldId_ = "";
	        migration.replacedNewId_ = "";
	    }

	    private Migration()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    Migration(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    public static Migration getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getNewIdBytes()
	    {
	        Object obj = newId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            newId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getOldIdBytes()
	    {
	        Object obj = oldId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            oldId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getReplacedNewIdBytes()
	    {
	        Object obj = replacedNewId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            replacedNewId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getReplacedOldIdBytes()
	    {
	        Object obj = replacedOldId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            replacedOldId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(Migration migration)
	    {
	        return new Builder().mergeFrom(migration);
	    }
	
	    public final Migration getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final long getMigratedAt()
	    {
	        return migratedAt_;
	    }
	
	    public final String getNewId()
	    {
	        Object obj = newId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                newId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getOldId()
	    {
	        Object obj = oldId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                oldId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getReplacedNewId()
	    {
	        Object obj = replacedNewId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                replacedNewId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getReplacedOldId()
	    {
	        Object obj = replacedOldId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                replacedOldId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getOldIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getNewIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeInt64Size(3, migratedAt_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(5, getReplacedOldIdBytes());
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeBytesSize(6, getReplacedNewIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final boolean hasMigratedAt()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasNewId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasOldId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReplacedNewId()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReplacedOldId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace() throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getOldIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getNewIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeInt64(3, migratedAt_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(5, getReplacedOldIdBytes());
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBytes(6, getReplacedNewIdBytes());
	    }
	    
	    //================================================================================
	    //								Builder
	    //================================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements MigrationOrBuilder {
	
	    	private int bitField0_;
	        private long migratedAt_;
	        private Object newId_;
	        private Object oldId_;
	        private Object replacedNewId_;
	        private Object replacedOldId_;

	        private Builder()
	        {
	            oldId_ = "";
	            newId_ = "";
	            replacedOldId_ = "";
	            replacedNewId_ = "";
	        }
	        
	        public Builder clone()
	        {
	            return (new Migration.Builder()).mergeFrom(buildPartial());
	        }
	
	        public Migration.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    oldId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    newId_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    migratedAt_ = codedinputstream.readInt64();
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 8 | bitField0_;
	                    replacedOldId_ = codedinputstream.readBytes();
	                    break;
	
	                case 50: // '2'
	                    bitField0_ = 0x10 | bitField0_;
	                    replacedNewId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final Migration build()
	        {
	            Migration migration = buildPartial();
	            if(!migration.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("migration"));
	            else
	                return migration;
	        }
	
	        public final Migration buildPartial()
	        {
	            Migration migration = new Migration(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            migration.oldId_ = oldId_;
	            if((i & 2) == 2)
	                k |= 2;
	            migration.newId_ = newId_;
	            if((i & 4) == 4)
	                k |= 4;
	            migration.migratedAt_ = migratedAt_;
	            if((i & 8) == 8)
	                k |= 8;
	            migration.replacedOldId_ = replacedOldId_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            migration.replacedNewId_ = replacedNewId_;
	            migration.bitField0_ = k;
	            return migration;
	        }
	
	        public final Migration.Builder clear()
	        {
	            super.clear();
	            oldId_ = "";
	            bitField0_ = -2 & bitField0_;
	            newId_ = "";
	            bitField0_ = -3 & bitField0_;
	            migratedAt_ = 0L;
	            bitField0_ = -5 & bitField0_;
	            replacedOldId_ = "";
	            bitField0_ = -9 & bitField0_;
	            replacedNewId_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final Migration.Builder clearMigratedAt()
	        {
	            bitField0_ = -5 & bitField0_;
	            migratedAt_ = 0L;
	            return this;
	        }
	
	        public final Migration.Builder clearNewId()
	        {
	            bitField0_ = -3 & bitField0_;
	            newId_ = Migration.getDefaultInstance().getNewId();
	            return this;
	        }
	
	        public final Migration.Builder clearOldId()
	        {
	            bitField0_ = -2 & bitField0_;
	            oldId_ = Migration.getDefaultInstance().getOldId();
	            return this;
	        }
	
	        public final Migration.Builder clearReplacedNewId()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            replacedNewId_ = Migration.getDefaultInstance().getReplacedNewId();
	            return this;
	        }
	
	        public final Migration.Builder clearReplacedOldId()
	        {
	            bitField0_ = -9 & bitField0_;
	            replacedOldId_ = Migration.getDefaultInstance().getReplacedOldId();
	            return this;
	        }
	
	        public final Migration getDefaultInstanceForType()
	        {
	            return Migration.getDefaultInstance();
	        }
	
	        public final long getMigratedAt()
	        {
	            return migratedAt_;
	        }
	
	        public final String getNewId()
	        {
	            Object obj = newId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                newId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getOldId()
	        {
	            Object obj = oldId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                oldId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getReplacedNewId()
	        {
	            Object obj = replacedNewId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                replacedNewId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getReplacedOldId()
	        {
	            Object obj = replacedOldId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                replacedOldId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean hasMigratedAt()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasNewId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasOldId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReplacedNewId()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReplacedOldId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
		
	        @Override
			public Builder mergeFrom(GeneratedMessageLite lite) {
				return mergeFrom((Migration)lite);
			}

			public final Migration.Builder mergeFrom(Migration migration)
	        {
	            if(migration == Migration.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(migration.hasOldId())
	                setOldId(migration.getOldId());
	            if(migration.hasNewId())
	                setNewId(migration.getNewId());
	            if(migration.hasMigratedAt())
	                setMigratedAt(migration.getMigratedAt());
	            if(migration.hasReplacedOldId())
	                setReplacedOldId(migration.getReplacedOldId());
	            if(migration.hasReplacedNewId())
	                setReplacedNewId(migration.getReplacedNewId());
	            
	            return this;
	        }
	
	        public final Migration.Builder setMigratedAt(long l)
	        {
	            bitField0_ = 4 | bitField0_;
	            migratedAt_ = l;
	            return this;
	        }
	
	        public final Migration.Builder setNewId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                newId_ = s;
	                return this;
	            }
	        }
	
	        public final Migration.Builder setOldId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                oldId_ = s;
	                return this;
	            }
	        }
	
	        public final Migration.Builder setReplacedNewId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                replacedNewId_ = s;
	                return this;
	            }
	        }
	
	        public final Migration.Builder setReplacedOldId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                replacedOldId_ = s;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									GroupConversationRename
	//==================================================================================================
	public static interface GroupConversationRenameOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getNewDisplayName();
	
	    public abstract String getRecipientId(int i);
	
	    public abstract int getRecipientIdCount();
	
	    public abstract List getRecipientIdList();
	
	    public abstract String getSenderId();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasNewDisplayName();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class GroupConversationRename extends GeneratedMessageLite implements GroupConversationRenameOrBuilder {
	
		private static final GroupConversationRename defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object newDisplayName_;
	    private LazyStringList recipientId_;
	    private Object senderId_;
	    private long timestamp_;

	    static 
	    {
	        GroupConversationRename groupconversationrename = new GroupConversationRename();
	        defaultInstance = groupconversationrename;
	        groupconversationrename.conversationId_ = "";
	        groupconversationrename.senderId_ = "";
	        groupconversationrename.newDisplayName_ = "";
	        groupconversationrename.recipientId_ = LazyStringArrayList.EMPTY;
	        groupconversationrename.timestamp_ = 0L;
	    }

	    private GroupConversationRename()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    GroupConversationRename(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static GroupConversationRename getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getNewDisplayNameBytes()
	    {
	        Object obj = newDisplayName_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            newDisplayName_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(GroupConversationRename groupconversationrename)
	    {
	        return new Builder().mergeFrom(groupconversationrename);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final GroupConversationRename getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getNewDisplayName()
	    {
	        Object obj = newDisplayName_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                newDisplayName_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getRecipientId(int i)
	    {
	        return (String)recipientId_.get(i);
	    }
	
	    public final int getRecipientIdCount()
	    {
	        return recipientId_.size();
	    }
	
	    public final List getRecipientIdList()
	    {
	        return recipientId_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int k1;
	        if(i != -1)
	        {
	            k1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getNewDisplayNameBytes());
	            int l = 0;
	            for(int i1 = 0; i1 < recipientId_.size(); i1++)
	                l += CodedOutputStream.computeBytesSizeNoTag(recipientId_.getByteString(i1));
	
	            int j1 = k + l + 1 * getRecipientIdList().size();
	            if((8 & bitField0_) == 8)
	                j1 += CodedOutputStream.computeInt64Size(5, timestamp_);
	            memoizedSerializedSize = j1;
	            k1 = j1;
	        }
	        return k1;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasNewDisplayName()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getSenderIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getNewDisplayNameBytes());
	        for(int i = 0; i < recipientId_.size(); i++)
	            codedoutputstream.writeBytes(4, recipientId_.getByteString(i));
	
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeInt64(5, timestamp_);
	    }
	    
	    //==========================================================================
	    //								Builder
	    //==========================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements GroupConversationRenameOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object newDisplayName_;
	        private LazyStringList recipientId_;
	        private Object senderId_;
	        private long timestamp_;


	        private Builder()
	        {
	            conversationId_ = "";
	            senderId_ = "";
	            newDisplayName_ = "";
	            recipientId_ = LazyStringArrayList.EMPTY;
	        }
	        
	        public GroupConversationRename.Builder clone()
	        {
	            return (new GroupConversationRename.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureRecipientIdIsMutable()
	        {
	            if((8 & bitField0_) != 8)
	            {
	                recipientId_ = new LazyStringArrayList(recipientId_);
	                bitField0_ = 8 | bitField0_;
	            }
	        }
	
	        public GroupConversationRename.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    newDisplayName_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    ensureRecipientIdIsMutable();
	                    recipientId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 40: // '('
	                    bitField0_ = 0x10 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final GroupConversationRename.Builder addAllRecipientId(Iterable iterable)
	        {
	            ensureRecipientIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, recipientId_);
	            return this;
	        }
	
	        public final GroupConversationRename.Builder addRecipientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.add(s);
	                return this;
	            }
	        }
	
	        public final GroupConversationRename build()
	        {
	            GroupConversationRename groupconversationrename = buildPartial();
	            if(!groupconversationrename.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("groupconversationrename"));
	            else
	                return groupconversationrename;
	        }
	
	        public final GroupConversationRename buildPartial()
	        {
	            GroupConversationRename groupconversationrename = new GroupConversationRename(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            groupconversationrename.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            groupconversationrename.senderId_ = senderId_;
	            if((i & 4) == 4)
	                k |= 4;
	            groupconversationrename.newDisplayName_ = newDisplayName_;
	            if((8 & bitField0_) == 8)
	            {
	                recipientId_ = new UnmodifiableLazyStringList(recipientId_);
	                bitField0_ = -9 & bitField0_;
	            }
	            groupconversationrename.recipientId_ = recipientId_;
	            if((i & 0x10) == 16)
	                k |= 8;
	            groupconversationrename.timestamp_ = timestamp_;
	            groupconversationrename.bitField0_ = k;
	            return groupconversationrename;
	        }
	
	        public final GroupConversationRename.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -3 & bitField0_;
	            newDisplayName_ = "";
	            bitField0_ = -5 & bitField0_;
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -9 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final GroupConversationRename.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = GroupConversationRename.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final GroupConversationRename.Builder clearNewDisplayName()
	        {
	            bitField0_ = -5 & bitField0_;
	            newDisplayName_ = GroupConversationRename.getDefaultInstance().getNewDisplayName();
	            return this;
	        }
	
	        public final GroupConversationRename.Builder clearRecipientId()
	        {
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final GroupConversationRename.Builder clearSenderId()
	        {
	            bitField0_ = -3 & bitField0_;
	            senderId_ = GroupConversationRename.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final GroupConversationRename.Builder clearTimestamp()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final GroupConversationRename getDefaultInstanceForType()
	        {
	            return GroupConversationRename.getDefaultInstance();
	        }
	
	        public final String getNewDisplayName()
	        {
	            Object obj = newDisplayName_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                newDisplayName_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getRecipientId(int i)
	        {
	            return (String)recipientId_.get(i);
	        }
	
	        public final int getRecipientIdCount()
	        {
	            return recipientId_.size();
	        }
	
	        public final List getRecipientIdList()
	        {
	            return Collections.unmodifiableList(recipientId_);
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasNewDisplayName()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((GroupConversationRename)generatedmessagelite);
	        }
	
	        public final GroupConversationRename.Builder mergeFrom(GroupConversationRename groupconversationrename)
	        {
	            if(groupconversationrename == GroupConversationRename.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(groupconversationrename.hasConversationId())
	                setConversationId(groupconversationrename.getConversationId());
	            if(groupconversationrename.hasSenderId())
	                setSenderId(groupconversationrename.getSenderId());
	            if(groupconversationrename.hasNewDisplayName())
	                setNewDisplayName(groupconversationrename.getNewDisplayName());
	            if(!groupconversationrename.recipientId_.isEmpty())
	                if(recipientId_.isEmpty())
	                {
	                    recipientId_ = groupconversationrename.recipientId_;
	                    bitField0_ = -9 & bitField0_;
	                } else
	                {
	                    ensureRecipientIdIsMutable();
	                    recipientId_.addAll(groupconversationrename.recipientId_);
	                }
	            if(groupconversationrename.hasTimestamp())
	                setTimestamp(groupconversationrename.getTimestamp());
	            return this;
	        }
	
	        public final GroupConversationRename.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final GroupConversationRename.Builder setNewDisplayName(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                newDisplayName_ = s;
	                return this;
	            }
	        }
	
	        public final GroupConversationRename.Builder setRecipientId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final GroupConversationRename.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final GroupConversationRename.Builder setTimestamp(long l)
	        {
	            bitField0_ = 0x10 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									ParticipantError
	//==================================================================================================
	public static interface ParticipantErrorOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getFirstName();
	
	    public abstract String getFullName();
	
	    public abstract String getParticipantId();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasFirstName();
	
	    public abstract boolean hasFullName();
	
	    public abstract boolean hasParticipantId();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class ParticipantError extends GeneratedMessageLite implements ParticipantErrorOrBuilder {
	
		private static final ParticipantError defaultInstance;
	    private int bitField0_;
	    private Object firstName_;
	    private Object fullName_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object participantId_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        ParticipantError participanterror = new ParticipantError();
	        defaultInstance = participanterror;
	        participanterror.participantId_ = "";
	        participanterror.status_ = Data.ResponseStatus.OK;
	        participanterror.firstName_ = "";
	        participanterror.fullName_ = "";
	    }

	    private ParticipantError()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ParticipantError(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static ParticipantError getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getFirstNameBytes()
	    {
	        Object obj = firstName_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            firstName_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getFullNameBytes()
	    {
	        Object obj = fullName_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            fullName_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getParticipantIdBytes()
	    {
	        Object obj = participantId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            participantId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ParticipantError participanterror)
	    {
	        return new Builder().mergeFrom(participanterror);
	    }
	
	    public final ParticipantError getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getFirstName()
	    {
	        Object obj = firstName_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                firstName_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getFullName()
	    {
	        Object obj = fullName_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                fullName_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getParticipantId()
	    {
	        Object obj = participantId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                participantId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getParticipantIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(2, status_.getNumber());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getFirstNameBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getFullNameBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasFirstName()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasFullName()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasParticipantId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace() throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getParticipantIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(2, status_.getNumber());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getFirstNameBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getFullNameBytes());
	    }
	    
	    //===============================================================
	    //						Builder
	    //===============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ParticipantErrorOrBuilder {
	
	    	private int bitField0_;
	        private Object firstName_;
	        private Object fullName_;
	        private Object participantId_;
	        private Data.ResponseStatus status_;


	        private Builder()
	        {
	            participantId_ = "";
	            status_ = Data.ResponseStatus.OK;
	            firstName_ = "";
	            fullName_ = "";
	        }
	        
	        public ParticipantError.Builder clone()
	        {
	            return (new ParticipantError.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ParticipantError.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    participantId_ = codedinputstream.readBytes();
	                    break;
	
	                case 16: // '\020'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    firstName_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    fullName_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ParticipantError build()
	        {
	            ParticipantError participanterror = buildPartial();
	            if(!participanterror.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("participanterror"));
	            else
	                return participanterror;
	        }
	
	        public final ParticipantError buildPartial()
	        {
	            ParticipantError participanterror = new ParticipantError(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            participanterror.participantId_ = participantId_;
	            if((i & 2) == 2)
	                k |= 2;
	            participanterror.status_ = status_;
	            if((i & 4) == 4)
	                k |= 4;
	            participanterror.firstName_ = firstName_;
	            if((i & 8) == 8)
	                k |= 8;
	            participanterror.fullName_ = fullName_;
	            participanterror.bitField0_ = k;
	            return participanterror;
	        }
	
	        public final ParticipantError.Builder clear()
	        {
	            super.clear();
	            participantId_ = "";
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -3 & bitField0_;
	            firstName_ = "";
	            bitField0_ = -5 & bitField0_;
	            fullName_ = "";
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ParticipantError.Builder clearFirstName()
	        {
	            bitField0_ = -5 & bitField0_;
	            firstName_ = ParticipantError.getDefaultInstance().getFirstName();
	            return this;
	        }
	
	        public final ParticipantError.Builder clearFullName()
	        {
	            bitField0_ = -9 & bitField0_;
	            fullName_ = ParticipantError.getDefaultInstance().getFullName();
	            return this;
	        }
	
	        public final ParticipantError.Builder clearParticipantId()
	        {
	            bitField0_ = -2 & bitField0_;
	            participantId_ = ParticipantError.getDefaultInstance().getParticipantId();
	            return this;
	        }
	
	        public final ParticipantError.Builder clearStatus()
	        {
	            bitField0_ = -3 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ParticipantError getDefaultInstanceForType()
	        {
	            return ParticipantError.getDefaultInstance();
	        }
	
	        public final String getFirstName()
	        {
	            Object obj = firstName_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                firstName_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getFullName()
	        {
	            Object obj = fullName_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                fullName_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getParticipantId()
	        {
	            Object obj = participantId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                participantId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasFirstName()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasFullName()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasParticipantId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ParticipantError)generatedmessagelite);
	        }
	
	        public final ParticipantError.Builder mergeFrom(ParticipantError participanterror)
	        {
	            if(participanterror == ParticipantError.getDefaultInstance()) {
	            	return this;
	            }
	            if(participanterror.hasParticipantId())
	                setParticipantId(participanterror.getParticipantId());
	            if(participanterror.hasStatus())
	                setStatus(participanterror.getStatus());
	            if(participanterror.hasFirstName())
	                setFirstName(participanterror.getFirstName());
	            if(participanterror.hasFullName())
	                setFullName(participanterror.getFullName());
	            return this;
	        }
	
	        public final ParticipantError.Builder setFirstName(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                firstName_ = s;
	                return this;
	            }
	        }
	
	        public final ParticipantError.Builder setFullName(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                fullName_ = s;
	                return this;
	            }
	        }
	
	        public final ParticipantError.Builder setParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                participantId_ = s;
	                return this;
	            }
	        }
	
	        public final ParticipantError.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}

	//==================================================================================================
	//									ConversationJoinResponse
	//==================================================================================================
	public static interface ConversationJoinResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract ParticipantError getParticipantError();
	
	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasParticipantError();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class ConversationJoinResponse extends GeneratedMessageLite implements ConversationJoinResponseOrBuilder {
		
		private static final ConversationJoinResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private ParticipantError participantError_;
	    private Object requestError_;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        ConversationJoinResponse conversationjoinresponse = new ConversationJoinResponse();
	        defaultInstance = conversationjoinresponse;
	        conversationjoinresponse.status_ = Data.ResponseStatus.OK;
	        conversationjoinresponse.requestError_ = "";
	        conversationjoinresponse.participantError_ = ParticipantError.getDefaultInstance();
	        conversationjoinresponse.timestamp_ = 0L;
	    }

	    private ConversationJoinResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationJoinResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
		
	    public static ConversationJoinResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationJoinResponse conversationjoinresponse)
	    {
	        return new Builder().mergeFrom(conversationjoinresponse);
	    }
	
	    public final ConversationJoinResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final ParticipantError getParticipantError()
	    {
	        return participantError_;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, participantError_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeInt64Size(4, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasParticipantError()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace() throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, participantError_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeInt64(4, timestamp_);
	    }
	    
	    //===================================================================
	    //							Builder
	    //===================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationJoinResponseOrBuilder {
	
	    	private int bitField0_;
	        private ParticipantError participantError_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	            participantError_ = ParticipantError.getDefaultInstance();
	        }
	        
	        public ConversationJoinResponse.Builder clone()
	        {
	            return (new ConversationJoinResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ConversationJoinResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    ParticipantError.Builder builder = ParticipantError.newBuilder();
	                    if(hasParticipantError())
	                        builder.mergeFrom(getParticipantError());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setParticipantError(builder.buildPartial());
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 8 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationJoinResponse build()
	        {
	            ConversationJoinResponse conversationjoinresponse = buildPartial();
	            if(!conversationjoinresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationjoinresponse"));
	            else
	                return conversationjoinresponse;
	        }
	
	        public final ConversationJoinResponse buildPartial()
	        {
	            ConversationJoinResponse conversationjoinresponse = new ConversationJoinResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationjoinresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationjoinresponse.requestError_ = requestError_;
	            if((i & 4) == 4)
	                k |= 4;
	            conversationjoinresponse.participantError_ = participantError_;
	            if((i & 8) == 8)
	                k |= 8;
	            conversationjoinresponse.timestamp_ = timestamp_;
	            conversationjoinresponse.bitField0_ = k;
	            return conversationjoinresponse;
	        }
	
	        public final ConversationJoinResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            participantError_ = ParticipantError.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ConversationJoinResponse.Builder clearParticipantError()
	        {
	            participantError_ = ParticipantError.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ConversationJoinResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = ConversationJoinResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final ConversationJoinResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ConversationJoinResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -9 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final ConversationJoinResponse getDefaultInstanceForType()
	        {
	            return ConversationJoinResponse.getDefaultInstance();
	        }
	
	        public final ParticipantError getParticipantError()
	        {
	            return participantError_;
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasParticipantError()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationJoinResponse)generatedmessagelite);
	        }
	
	        public final ConversationJoinResponse.Builder mergeFrom(ConversationJoinResponse conversationjoinresponse)
	        {
	            if(conversationjoinresponse == ConversationJoinResponse.getDefaultInstance()) {
	            	return this;
	            }
	            if(conversationjoinresponse.hasStatus())
	                setStatus(conversationjoinresponse.getStatus());
	            if(conversationjoinresponse.hasRequestError())
	                setRequestError(conversationjoinresponse.getRequestError());
	            if(conversationjoinresponse.hasParticipantError())
	            {
	                ParticipantError participanterror = conversationjoinresponse.getParticipantError();
	                if((4 & bitField0_) == 4 && participantError_ != ParticipantError.getDefaultInstance())
	                    participantError_ = ParticipantError.newBuilder(participantError_).mergeFrom(participanterror).buildPartial();
	                else
	                    participantError_ = participanterror;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(conversationjoinresponse.hasTimestamp())
	                setTimestamp(conversationjoinresponse.getTimestamp());
	            return this;
	        }
	
	        public final ConversationJoinResponse.Builder setParticipantError(ParticipantError.Builder builder)
	        {
	            participantError_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final ConversationJoinResponse.Builder setParticipantError(ParticipantError participanterror)
	        {
	            if(participanterror == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                participantError_ = participanterror;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ConversationJoinResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationJoinResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final ConversationJoinResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 8 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}

	//==================================================================================================
	//									ConversationListResponse
	//==================================================================================================
	public static interface ConversationListResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract ClientConversation getClientConversation(int i);
	
	    public abstract int getClientConversationCount();
	
	    public abstract List getClientConversationList();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class ConversationListResponse extends GeneratedMessageLite implements ConversationListResponseOrBuilder {
	
		private static final ConversationListResponse defaultInstance;
	    private int bitField0_;
	    private List clientConversation_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        ConversationListResponse conversationlistresponse = new ConversationListResponse();
	        defaultInstance = conversationlistresponse;
	        conversationlistresponse.status_ = Data.ResponseStatus.OK;
	        conversationlistresponse.timestamp_ = 0L;
	        conversationlistresponse.clientConversation_ = Collections.emptyList();
	    }

	    private ConversationListResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationListResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static ConversationListResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationListResponse conversationlistresponse)
	    {
	        return new Builder().mergeFrom(conversationlistresponse);
	    }
	
	    public final ClientConversation getClientConversation(int i)
	    {
	        return (ClientConversation)clientConversation_.get(i);
	    }
	
	    public final int getClientConversationCount()
	    {
	        return clientConversation_.size();
	    }
	
	    public final List getClientConversationList()
	    {
	        return clientConversation_;
	    }
	
	    public final ClientConversationOrBuilder getClientConversationOrBuilder(int i)
	    {
	        return (ClientConversationOrBuilder)clientConversation_.get(i);
	    }
	
	    public final List getClientConversationOrBuilderList()
	    {
	        return clientConversation_;
	    }
	
	    public final ConversationListResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            for(int l = 0; l < clientConversation_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(3, (MessageLite)clientConversation_.get(l));
	
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	        for(int i = 0; i < clientConversation_.size(); i++)
	            codedoutputstream.writeMessage(3, (MessageLite)clientConversation_.get(i));
	
	    }
	    
	    //=========================================================
	    //					Builder
	    //=========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationListResponseOrBuilder {
	
	    	private int bitField0_;
	        private List clientConversation_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            clientConversation_ = Collections.emptyList();
	        }
	        
	        public ConversationListResponse.Builder clone()
	        {
	            return (new ConversationListResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureClientConversationIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                clientConversation_ = new ArrayList(clientConversation_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public ConversationListResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 26: // '\032'
	                    ClientConversation.Builder builder = ClientConversation.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addClientConversation(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationListResponse.Builder addAllClientConversation(Iterable iterable)
	        {
	            ensureClientConversationIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, clientConversation_);
	            return this;
	        }
	
	        public final ConversationListResponse.Builder addClientConversation(int i, ClientConversation.Builder builder)
	        {
	            ensureClientConversationIsMutable();
	            clientConversation_.add(i, builder.build());
	            return this;
	        }
	
	        public final ConversationListResponse.Builder addClientConversation(int i, ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureClientConversationIsMutable();
	                clientConversation_.add(i, clientconversation);
	                return this;
	            }
	        }
	
	        public final ConversationListResponse.Builder addClientConversation(ClientConversation.Builder builder)
	        {
	            ensureClientConversationIsMutable();
	            clientConversation_.add(builder.build());
	            return this;
	        }
	
	        public final ConversationListResponse.Builder addClientConversation(ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureClientConversationIsMutable();
	                clientConversation_.add(clientconversation);
	                return this;
	            }
	        }
	
	        public final ConversationListResponse build()
	        {
	            ConversationListResponse conversationlistresponse = buildPartial();
	            if(!conversationlistresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationlistresponse"));
	            else
	                return conversationlistresponse;
	        }
	
	        public final ConversationListResponse buildPartial()
	        {
	            ConversationListResponse conversationlistresponse = new ConversationListResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationlistresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationlistresponse.timestamp_ = timestamp_;
	            if((4 & bitField0_) == 4)
	            {
	                clientConversation_ = Collections.unmodifiableList(clientConversation_);
	                bitField0_ = -5 & bitField0_;
	            }
	            conversationlistresponse.clientConversation_ = clientConversation_;
	            conversationlistresponse.bitField0_ = k;
	            return conversationlistresponse;
	        }
	
	        public final ConversationListResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            clientConversation_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ConversationListResponse.Builder clearClientConversation()
	        {
	            clientConversation_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ConversationListResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ConversationListResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final ClientConversation getClientConversation(int i)
	        {
	            return (ClientConversation)clientConversation_.get(i);
	        }
	
	        public final int getClientConversationCount()
	        {
	            return clientConversation_.size();
	        }
	
	        public final List getClientConversationList()
	        {
	            return Collections.unmodifiableList(clientConversation_);
	        }
	
	        public final ConversationListResponse getDefaultInstanceForType()
	        {
	            return ConversationListResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationListResponse)generatedmessagelite);
	        }
	
	        public final ConversationListResponse.Builder mergeFrom(ConversationListResponse conversationlistresponse)
	        {
	            if(conversationlistresponse == ConversationListResponse.getDefaultInstance()) {
	            	return this;
	            }
	            if(conversationlistresponse.hasStatus())
	                setStatus(conversationlistresponse.getStatus());
	            if(conversationlistresponse.hasTimestamp())
	                setTimestamp(conversationlistresponse.getTimestamp());
	            if(!conversationlistresponse.clientConversation_.isEmpty())
	                if(clientConversation_.isEmpty())
	                {
	                    clientConversation_ = conversationlistresponse.clientConversation_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureClientConversationIsMutable();
	                    clientConversation_.addAll(conversationlistresponse.clientConversation_);
	                }
	            return this;
	        }
	
	        public final ConversationListResponse.Builder setClientConversation(int i, ClientConversation.Builder builder)
	        {
	            ensureClientConversationIsMutable();
	            clientConversation_.set(i, builder.build());
	            return this;
	        }
	
	        public final ConversationListResponse.Builder setClientConversation(int i, ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureClientConversationIsMutable();
	                clientConversation_.set(i, clientconversation);
	                return this;
	            }
	        }
	
	        public final ConversationListResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final ConversationListResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									ConversationPreferenceResponse
	//==================================================================================================
	public static interface ConversationPreferenceResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class ConversationPreferenceResponse extends GeneratedMessageLite implements ConversationPreferenceResponseOrBuilder
	{
		private static final ConversationPreferenceResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        ConversationPreferenceResponse conversationpreferenceresponse = new ConversationPreferenceResponse();
	        defaultInstance = conversationpreferenceresponse;
	        conversationpreferenceresponse.status_ = Data.ResponseStatus.OK;
	        conversationpreferenceresponse.timestamp_ = 0L;
	    }

	    private ConversationPreferenceResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationPreferenceResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    public static ConversationPreferenceResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationPreferenceResponse conversationpreferenceresponse)
	    {
	        return new Builder().mergeFrom(conversationpreferenceresponse);
	    }
	
	    public final ConversationPreferenceResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace() throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	    }
	    
	    //=======================================================
	    //					Builder
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationPreferenceResponseOrBuilder {
	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public ConversationPreferenceResponse.Builder clone()
	        {
	            return (new ConversationPreferenceResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ConversationPreferenceResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationPreferenceResponse build()
	        {
	            ConversationPreferenceResponse conversationpreferenceresponse = buildPartial();
	            if(!conversationpreferenceresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationpreferenceresponse"));
	            else
	                return conversationpreferenceresponse;
	        }
	
	        public final ConversationPreferenceResponse buildPartial()
	        {
	            ConversationPreferenceResponse conversationpreferenceresponse = new ConversationPreferenceResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationpreferenceresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationpreferenceresponse.timestamp_ = timestamp_;
	            conversationpreferenceresponse.bitField0_ = k;
	            return conversationpreferenceresponse;
	        }
	
	        public final ConversationPreferenceResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ConversationPreferenceResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ConversationPreferenceResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final ConversationPreferenceResponse getDefaultInstanceForType()
	        {
	            return ConversationPreferenceResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationPreferenceResponse)generatedmessagelite);
	        }
	
	        public final ConversationPreferenceResponse.Builder mergeFrom(ConversationPreferenceResponse conversationpreferenceresponse)
	        {
	            if(conversationpreferenceresponse == ConversationPreferenceResponse.getDefaultInstance()) {
	            	return this;
	            }
	
	            if(conversationpreferenceresponse.hasStatus())
	                setStatus(conversationpreferenceresponse.getStatus());
	            if(conversationpreferenceresponse.hasTimestamp())
	                setTimestamp(conversationpreferenceresponse.getTimestamp());
	            return this;
	        }
	
	        public final ConversationPreferenceResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final ConversationPreferenceResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									ConversationRenameResponse
	//==================================================================================================
	public static interface ConversationRenameResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class ConversationRenameResponse extends GeneratedMessageLite implements ConversationRenameResponseOrBuilder {
	
		private static final ConversationRenameResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        ConversationRenameResponse conversationrenameresponse = new ConversationRenameResponse();
	        defaultInstance = conversationrenameresponse;
	        conversationrenameresponse.status_ = Data.ResponseStatus.OK;
	        conversationrenameresponse.timestamp_ = 0L;
	    }

	    private ConversationRenameResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationRenameResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static ConversationRenameResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationRenameResponse conversationrenameresponse)
	    {
	        return new Builder().mergeFrom(conversationrenameresponse);
	    }
	
	    public final ConversationRenameResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	    }
	    
	    //=======================================================
	    //						Builder
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationRenameResponseOrBuilder {
	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public ConversationRenameResponse.Builder clone()
	        {
	            return (new ConversationRenameResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ConversationRenameResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationRenameResponse build()
	        {
	            ConversationRenameResponse conversationrenameresponse = buildPartial();
	            if(!conversationrenameresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationrenameresponse"));
	            else
	                return conversationrenameresponse;
	        }
	
	        public final ConversationRenameResponse buildPartial()
	        {
	            ConversationRenameResponse conversationrenameresponse = new ConversationRenameResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationrenameresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationrenameresponse.timestamp_ = timestamp_;
	            conversationrenameresponse.bitField0_ = k;
	            return conversationrenameresponse;
	        }
	
	        public final ConversationRenameResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ConversationRenameResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ConversationRenameResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final ConversationRenameResponse getDefaultInstanceForType()
	        {
	            return ConversationRenameResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationRenameResponse)generatedmessagelite);
	        }
	
	        public final ConversationRenameResponse.Builder mergeFrom(ConversationRenameResponse conversationrenameresponse)
	        {
	            if(conversationrenameresponse == ConversationRenameResponse.getDefaultInstance()) {
	            	return this;
	            }
	            if(conversationrenameresponse.hasStatus())
	                setStatus(conversationrenameresponse.getStatus());
	            if(conversationrenameresponse.hasTimestamp())
	                setTimestamp(conversationrenameresponse.getTimestamp());
	            return this;
	        }
	
	        public final ConversationRenameResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final ConversationRenameResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									NewConversationResponse
	//==================================================================================================
	public static interface NewConversationResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract ClientConversation getClientConversation();
	
	    public abstract String getConversationClientId();
	
	    public abstract NewConversationResponse.InviteType getInviteType();
	
	    public abstract ParticipantError getParticipantError(int i);
	
	    public abstract int getParticipantErrorCount();
	
	    public abstract List getParticipantErrorList();
	
	    public abstract Receipt getReceipt();
	
	    public abstract ChatMessage getRecentMessage();
	
	    public abstract String getRecipientId(int i);
	
	    public abstract int getRecipientIdCount();
	
	    public abstract List getRecipientIdList();
	
	    public abstract String getSenderId();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasClientConversation();
	
	    public abstract boolean hasConversationClientId();
	
	    public abstract boolean hasInviteType();
	
	    public abstract boolean hasReceipt();
	
	    public abstract boolean hasRecentMessage();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class NewConversationResponse extends GeneratedMessageLite implements NewConversationResponseOrBuilder {
	
		private static final NewConversationResponse defaultInstance;
	    private int bitField0_;
	    private ClientConversation clientConversation_;
	    private Object conversationClientId_;
	    private InviteType inviteType_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private List participantError_;
	    private Receipt receipt_;
	    private ChatMessage recentMessage_;
	    private LazyStringList recipientId_;
	    private Object senderId_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        NewConversationResponse newconversationresponse = new NewConversationResponse();
	        defaultInstance = newconversationresponse;
	        newconversationresponse.status_ = Data.ResponseStatus.OK;
	        newconversationresponse.conversationClientId_ = "";
	        newconversationresponse.clientConversation_ = ClientConversation.getDefaultInstance();
	        newconversationresponse.senderId_ = "";
	        newconversationresponse.participantError_ = Collections.emptyList();
	        newconversationresponse.receipt_ = Receipt.getDefaultInstance();
	        newconversationresponse.inviteType_ = InviteType.UNKNOWN;
	        newconversationresponse.recentMessage_ = ChatMessage.getDefaultInstance();
	        newconversationresponse.recipientId_ = LazyStringArrayList.EMPTY;
	    }
	                                                              
	    private NewConversationResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    NewConversationResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationClientIdBytes()
	    {
	        Object obj = conversationClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static NewConversationResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(NewConversationResponse newconversationresponse)
	    {
	        return new Builder().mergeFrom(newconversationresponse);
	    }
	
	    public final ClientConversation getClientConversation()
	    {
	        return clientConversation_;
	    }
	
	    public final String getConversationClientId()
	    {
	        Object obj = conversationClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final NewConversationResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final InviteType getInviteType()
	    {
	        return inviteType_;
	    }
	
	    public final ParticipantError getParticipantError(int i)
	    {
	        return (ParticipantError)participantError_.get(i);
	    }
	
	    public final int getParticipantErrorCount()
	    {
	        return participantError_.size();
	    }
	
	    public final List getParticipantErrorList()
	    {
	        return participantError_;
	    }
	
	    public final ParticipantErrorOrBuilder getParticipantErrorOrBuilder(int i)
	    {
	        return (ParticipantErrorOrBuilder)participantError_.get(i);
	    }
	
	    public final List getParticipantErrorOrBuilderList()
	    {
	        return participantError_;
	    }
	
	    public final Receipt getReceipt()
	    {
	        return receipt_;
	    }
	
	    public final ChatMessage getRecentMessage()
	    {
	        return recentMessage_;
	    }
	
	    public final String getRecipientId(int i)
	    {
	        return (String)recipientId_.get(i);
	    }
	
	    public final int getRecipientIdCount()
	    {
	        return recipientId_.size();
	    }
	
	    public final List getRecipientIdList()
	    {
	        return recipientId_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l1;
	        if(i != -1)
	        {
	            l1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(3, getConversationClientIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(4, clientConversation_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(5, getSenderIdBytes());
	            int l = 0;
	            for(int i1 = 0; i1 < recipientId_.size(); i1++)
	                l += CodedOutputStream.computeBytesSizeNoTag(recipientId_.getByteString(i1));
	
	            int j1 = k + l + 1 * getRecipientIdList().size();
	            for(int k1 = 0; k1 < participantError_.size(); k1++)
	                j1 += CodedOutputStream.computeMessageSize(8, (MessageLite)participantError_.get(k1));
	
	            if((0x10 & bitField0_) == 16)
	                j1 += CodedOutputStream.computeMessageSize(9, receipt_);
	            if((0x20 & bitField0_) == 32)
	                j1 += CodedOutputStream.computeEnumSize(10, inviteType_.getNumber());
	            if((0x40 & bitField0_) == 64)
	                j1 += CodedOutputStream.computeMessageSize(11, recentMessage_);
	            memoizedSerializedSize = j1;
	            l1 = j1;
	        }
	        return l1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasClientConversation()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationClientId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviteType()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReceipt()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRecentMessage()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(3, getConversationClientIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(4, clientConversation_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(5, getSenderIdBytes());
	        for(int i = 0; i < recipientId_.size(); i++)
	            codedoutputstream.writeBytes(6, recipientId_.getByteString(i));
	
	        for(int j = 0; j < participantError_.size(); j++)
	            codedoutputstream.writeMessage(8, (MessageLite)participantError_.get(j));
	
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(9, receipt_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeEnum(10, inviteType_.getNumber());
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeMessage(11, recentMessage_);
	    }
	    
	    //=======================================================
	    //					InviteType
	    //=======================================================
	    public static enum InviteType implements com.google.protobuf.Internal.EnumLite {
	    	UNKNOWN(0),
	    	NEW(1),
	    	INVITE(2);
	    	
	    	private int value;
	    	
	    	private InviteType(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static InviteType valueOf(int value) {
	    		for(InviteType t : InviteType.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    //=======================================================
	    //					Builder
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements NewConversationResponseOrBuilder {
	
	    	private int bitField0_;
	        private ClientConversation clientConversation_;
	        private Object conversationClientId_;
	        private NewConversationResponse.InviteType inviteType_;
	        private List participantError_;
	        private Receipt receipt_;
	        private ChatMessage recentMessage_;
	        private LazyStringList recipientId_;
	        private Object senderId_;
	        private Data.ResponseStatus status_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            conversationClientId_ = "";
	            clientConversation_ = ClientConversation.getDefaultInstance();
	            senderId_ = "";
	            participantError_ = Collections.emptyList();
	            receipt_ = Receipt.getDefaultInstance();
	            inviteType_ = NewConversationResponse.InviteType.UNKNOWN;
	            recentMessage_ = ChatMessage.getDefaultInstance();
	            recipientId_ = LazyStringArrayList.EMPTY;
	        }
	        
	        public NewConversationResponse.Builder clone()
	        {
	            return (new NewConversationResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureParticipantErrorIsMutable()
	        {
	            if((0x10 & bitField0_) != 16)
	            {
	                participantError_ = new ArrayList(participantError_);
	                bitField0_ = 0x10 | bitField0_;
	            }
	        }
	
	        private void ensureRecipientIdIsMutable()
	        {
	            if((0x100 & bitField0_) != 256)
	            {
	                recipientId_ = new LazyStringArrayList(recipientId_);
	                bitField0_ = 0x100 | bitField0_;
	            }
	        }
	
	        public NewConversationResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 2 | bitField0_;
	                    conversationClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    ClientConversation.Builder builder3 = ClientConversation.newBuilder();
	                    if(hasClientConversation())
	                        builder3.mergeFrom(getClientConversation());
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    setClientConversation(builder3.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 8 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 50: // '2'
	                    ensureRecipientIdIsMutable();
	                    recipientId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 66: // 'B'
	                    ParticipantError.Builder builder2 = ParticipantError.newBuilder();
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    addParticipantError(builder2.buildPartial());
	                    break;
	
	                case 74: // 'J'
	                    Receipt.Builder builder1 = Receipt.newBuilder();
	                    if(hasReceipt())
	                        builder1.mergeFrom(getReceipt());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setReceipt(builder1.buildPartial());
	                    break;
	
	                case 80: // 'P'
	                    NewConversationResponse.InviteType invitetype = NewConversationResponse.InviteType.valueOf(codedinputstream.readEnum());
	                    if(invitetype != null)
	                    {
	                        bitField0_ = 0x40 | bitField0_;
	                        inviteType_ = invitetype;
	                    }
	                    break;
	
	                case 90: // 'Z'
	                    ChatMessage.Builder builder = ChatMessage.newBuilder();
	                    if(hasRecentMessage())
	                        builder.mergeFrom(getRecentMessage());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setRecentMessage(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final NewConversationResponse.Builder addAllParticipantError(Iterable iterable)
	        {
	            ensureParticipantErrorIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participantError_);
	            return this;
	        }
	
	        public final NewConversationResponse.Builder addAllRecipientId(Iterable iterable)
	        {
	            ensureRecipientIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, recipientId_);
	            return this;
	        }
	
	        public final NewConversationResponse.Builder addParticipantError(int i, ParticipantError.Builder builder)
	        {
	            ensureParticipantErrorIsMutable();
	            participantError_.add(i, builder.build());
	            return this;
	        }
	
	        public final NewConversationResponse.Builder addParticipantError(int i, ParticipantError participanterror)
	        {
	            if(participanterror == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantErrorIsMutable();
	                participantError_.add(i, participanterror);
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder addParticipantError(ParticipantError.Builder builder)
	        {
	            ensureParticipantErrorIsMutable();
	            participantError_.add(builder.build());
	            return this;
	        }
	
	        public final NewConversationResponse.Builder addParticipantError(ParticipantError participanterror)
	        {
	            if(participanterror == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantErrorIsMutable();
	                participantError_.add(participanterror);
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder addRecipientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.add(s);
	                return this;
	            }
	        }
	        
	        public final NewConversationResponse build()
	        {
	            NewConversationResponse newconversationresponse = buildPartial();
	            if(!newconversationresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("newconversationresponse"));
	            else
	                return newconversationresponse;
	        }
	
	        public final NewConversationResponse buildPartial()
	        {
	            NewConversationResponse newconversationresponse = new NewConversationResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            newconversationresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            newconversationresponse.conversationClientId_ = conversationClientId_;
	            if((i & 4) == 4)
	                k |= 4;
	            newconversationresponse.clientConversation_ = clientConversation_;
	            if((i & 8) == 8)
	                k |= 8;
	            newconversationresponse.senderId_ = senderId_;
	            if((0x10 & bitField0_) == 16)
	            {
	                participantError_ = Collections.unmodifiableList(participantError_);
	                bitField0_ = 0xffffffef & bitField0_;
	            }
	            newconversationresponse.participantError_ = participantError_;
	            if((i & 0x20) == 32)
	                k |= 0x10;
	            newconversationresponse.receipt_ = receipt_;
	            if((i & 0x40) == 64)
	                k |= 0x20;
	            newconversationresponse.inviteType_ = inviteType_;
	            if((i & 0x80) == 128)
	                k |= 0x40;
	            newconversationresponse.recentMessage_ = recentMessage_;
	            if((0x100 & bitField0_) == 256)
	            {
	                recipientId_ = new UnmodifiableLazyStringList(recipientId_);
	                bitField0_ = 0xfffffeff & bitField0_;
	            }
	            newconversationresponse.recipientId_ = recipientId_;
	            newconversationresponse.bitField0_ = k;
	            return newconversationresponse;
	        }
	
	        public final NewConversationResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            conversationClientId_ = "";
	            bitField0_ = -3 & bitField0_;
	            clientConversation_ = ClientConversation.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -9 & bitField0_;
	            participantError_ = Collections.emptyList();
	            bitField0_ = 0xffffffef & bitField0_;
	            receipt_ = Receipt.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            inviteType_ = NewConversationResponse.InviteType.UNKNOWN;
	            bitField0_ = 0xffffffbf & bitField0_;
	            recentMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearClientConversation()
	        {
	            clientConversation_ = ClientConversation.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearConversationClientId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationClientId_ = NewConversationResponse.getDefaultInstance().getConversationClientId();
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearInviteType()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            inviteType_ = NewConversationResponse.InviteType.UNKNOWN;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearParticipantError()
	        {
	            participantError_ = Collections.emptyList();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearReceipt()
	        {
	            receipt_ = Receipt.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearRecentMessage()
	        {
	            recentMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearRecipientId()
	        {
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearSenderId()
	        {
	            bitField0_ = -9 & bitField0_;
	            senderId_ = NewConversationResponse.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final NewConversationResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ClientConversation getClientConversation()
	        {
	            return clientConversation_;
	        }
	
	        public final String getConversationClientId()
	        {
	            Object obj = conversationClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final NewConversationResponse getDefaultInstanceForType()
	        {
	            return NewConversationResponse.getDefaultInstance();
	        }
	
	        public final NewConversationResponse.InviteType getInviteType()
	        {
	            return inviteType_;
	        }
	
	        public final ParticipantError getParticipantError(int i)
	        {
	            return (ParticipantError)participantError_.get(i);
	        }
	
	        public final int getParticipantErrorCount()
	        {
	            return participantError_.size();
	        }
	
	        public final List getParticipantErrorList()
	        {
	            return Collections.unmodifiableList(participantError_);
	        }
	
	        public final Receipt getReceipt()
	        {
	            return receipt_;
	        }
	
	        public final ChatMessage getRecentMessage()
	        {
	            return recentMessage_;
	        }
	
	        public final String getRecipientId(int i)
	        {
	            return (String)recipientId_.get(i);
	        }
	
	        public final int getRecipientIdCount()
	        {
	            return recipientId_.size();
	        }
	
	        public final List getRecipientIdList()
	        {
	            return Collections.unmodifiableList(recipientId_);
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasClientConversation()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationClientId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteType()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceipt()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRecentMessage()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((NewConversationResponse)generatedmessagelite);
	        }
	
	        public final NewConversationResponse.Builder mergeFrom(NewConversationResponse newconversationresponse)
	        {
	            if(newconversationresponse == NewConversationResponse.getDefaultInstance()) {
	            	return this;
	            }
	
	            if(newconversationresponse.hasStatus())
	                setStatus(newconversationresponse.getStatus());
	            if(newconversationresponse.hasConversationClientId())
	                setConversationClientId(newconversationresponse.getConversationClientId());
	            if(newconversationresponse.hasClientConversation())
	            {
	                ClientConversation clientconversation = newconversationresponse.getClientConversation();
	                if((4 & bitField0_) == 4 && clientConversation_ != ClientConversation.getDefaultInstance())
	                    clientConversation_ = ClientConversation.newBuilder(clientConversation_).mergeFrom(clientconversation).buildPartial();
	                else
	                    clientConversation_ = clientconversation;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(newconversationresponse.hasSenderId())
	                setSenderId(newconversationresponse.getSenderId());
	            if(!newconversationresponse.participantError_.isEmpty())
	                if(participantError_.isEmpty())
	                {
	                    participantError_ = newconversationresponse.participantError_;
	                    bitField0_ = 0xffffffef & bitField0_;
	                } else
	                {
	                    ensureParticipantErrorIsMutable();
	                    participantError_.addAll(newconversationresponse.participantError_);
	                }
	            if(newconversationresponse.hasReceipt())
	            {
	                Receipt receipt = newconversationresponse.getReceipt();
	                if((0x20 & bitField0_) == 32 && receipt_ != Receipt.getDefaultInstance())
	                    receipt_ = Receipt.newBuilder(receipt_).mergeFrom(receipt).buildPartial();
	                else
	                    receipt_ = receipt;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            if(newconversationresponse.hasInviteType())
	                setInviteType(newconversationresponse.getInviteType());
	            if(newconversationresponse.hasRecentMessage())
	            {
	                ChatMessage chatmessage = newconversationresponse.getRecentMessage();
	                if((0x80 & bitField0_) == 128 && recentMessage_ != ChatMessage.getDefaultInstance())
	                    recentMessage_ = ChatMessage.newBuilder(recentMessage_).mergeFrom(chatmessage).buildPartial();
	                else
	                    recentMessage_ = chatmessage;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            if(!newconversationresponse.recipientId_.isEmpty())
	                if(recipientId_.isEmpty())
	                {
	                    recipientId_ = newconversationresponse.recipientId_;
	                    bitField0_ = 0xfffffeff & bitField0_;
	                } else
	                {
	                    ensureRecipientIdIsMutable();
	                    recipientId_.addAll(newconversationresponse.recipientId_);
	                }
	            return this;
	        }
	
	        public final NewConversationResponse.Builder setClientConversation(ClientConversation.Builder builder)
	        {
	            clientConversation_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder setClientConversation(ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                clientConversation_ = clientconversation;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setConversationClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationClientId_ = s;
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setInviteType(NewConversationResponse.InviteType invitetype)
	        {
	            if(invitetype == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x40 | bitField0_;
	                inviteType_ = invitetype;
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setParticipantError(int i, ParticipantError.Builder builder)
	        {
	            ensureParticipantErrorIsMutable();
	            participantError_.set(i, builder.build());
	            return this;
	        }
	
	        public final NewConversationResponse.Builder setParticipantError(int i, ParticipantError participanterror)
	        {
	            if(participanterror == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantErrorIsMutable();
	                participantError_.set(i, participanterror);
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setReceipt(Receipt.Builder builder)
	        {
	            receipt_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder setReceipt(Receipt receipt)
	        {
	            if(receipt == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                receipt_ = receipt;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setRecentMessage(ChatMessage.Builder builder)
	        {
	            recentMessage_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final NewConversationResponse.Builder setRecentMessage(ChatMessage chatmessage)
	        {
	            if(chatmessage == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                recentMessage_ = chatmessage;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setRecipientId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final NewConversationResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									ConversationSearchResponse
	//==================================================================================================
	public static interface ConversationSearchResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract ClientConversation getConversation(int i);
	
	    public abstract int getConversationCount();
	
	    public abstract List getConversationList();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class ConversationSearchResponse extends GeneratedMessageLite  implements ConversationSearchResponseOrBuilder {
	
		private static final ConversationSearchResponse defaultInstance;
	    private int bitField0_;
	    private List conversation_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        ConversationSearchResponse conversationsearchresponse = new ConversationSearchResponse();
	        defaultInstance = conversationsearchresponse;
	        conversationsearchresponse.status_ = Data.ResponseStatus.OK;
	        conversationsearchresponse.conversation_ = Collections.emptyList();
	    }

	    private ConversationSearchResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationSearchResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static ConversationSearchResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationSearchResponse conversationsearchresponse)
	    {
	        return new Builder().mergeFrom(conversationsearchresponse);
	    }
	
	    public final ClientConversation getConversation(int i)
	    {
	        return (ClientConversation)conversation_.get(i);
	    }
	
	    public final int getConversationCount()
	    {
	        return conversation_.size();
	    }
	
	    public final List getConversationList()
	    {
	        return conversation_;
	    }
	
	    public final ClientConversationOrBuilder getConversationOrBuilder(int i)
	    {
	        return (ClientConversationOrBuilder)conversation_.get(i);
	    }
	
	    public final List getConversationOrBuilderList()
	    {
	        return conversation_;
	    }
	
	    public final ConversationSearchResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            for(int l = 0; l < conversation_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(2, (MessageLite)conversation_.get(l));
	
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        for(int i = 0; i < conversation_.size(); i++)
	            codedoutputstream.writeMessage(2, (MessageLite)conversation_.get(i));
	
	    }
	    
	    //========================================================
	    //					Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationSearchResponseOrBuilder {
	
	    	private int bitField0_;
	        private List conversation_;
	        private Data.ResponseStatus status_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            conversation_ = Collections.emptyList();
	        }
	        
	        public ConversationSearchResponse.Builder clone()
	        {
	            return (new ConversationSearchResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureConversationIsMutable()
	        {
	            if((2 & bitField0_) != 2)
	            {
	                conversation_ = new ArrayList(conversation_);
	                bitField0_ = 2 | bitField0_;
	            }
	        }
	
	        public ConversationSearchResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    ClientConversation.Builder builder = ClientConversation.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addConversation(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationSearchResponse.Builder addAllConversation(Iterable iterable)
	        {
	            ensureConversationIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, conversation_);
	            return this;
	        }
	
	        public final ConversationSearchResponse.Builder addConversation(int i, ClientConversation.Builder builder)
	        {
	            ensureConversationIsMutable();
	            conversation_.add(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchResponse.Builder addConversation(int i, ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureConversationIsMutable();
	                conversation_.add(i, clientconversation);
	                return this;
	            }
	        }
	
	        public final ConversationSearchResponse.Builder addConversation(ClientConversation.Builder builder)
	        {
	            ensureConversationIsMutable();
	            conversation_.add(builder.build());
	            return this;
	        }
	
	        public final ConversationSearchResponse.Builder addConversation(ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureConversationIsMutable();
	                conversation_.add(clientconversation);
	                return this;
	            }
	        }
	
	        public final ConversationSearchResponse build()
	        {
	            ConversationSearchResponse conversationsearchresponse = buildPartial();
	            if(!conversationsearchresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationsearchresponse"));
	            else
	                return conversationsearchresponse;
	        }
	
	        public final ConversationSearchResponse buildPartial()
	        {
	            ConversationSearchResponse conversationsearchresponse = new ConversationSearchResponse(this);
	            int i = 1 & bitField0_;
	            int j = 0;
	            if(i == 1)
	                j = 1;
	            conversationsearchresponse.status_ = status_;
	            if((2 & bitField0_) == 2)
	            {
	                conversation_ = Collections.unmodifiableList(conversation_);
	                bitField0_ = -3 & bitField0_;
	            }
	            conversationsearchresponse.conversation_ = conversation_;
	            conversationsearchresponse.bitField0_ = j;
	            return conversationsearchresponse;
	        }
	
	        public final ConversationSearchResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            conversation_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchResponse.Builder clearConversation()
	        {
	            conversation_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ClientConversation getConversation(int i)
	        {
	            return (ClientConversation)conversation_.get(i);
	        }
	
	        public final int getConversationCount()
	        {
	            return conversation_.size();
	        }
	
	        public final List getConversationList()
	        {
	            return Collections.unmodifiableList(conversation_);
	        }
	
	        public final ConversationSearchResponse getDefaultInstanceForType()
	        {
	            return ConversationSearchResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationSearchResponse)generatedmessagelite);
	        }
	
	        public final ConversationSearchResponse.Builder mergeFrom(ConversationSearchResponse conversationsearchresponse)
	        {
	            if(conversationsearchresponse == ConversationSearchResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(conversationsearchresponse.hasStatus())
	                setStatus(conversationsearchresponse.getStatus());
	            if(!conversationsearchresponse.conversation_.isEmpty())
	                if(conversation_.isEmpty())
	                {
	                    conversation_ = conversationsearchresponse.conversation_;
	                    bitField0_ = -3 & bitField0_;
	                } else
	                {
	                    ensureConversationIsMutable();
	                    conversation_.addAll(conversationsearchresponse.conversation_);
	                }
	            return this;
	        }
	
	        public final ConversationSearchResponse.Builder setConversation(int i, ClientConversation.Builder builder)
	        {
	            ensureConversationIsMutable();
	            conversation_.set(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchResponse.Builder setConversation(int i, ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureConversationIsMutable();
	                conversation_.set(i, clientconversation);
	                return this;
	            }
	        }
	
	        public final ConversationSearchResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									DeviceRegistrationResponse
	//==================================================================================================
	public static interface DeviceRegistrationResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class DeviceRegistrationResponse extends GeneratedMessageLite implements DeviceRegistrationResponseOrBuilder {
	
		private static final DeviceRegistrationResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        DeviceRegistrationResponse deviceregistrationresponse = new DeviceRegistrationResponse();
	        defaultInstance = deviceregistrationresponse;
	        deviceregistrationresponse.timestamp_ = 0L;
	        deviceregistrationresponse.status_ = Data.ResponseStatus.OK;
	    }

	    private DeviceRegistrationResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    DeviceRegistrationResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static DeviceRegistrationResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(DeviceRegistrationResponse deviceregistrationresponse)
	    {
	        return new Builder().mergeFrom(deviceregistrationresponse);
	    }
	
	    public final DeviceRegistrationResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeInt64Size(1, timestamp_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(2, status_.getNumber());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeInt64(1, timestamp_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(2, status_.getNumber());
	    }
	    
	    //=====================================================
	    //					Builder
	    //=====================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements DeviceRegistrationResponseOrBuilder {
	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public DeviceRegistrationResponse.Builder clone()
	        {
	            return (new DeviceRegistrationResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public DeviceRegistrationResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    bitField0_ = 1 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 16: // '\020'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final DeviceRegistrationResponse build()
	        {
	            DeviceRegistrationResponse deviceregistrationresponse = buildPartial();
	            if(!deviceregistrationresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("deviceregistrationresponse"));
	            else
	                return deviceregistrationresponse;
	        }
	
	        public final DeviceRegistrationResponse buildPartial()
	        {
	            DeviceRegistrationResponse deviceregistrationresponse = new DeviceRegistrationResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            deviceregistrationresponse.timestamp_ = timestamp_;
	            if((i & 2) == 2)
	                k |= 2;
	            deviceregistrationresponse.status_ = status_;
	            deviceregistrationresponse.bitField0_ = k;
	            return deviceregistrationresponse;
	        }
	
	        public final DeviceRegistrationResponse.Builder clear()
	        {
	            super.clear();
	            timestamp_ = 0L;
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final DeviceRegistrationResponse.Builder clearStatus()
	        {
	            bitField0_ = -3 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final DeviceRegistrationResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final DeviceRegistrationResponse getDefaultInstanceForType()
	        {
	            return DeviceRegistrationResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((DeviceRegistrationResponse)generatedmessagelite);
	        }
	
	        public final DeviceRegistrationResponse.Builder mergeFrom(DeviceRegistrationResponse deviceregistrationresponse)
	        {
	            if(deviceregistrationresponse == DeviceRegistrationResponse.getDefaultInstance()) {
	            	return this;
	            }
	            if(deviceregistrationresponse.hasTimestamp())
	                setTimestamp(deviceregistrationresponse.getTimestamp());
	            if(deviceregistrationresponse.hasStatus())
	                setStatus(deviceregistrationresponse.getStatus());
	            return this;
	        }
	
	        public final DeviceRegistrationResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 1 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	    
	}
	
	//==================================================================================================
	//									EventSearchResponse
	//==================================================================================================
	public static interface EventSearchResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract ClientConversation getConversation();
	
	    public abstract EventStreamResponse.Event getEvent(int i);
	
	    public abstract int getEventCount();
	
	    public abstract List getEventList();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasConversation();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class EventSearchResponse extends GeneratedMessageLite implements EventSearchResponseOrBuilder {
		
		private static final EventSearchResponse defaultInstance;
	    private int bitField0_;
	    private ClientConversation conversation_;
	    private List event_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        EventSearchResponse eventsearchresponse = new EventSearchResponse();
	        defaultInstance = eventsearchresponse;
	        eventsearchresponse.status_ = Data.ResponseStatus.OK;
	        eventsearchresponse.conversation_ = ClientConversation.getDefaultInstance();
	        eventsearchresponse.event_ = Collections.emptyList();
	    }

	    private EventSearchResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    EventSearchResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    public static EventSearchResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(EventSearchResponse eventsearchresponse)
	    {
	        return new Builder().mergeFrom(eventsearchresponse);
	    }
	
	    public final ClientConversation getConversation()
	    {
	        return conversation_;
	    }
	
	    public final EventSearchResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final EventStreamResponse.Event getEvent(int i)
	    {
	        return (EventStreamResponse.Event)event_.get(i);
	    }
	
	    public final int getEventCount()
	    {
	        return event_.size();
	    }
	
	    public final List getEventList()
	    {
	        return event_;
	    }
	
	    public final EventStreamResponse.EventOrBuilder getEventOrBuilder(int i)
	    {
	        return (EventStreamResponse.EventOrBuilder)event_.get(i);
	    }
	
	    public final List getEventOrBuilderList()
	    {
	        return event_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(3, conversation_);
	            for(int l = 0; l < event_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(4, (MessageLite)event_.get(l));
	
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasConversation()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(3, conversation_);
	        for(int i = 0; i < event_.size(); i++)
	            codedoutputstream.writeMessage(4, (MessageLite)event_.get(i));
	
	    }
	    
	    //====================================================
	    //					Builder
	    //====================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements EventSearchResponseOrBuilder {
	
	    	private int bitField0_;
	        private ClientConversation conversation_;
	        private List event_;
	        private Data.ResponseStatus status_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            conversation_ = ClientConversation.getDefaultInstance();
	            event_ = Collections.emptyList();
	        }
	        
	        public EventSearchResponse.Builder clone()
	        {
	            return (new EventSearchResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureEventIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                event_ = new ArrayList(event_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public EventSearchResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 26: // '\032'
	                    ClientConversation.Builder builder1 = ClientConversation.newBuilder();
	                    if(hasConversation())
	                        builder1.mergeFrom(getConversation());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setConversation(builder1.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    EventStreamResponse.Event.Builder builder = EventStreamResponse.Event.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addEvent(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final EventSearchResponse.Builder addAllEvent(Iterable iterable)
	        {
	            ensureEventIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, event_);
	            return this;
	        }
	
	        public final EventSearchResponse.Builder addEvent(int i, EventStreamResponse.Event.Builder builder)
	        {
	            ensureEventIsMutable();
	            event_.add(i, builder.build());
	            return this;
	        }
	
	        public final EventSearchResponse.Builder addEvent(int i, EventStreamResponse.Event event)
	        {
	            if(event == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventIsMutable();
	                event_.add(i, event);
	                return this;
	            }
	        }
	
	        public final EventSearchResponse.Builder addEvent(EventStreamResponse.Event.Builder builder)
	        {
	            ensureEventIsMutable();
	            event_.add(builder.build());
	            return this;
	        }
	
	        public final EventSearchResponse.Builder addEvent(EventStreamResponse.Event event)
	        {
	            if(event == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventIsMutable();
	                event_.add(event);
	                return this;
	            }
	        }
	
	        public final EventSearchResponse build()
	        {
	            EventSearchResponse eventsearchresponse = buildPartial();
	            if(!eventsearchresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("eventsearchresponse"));
	            else
	                return eventsearchresponse;
	        }
	
	        public final EventSearchResponse buildPartial()
	        {
	            EventSearchResponse eventsearchresponse = new EventSearchResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            eventsearchresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            eventsearchresponse.conversation_ = conversation_;
	            if((4 & bitField0_) == 4)
	            {
	                event_ = Collections.unmodifiableList(event_);
	                bitField0_ = -5 & bitField0_;
	            }
	            eventsearchresponse.event_ = event_;
	            eventsearchresponse.bitField0_ = k;
	            return eventsearchresponse;
	        }
	
	        public final EventSearchResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            conversation_ = ClientConversation.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            event_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final EventSearchResponse.Builder clearConversation()
	        {
	            conversation_ = ClientConversation.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final EventSearchResponse.Builder clearEvent()
	        {
	            event_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final EventSearchResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ClientConversation getConversation()
	        {
	            return conversation_;
	        }
	
	        public final EventSearchResponse getDefaultInstanceForType()
	        {
	            return EventSearchResponse.getDefaultInstance();
	        }
	
	        public final EventStreamResponse.Event getEvent(int i)
	        {
	            return (EventStreamResponse.Event)event_.get(i);
	        }
	
	        public final int getEventCount()
	        {
	            return event_.size();
	        }
	
	        public final List getEventList()
	        {
	            return Collections.unmodifiableList(event_);
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasConversation()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((EventSearchResponse)generatedmessagelite);
	        }
	
	        public final EventSearchResponse.Builder mergeFrom(EventSearchResponse eventsearchresponse)
	        {
	            if(eventsearchresponse == EventSearchResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(eventsearchresponse.hasStatus())
	                setStatus(eventsearchresponse.getStatus());
	            if(eventsearchresponse.hasConversation())
	            {
	                ClientConversation clientconversation = eventsearchresponse.getConversation();
	                if((2 & bitField0_) == 2 && conversation_ != ClientConversation.getDefaultInstance())
	                    conversation_ = ClientConversation.newBuilder(conversation_).mergeFrom(clientconversation).buildPartial();
	                else
	                    conversation_ = clientconversation;
	                bitField0_ = 2 | bitField0_;
	            }
	            if(!eventsearchresponse.event_.isEmpty())
	                if(event_.isEmpty())
	                {
	                    event_ = eventsearchresponse.event_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureEventIsMutable();
	                    event_.addAll(eventsearchresponse.event_);
	                }
	            return this;
	        }
	
	        public final EventSearchResponse.Builder setConversation(ClientConversation.Builder builder)
	        {
	            conversation_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final EventSearchResponse.Builder setConversation(ClientConversation clientconversation)
	        {
	            if(clientconversation == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversation_ = clientconversation;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	
	        public final EventSearchResponse.Builder setEvent(int i, EventStreamResponse.Event.Builder builder)
	        {
	            ensureEventIsMutable();
	            event_.set(i, builder.build());
	            return this;
	        }
	
	        public final EventSearchResponse.Builder setEvent(int i, EventStreamResponse.Event event)
	        {
	            if(event == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureEventIsMutable();
	                event_.set(i, event);
	                return this;
	            }
	        }
	
	        public final EventSearchResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									 GlobalConversationPreferencesResponse
	//==================================================================================================
	public static interface GlobalConversationPreferencesResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract Data.ConversationMetadata getConversationMetadata();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasConversationMetadata();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class GlobalConversationPreferencesResponse extends GeneratedMessageLite implements GlobalConversationPreferencesResponseOrBuilder {
	
		private static final GlobalConversationPreferencesResponse defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private Data.ConversationMetadata conversationMetadata_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        GlobalConversationPreferencesResponse globalconversationpreferencesresponse = new GlobalConversationPreferencesResponse();
	        defaultInstance = globalconversationpreferencesresponse;
	        globalconversationpreferencesresponse.status_ = Data.ResponseStatus.OK;
	        globalconversationpreferencesresponse.conversationId_ = "";
	        globalconversationpreferencesresponse.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	    }

	    private GlobalConversationPreferencesResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    GlobalConversationPreferencesResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static GlobalConversationPreferencesResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(GlobalConversationPreferencesResponse globalconversationpreferencesresponse)
	    {
	        return new Builder().mergeFrom(globalconversationpreferencesresponse);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Data.ConversationMetadata getConversationMetadata()
	    {
	        return conversationMetadata_;
	    }
	
	    public final GlobalConversationPreferencesResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, conversationMetadata_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationMetadata()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, conversationMetadata_);
	    }
	    
	    //=========================================================
	    //						Builder
	    //=========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements GlobalConversationPreferencesResponseOrBuilder
	    {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Data.ConversationMetadata conversationMetadata_;
	        private Data.ResponseStatus status_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            conversationId_ = "";
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	        }
	        
	        public GlobalConversationPreferencesResponse.Builder clone()
	        {
	            return (new GlobalConversationPreferencesResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public GlobalConversationPreferencesResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Data.ConversationMetadata.Builder builder = Data.ConversationMetadata.newBuilder();
	                    if(hasConversationMetadata())
	                        builder.mergeFrom(getConversationMetadata());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setConversationMetadata(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final GlobalConversationPreferencesResponse build()
	        {
	            GlobalConversationPreferencesResponse globalconversationpreferencesresponse = buildPartial();
	            if(!globalconversationpreferencesresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("globalconversationpreferencesresponse"));
	            else
	                return globalconversationpreferencesresponse;
	        }
	
	        public final GlobalConversationPreferencesResponse buildPartial()
	        {
	            GlobalConversationPreferencesResponse globalconversationpreferencesresponse = new GlobalConversationPreferencesResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            globalconversationpreferencesresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            globalconversationpreferencesresponse.conversationId_ = conversationId_;
	            if((i & 4) == 4)
	                k |= 4;
	            globalconversationpreferencesresponse.conversationMetadata_ = conversationMetadata_;
	            globalconversationpreferencesresponse.bitField0_ = k;
	            return globalconversationpreferencesresponse;
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = GlobalConversationPreferencesResponse.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder clearConversationMetadata()
	        {
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ConversationMetadata getConversationMetadata()
	        {
	            return conversationMetadata_;
	        }
	
	        public final GlobalConversationPreferencesResponse getDefaultInstanceForType()
	        {
	            return GlobalConversationPreferencesResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationMetadata()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((GlobalConversationPreferencesResponse)generatedmessagelite);
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder mergeFrom(GlobalConversationPreferencesResponse globalconversationpreferencesresponse)
	        {
	            if(globalconversationpreferencesresponse == GlobalConversationPreferencesResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(globalconversationpreferencesresponse.hasStatus())
	                setStatus(globalconversationpreferencesresponse.getStatus());
	            if(globalconversationpreferencesresponse.hasConversationId())
	                setConversationId(globalconversationpreferencesresponse.getConversationId());
	            if(globalconversationpreferencesresponse.hasConversationMetadata())
	            {
	                Data.ConversationMetadata conversationmetadata = globalconversationpreferencesresponse.getConversationMetadata();
	                if((4 & bitField0_) == 4 && conversationMetadata_ != Data.ConversationMetadata.getDefaultInstance())
	                    conversationMetadata_ = Data.ConversationMetadata.newBuilder(conversationMetadata_).mergeFrom(conversationmetadata).buildPartial();
	                else
	                    conversationMetadata_ = conversationmetadata;
	                bitField0_ = 4 | bitField0_;
	            }
	            return this;
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder setConversationMetadata(Data.ConversationMetadata.Builder builder)
	        {
	            conversationMetadata_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder setConversationMetadata(Data.ConversationMetadata conversationmetadata)
	        {
	            if(conversationmetadata == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationMetadata_ = conversationmetadata;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									HangoutInviteFinishResponse
	//==================================================================================================
	public static interface HangoutInviteFinishResponseOrBuilder extends MessageLiteOrBuilder {
	
	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class HangoutInviteFinishResponse extends GeneratedMessageLite implements HangoutInviteFinishResponseOrBuilder {
	
		private static final HangoutInviteFinishResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        HangoutInviteFinishResponse hangoutinvitefinishresponse = new HangoutInviteFinishResponse();
	        defaultInstance = hangoutinvitefinishresponse;
	        hangoutinvitefinishresponse.status_ = Data.ResponseStatus.OK;
	        hangoutinvitefinishresponse.requestError_ = "";
	    }

	    private HangoutInviteFinishResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    HangoutInviteFinishResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutInviteFinishResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteFinishResponse hangoutinvitefinishresponse)
	    {
	        return new Builder().mergeFrom(hangoutinvitefinishresponse);
	    }
	
	    public final HangoutInviteFinishResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	    }
	    
	    //========================================================
	    //						Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteFinishResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	        }
	        
	        public HangoutInviteFinishResponse.Builder clone()
	        {
	            return (new HangoutInviteFinishResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutInviteFinishResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException {
	            
	        	do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteFinishResponse build()
	        {
	            HangoutInviteFinishResponse hangoutinvitefinishresponse = buildPartial();
	            if(!hangoutinvitefinishresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinvitefinishresponse"));
	            else
	                return hangoutinvitefinishresponse;
	        }
	
	        public final HangoutInviteFinishResponse buildPartial()
	        {
	            HangoutInviteFinishResponse hangoutinvitefinishresponse = new HangoutInviteFinishResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinvitefinishresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinvitefinishresponse.requestError_ = requestError_;
	            hangoutinvitefinishresponse.bitField0_ = k;
	            return hangoutinvitefinishresponse;
	        }
	
	        public final HangoutInviteFinishResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteFinishResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = HangoutInviteFinishResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final HangoutInviteFinishResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final HangoutInviteFinishResponse getDefaultInstanceForType()
	        {
	            return HangoutInviteFinishResponse.getDefaultInstance();
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteFinishResponse)generatedmessagelite);
	        }
	
	        public final HangoutInviteFinishResponse.Builder mergeFrom(HangoutInviteFinishResponse hangoutinvitefinishresponse) {
	            if(hangoutinvitefinishresponse == HangoutInviteFinishResponse.getDefaultInstance()) {
	            	return this;
	            }
	            if(hangoutinvitefinishresponse.hasStatus())
	                setStatus(hangoutinvitefinishresponse.getStatus());
	            if(hangoutinvitefinishresponse.hasRequestError())
	                setRequestError(hangoutinvitefinishresponse.getRequestError());
	            return this;
	        }
	
	        public final HangoutInviteFinishResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteFinishResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									HangoutInviteKeepAliveResponse
	//==================================================================================================
	public static interface HangoutInviteKeepAliveResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class HangoutInviteKeepAliveResponse extends GeneratedMessageLite implements HangoutInviteKeepAliveResponseOrBuilder {
	
		private static final HangoutInviteKeepAliveResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse = new HangoutInviteKeepAliveResponse();
	        defaultInstance = hangoutinvitekeepaliveresponse;
	        hangoutinvitekeepaliveresponse.status_ = Data.ResponseStatus.OK;
	        hangoutinvitekeepaliveresponse.requestError_ = "";
	    }

	    private HangoutInviteKeepAliveResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    HangoutInviteKeepAliveResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutInviteKeepAliveResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse)
	    {
	        return new Builder().mergeFrom(hangoutinvitekeepaliveresponse);
	    }
	
	    public final HangoutInviteKeepAliveResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace() throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream) throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	    }
	    
	    //=======================================================
	    //						Builder
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteKeepAliveResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	        }
	        
	        public HangoutInviteKeepAliveResponse.Builder clone()
	        {
	            return (new HangoutInviteKeepAliveResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutInviteKeepAliveResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteKeepAliveResponse build()
	        {
	            HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse = buildPartial();
	            if(!hangoutinvitekeepaliveresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinvitekeepaliveresponse"));
	            else
	                return hangoutinvitekeepaliveresponse;
	        }
	
	        public final HangoutInviteKeepAliveResponse buildPartial()
	        {
	            HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse = new HangoutInviteKeepAliveResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinvitekeepaliveresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinvitekeepaliveresponse.requestError_ = requestError_;
	            hangoutinvitekeepaliveresponse.bitField0_ = k;
	            return hangoutinvitekeepaliveresponse;
	        }
	
	        public final HangoutInviteKeepAliveResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = HangoutInviteKeepAliveResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveResponse getDefaultInstanceForType()
	        {
	            return HangoutInviteKeepAliveResponse.getDefaultInstance();
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteKeepAliveResponse)generatedmessagelite);
	        }
	
	        public final HangoutInviteKeepAliveResponse.Builder mergeFrom(HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse)
	        {
	            if(hangoutinvitekeepaliveresponse == HangoutInviteKeepAliveResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutinvitekeepaliveresponse.hasStatus())
	                setStatus(hangoutinvitekeepaliveresponse.getStatus());
	            if(hangoutinvitekeepaliveresponse.hasRequestError())
	                setRequestError(hangoutinvitekeepaliveresponse.getRequestError());
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteKeepAliveResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									HangoutInviteReplyResponse
	//==================================================================================================
	public static interface HangoutInviteReplyResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract boolean getInviteObsolete();
	
	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasInviteObsolete();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class HangoutInviteReplyResponse extends GeneratedMessageLite implements HangoutInviteReplyResponseOrBuilder {
	
		private static final HangoutInviteReplyResponse defaultInstance;
	    private int bitField0_;
	    private boolean inviteObsolete_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        HangoutInviteReplyResponse hangoutinvitereplyresponse = new HangoutInviteReplyResponse();
	        defaultInstance = hangoutinvitereplyresponse;
	        hangoutinvitereplyresponse.status_ = Data.ResponseStatus.OK;
	        hangoutinvitereplyresponse.requestError_ = "";
	        hangoutinvitereplyresponse.inviteObsolete_ = false;
	    }

	    private HangoutInviteReplyResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private HangoutInviteReplyResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutInviteReplyResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteReplyResponse hangoutinvitereplyresponse)
	    {
	        return new Builder().mergeFrom(hangoutinvitereplyresponse);
	    }
	
	    public final HangoutInviteReplyResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final boolean getInviteObsolete()
	    {
	        return inviteObsolete_;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBoolSize(3, inviteObsolete_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasInviteObsolete()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBool(3, inviteObsolete_);
	    }
	    
	    //==============================================================
	    //						Builder
	    //==============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteReplyResponseOrBuilder {
	
	    	private int bitField0_;
	        private boolean inviteObsolete_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	        }
	        
	        public HangoutInviteReplyResponse.Builder clone()
	        {
	            return (new HangoutInviteReplyResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutInviteReplyResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    inviteObsolete_ = codedinputstream.readBool();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteReplyResponse build()
	        {
	            HangoutInviteReplyResponse hangoutinvitereplyresponse = buildPartial();
	            if(!hangoutinvitereplyresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinvitereplyresponse"));
	            else
	                return hangoutinvitereplyresponse;
	        }
	
	        public final HangoutInviteReplyResponse buildPartial()
	        {
	            HangoutInviteReplyResponse hangoutinvitereplyresponse = new HangoutInviteReplyResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinvitereplyresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinvitereplyresponse.requestError_ = requestError_;
	            if((i & 4) == 4)
	                k |= 4;
	            hangoutinvitereplyresponse.inviteObsolete_ = inviteObsolete_;
	            hangoutinvitereplyresponse.bitField0_ = k;
	            return hangoutinvitereplyresponse;
	        }
	
	        public final HangoutInviteReplyResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            inviteObsolete_ = false;
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteReplyResponse.Builder clearInviteObsolete()
	        {
	            bitField0_ = -5 & bitField0_;
	            inviteObsolete_ = false;
	            return this;
	        }
	
	        public final HangoutInviteReplyResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = HangoutInviteReplyResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final HangoutInviteReplyResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final HangoutInviteReplyResponse getDefaultInstanceForType()
	        {
	            return HangoutInviteReplyResponse.getDefaultInstance();
	        }
	
	        public final boolean getInviteObsolete()
	        {
	            return inviteObsolete_;
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasInviteObsolete()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteReplyResponse)generatedmessagelite);
	        }
	
	        public final HangoutInviteReplyResponse.Builder mergeFrom(HangoutInviteReplyResponse hangoutinvitereplyresponse)
	        {
	            if(hangoutinvitereplyresponse == HangoutInviteReplyResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutinvitereplyresponse.hasStatus())
	                setStatus(hangoutinvitereplyresponse.getStatus());
	            if(hangoutinvitereplyresponse.hasRequestError())
	                setRequestError(hangoutinvitereplyresponse.getRequestError());
	            if(hangoutinvitereplyresponse.hasInviteObsolete())
	                setInviteObsolete(hangoutinvitereplyresponse.getInviteObsolete());
	            return this;
	        }
	
	        public final HangoutInviteReplyResponse.Builder setInviteObsolete(boolean flag)
	        {
	            bitField0_ = 4 | bitField0_;
	            inviteObsolete_ = flag;
	            return this;
	        }
	
	        public final HangoutInviteReplyResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteReplyResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									HangoutInviteResponse
	//==================================================================================================
	public static interface HangoutInviteResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getInviteId();
	
	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasInviteId();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class HangoutInviteResponse extends GeneratedMessageLite implements HangoutInviteResponseOrBuilder {
	
		private static final HangoutInviteResponse defaultInstance;
	    private int bitField0_;
	    private Object inviteId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        HangoutInviteResponse hangoutinviteresponse = new HangoutInviteResponse();
	        defaultInstance = hangoutinviteresponse;
	        hangoutinviteresponse.status_ = Data.ResponseStatus.OK;
	        hangoutinviteresponse.inviteId_ = "";
	        hangoutinviteresponse.requestError_ = "";
	    }

	    private HangoutInviteResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    HangoutInviteResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutInviteResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getInviteIdBytes()
	    {
	        Object obj = inviteId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviteId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteResponse hangoutinviteresponse)
	    {
	        return new Builder().mergeFrom(hangoutinviteresponse);
	    }
	
	    public final HangoutInviteResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getInviteId()
	    {
	        Object obj = inviteId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviteId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getInviteIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getRequestErrorBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasInviteId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getInviteIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getRequestErrorBytes());
	    }
	    
	    //========================================================
	    //						Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object inviteId_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            inviteId_ = "";
	            requestError_ = "";
	        }
	        
	        public HangoutInviteResponse.Builder clone()
	        {
	            return (new HangoutInviteResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutInviteResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    inviteId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteResponse build()
	        {
	            HangoutInviteResponse hangoutinviteresponse = buildPartial();
	            if(!hangoutinviteresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinviteresponse"));
	            else
	                return hangoutinviteresponse;
	        }
	
	        public final HangoutInviteResponse buildPartial()
	        {
	            HangoutInviteResponse hangoutinviteresponse = new HangoutInviteResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinviteresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinviteresponse.inviteId_ = inviteId_;
	            if((i & 4) == 4)
	                k |= 4;
	            hangoutinviteresponse.requestError_ = requestError_;
	            hangoutinviteresponse.bitField0_ = k;
	            return hangoutinviteresponse;
	        }
	
	        public final HangoutInviteResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            inviteId_ = "";
	            bitField0_ = -3 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteResponse.Builder clearInviteId()
	        {
	            bitField0_ = -3 & bitField0_;
	            inviteId_ = HangoutInviteResponse.getDefaultInstance().getInviteId();
	            return this;
	        }
	
	        public final HangoutInviteResponse.Builder clearRequestError()
	        {
	            bitField0_ = -5 & bitField0_;
	            requestError_ = HangoutInviteResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final HangoutInviteResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final HangoutInviteResponse getDefaultInstanceForType()
	        {
	            return HangoutInviteResponse.getDefaultInstance();
	        }
	
	        public final String getInviteId()
	        {
	            Object obj = inviteId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviteId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasInviteId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteResponse)generatedmessagelite);
	        }
	
	        public final HangoutInviteResponse.Builder mergeFrom(HangoutInviteResponse hangoutinviteresponse)
	        {
	            if(hangoutinviteresponse == HangoutInviteResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutinviteresponse.hasStatus())
	                setStatus(hangoutinviteresponse.getStatus());
	            if(hangoutinviteresponse.hasInviteId())
	                setInviteId(hangoutinviteresponse.getInviteId());
	            if(hangoutinviteresponse.hasRequestError())
	                setRequestError(hangoutinviteresponse.getRequestError());
	            return this;
	        }
	
	        public final HangoutInviteResponse.Builder setInviteId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                inviteId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									HangoutRingFinishResponse
	//==================================================================================================
	public static interface HangoutRingFinishResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class HangoutRingFinishResponse extends GeneratedMessageLite implements HangoutRingFinishResponseOrBuilder {
	
		private static final HangoutRingFinishResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;
	
	    static 
	    {
	        HangoutRingFinishResponse hangoutringfinishresponse = new HangoutRingFinishResponse();
	        defaultInstance = hangoutringfinishresponse;
	        hangoutringfinishresponse.status_ = Data.ResponseStatus.OK;
	        hangoutringfinishresponse.requestError_ = "";
	    }
	
	    private HangoutRingFinishResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
        
		HangoutRingFinishResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
		
	    public static HangoutRingFinishResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutRingFinishResponse hangoutringfinishresponse)
	    {
	        return new Builder().mergeFrom(hangoutringfinishresponse);
	    }
	
	    public final HangoutRingFinishResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	    }
	    
	    //=========================================================
	    //						Builder
	    //=========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutRingFinishResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	        }
	        
	        public HangoutRingFinishResponse.Builder clone()
	        {
	            return (new HangoutRingFinishResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutRingFinishResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutRingFinishResponse build()
	        {
	            HangoutRingFinishResponse hangoutringfinishresponse = buildPartial();
	            if(!hangoutringfinishresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutringfinishresponse"));
	            else
	                return hangoutringfinishresponse;
	        }
	
	        public final HangoutRingFinishResponse buildPartial()
	        {
	            HangoutRingFinishResponse hangoutringfinishresponse = new HangoutRingFinishResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutringfinishresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutringfinishresponse.requestError_ = requestError_;
	            hangoutringfinishresponse.bitField0_ = k;
	            return hangoutringfinishresponse;
	        }
	
	        public final HangoutRingFinishResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final HangoutRingFinishResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = HangoutRingFinishResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final HangoutRingFinishResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final HangoutRingFinishResponse getDefaultInstanceForType()
	        {
	            return HangoutRingFinishResponse.getDefaultInstance();
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutRingFinishResponse)generatedmessagelite);
	        }
	
	        public final HangoutRingFinishResponse.Builder mergeFrom(HangoutRingFinishResponse hangoutringfinishresponse)
	        {
	            if(hangoutringfinishresponse == HangoutRingFinishResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutringfinishresponse.hasStatus())
	                setStatus(hangoutringfinishresponse.getStatus());
	            if(hangoutringfinishresponse.hasRequestError())
	                setRequestError(hangoutringfinishresponse.getRequestError());
	            return this;
	        }
	
	        public final HangoutRingFinishResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutRingFinishResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									InviteResponse
	//==================================================================================================
	public static interface InviteResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract ParticipantError getParticipantError(int i);
	
	    public abstract int getParticipantErrorCount();
	
	    public abstract List getParticipantErrorList();
	
	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class InviteResponse extends GeneratedMessageLite implements InviteResponseOrBuilder {
	
		private static final InviteResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private List participantError_;
	    private Object requestError_;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        InviteResponse inviteresponse = new InviteResponse();
	        defaultInstance = inviteresponse;
	        inviteresponse.status_ = Data.ResponseStatus.OK;
	        inviteresponse.timestamp_ = 0L;
	        inviteresponse.requestError_ = "";
	        inviteresponse.participantError_ = Collections.emptyList();
	    }

	    private InviteResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    InviteResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static InviteResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(InviteResponse inviteresponse)
	    {
	        return new Builder().mergeFrom(inviteresponse);
	    }
	
	    public final InviteResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final ParticipantError getParticipantError(int i)
	    {
	        return (ParticipantError)participantError_.get(i);
	    }
	
	    public final int getParticipantErrorCount()
	    {
	        return participantError_.size();
	    }
	
	    public final List getParticipantErrorList()
	    {
	        return participantError_;
	    }
	
	    public final ParticipantErrorOrBuilder getParticipantErrorOrBuilder(int i)
	    {
	        return (ParticipantErrorOrBuilder)participantError_.get(i);
	    }
	
	    public final List getParticipantErrorOrBuilderList()
	    {
	        return participantError_;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            for(int l = 0; l < participantError_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(3, (MessageLite)participantError_.get(l));
	
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(5, getRequestErrorBytes());
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	        for(int i = 0; i < participantError_.size(); i++)
	            codedoutputstream.writeMessage(3, (MessageLite)participantError_.get(i));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(5, getRequestErrorBytes());
	    }
	    
	    //========================================================
	    //						Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements InviteResponseOrBuilder {
	
	    	private int bitField0_;
	        private List participantError_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	            participantError_ = Collections.emptyList();
	        }
	        
	        public InviteResponse.Builder clone()
	        {
	            return (new InviteResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureParticipantErrorIsMutable()
	        {
	            if((8 & bitField0_) != 8)
	            {
	                participantError_ = new ArrayList(participantError_);
	                bitField0_ = 8 | bitField0_;
	            }
	        }
	
	        public InviteResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 26: // '\032'
	                    ParticipantError.Builder builder = ParticipantError.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addParticipantError(builder.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 4 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final InviteResponse.Builder addAllParticipantError(Iterable iterable)
	        {
	            ensureParticipantErrorIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participantError_);
	            return this;
	        }
	
	        public final InviteResponse.Builder addParticipantError(int i, ParticipantError.Builder builder)
	        {
	            ensureParticipantErrorIsMutable();
	            participantError_.add(i, builder.build());
	            return this;
	        }
	
	        public final InviteResponse.Builder addParticipantError(int i, ParticipantError participanterror)
	        {
	            if(participanterror == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantErrorIsMutable();
	                participantError_.add(i, participanterror);
	                return this;
	            }
	        }
	
	        public final InviteResponse.Builder addParticipantError(ParticipantError.Builder builder)
	        {
	            ensureParticipantErrorIsMutable();
	            participantError_.add(builder.build());
	            return this;
	        }
	
	        public final InviteResponse.Builder addParticipantError(ParticipantError participanterror)
	        {
	            if(participanterror == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantErrorIsMutable();
	                participantError_.add(participanterror);
	                return this;
	            }
	        }
	
	        public final InviteResponse build()
	        {
	            InviteResponse inviteresponse = buildPartial();
	            if(!inviteresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("inviteresponse"));
	            else
	                return inviteresponse;
	        }
	
	        public final InviteResponse buildPartial()
	        {
	            InviteResponse inviteresponse = new InviteResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            inviteresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            inviteresponse.timestamp_ = timestamp_;
	            if((i & 4) == 4)
	                k |= 4;
	            inviteresponse.requestError_ = requestError_;
	            if((8 & bitField0_) == 8)
	            {
	                participantError_ = Collections.unmodifiableList(participantError_);
	                bitField0_ = -9 & bitField0_;
	            }
	            inviteresponse.participantError_ = participantError_;
	            inviteresponse.bitField0_ = k;
	            return inviteresponse;
	        }
	
	        public final InviteResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -5 & bitField0_;
	            participantError_ = Collections.emptyList();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final InviteResponse.Builder clearParticipantError()
	        {
	            participantError_ = Collections.emptyList();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final InviteResponse.Builder clearRequestError()
	        {
	            bitField0_ = -5 & bitField0_;
	            requestError_ = InviteResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final InviteResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final InviteResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final InviteResponse getDefaultInstanceForType()
	        {
	            return InviteResponse.getDefaultInstance();
	        }
	
	        public final ParticipantError getParticipantError(int i)
	        {
	            return (ParticipantError)participantError_.get(i);
	        }
	
	        public final int getParticipantErrorCount()
	        {
	            return participantError_.size();
	        }
	
	        public final List getParticipantErrorList()
	        {
	            return Collections.unmodifiableList(participantError_);
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((InviteResponse)generatedmessagelite);
	        }
	
	        public final InviteResponse.Builder mergeFrom(InviteResponse inviteresponse)
	        {
	            if(inviteresponse == InviteResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(inviteresponse.hasStatus())
	                setStatus(inviteresponse.getStatus());
	            if(inviteresponse.hasTimestamp())
	                setTimestamp(inviteresponse.getTimestamp());
	            if(inviteresponse.hasRequestError())
	                setRequestError(inviteresponse.getRequestError());
	            if(!inviteresponse.participantError_.isEmpty())
	                if(participantError_.isEmpty())
	                {
	                    participantError_ = inviteresponse.participantError_;
	                    bitField0_ = -9 & bitField0_;
	                } else
	                {
	                    ensureParticipantErrorIsMutable();
	                    participantError_.addAll(inviteresponse.participantError_);
	                }
	            return this;
	        }
	
	        public final InviteResponse.Builder setParticipantError(int i, ParticipantError.Builder builder)
	        {
	            ensureParticipantErrorIsMutable();
	            participantError_.set(i, builder.build());
	            return this;
	        }
	
	        public final InviteResponse.Builder setParticipantError(int i, ParticipantError participanterror)
	        {
	            if(participanterror == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantErrorIsMutable();
	                participantError_.set(i, participanterror);
	                return this;
	            }
	        }
	
	        public final InviteResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final InviteResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final InviteResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									LeaveConversationResponse
	//==================================================================================================
	public static interface LeaveConversationResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class LeaveConversationResponse extends GeneratedMessageLite implements LeaveConversationResponseOrBuilder {
	
		private static final LeaveConversationResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        LeaveConversationResponse leaveconversationresponse = new LeaveConversationResponse();
	        defaultInstance = leaveconversationresponse;
	        leaveconversationresponse.status_ = Data.ResponseStatus.OK;
	        leaveconversationresponse.timestamp_ = 0L;
	        leaveconversationresponse.requestError_ = "";
	    }

	    private LeaveConversationResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private LeaveConversationResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static LeaveConversationResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(LeaveConversationResponse leaveconversationresponse)
	    {
	        return new Builder().mergeFrom(leaveconversationresponse);
	    }
	
	    public final LeaveConversationResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getRequestErrorBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getRequestErrorBytes());
	    }
	    
	    //=============================================================
	    //						Builder
	    //=============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements LeaveConversationResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	        }
	        
	        public LeaveConversationResponse.Builder clone()
	        {
	            return (new LeaveConversationResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public LeaveConversationResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final LeaveConversationResponse build()
	        {
	            LeaveConversationResponse leaveconversationresponse = buildPartial();
	            if(!leaveconversationresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("leaveconversationresponse"));
	            else
	                return leaveconversationresponse;
	        }
	
	        public final LeaveConversationResponse buildPartial()
	        {
	            LeaveConversationResponse leaveconversationresponse = new LeaveConversationResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            leaveconversationresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            leaveconversationresponse.timestamp_ = timestamp_;
	            if((i & 4) == 4)
	                k |= 4;
	            leaveconversationresponse.requestError_ = requestError_;
	            leaveconversationresponse.bitField0_ = k;
	            return leaveconversationresponse;
	        }
	
	        public final LeaveConversationResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final LeaveConversationResponse.Builder clearRequestError()
	        {
	            bitField0_ = -5 & bitField0_;
	            requestError_ = LeaveConversationResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final LeaveConversationResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final LeaveConversationResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final LeaveConversationResponse getDefaultInstanceForType()
	        {
	            return LeaveConversationResponse.getDefaultInstance();
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((LeaveConversationResponse)generatedmessagelite);
	        }
	
	        public final LeaveConversationResponse.Builder mergeFrom(LeaveConversationResponse leaveconversationresponse)
	        {
	            if(leaveconversationresponse == LeaveConversationResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(leaveconversationresponse.hasStatus())
	                setStatus(leaveconversationresponse.getStatus());
	            if(leaveconversationresponse.hasTimestamp())
	                setTimestamp(leaveconversationresponse.getTimestamp());
	            if(leaveconversationresponse.hasRequestError())
	                setRequestError(leaveconversationresponse.getRequestError());
	            return this;
	        }
	
	        public final LeaveConversationResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final LeaveConversationResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final LeaveConversationResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									PingResponse
	//==================================================================================================
	public static interface PingResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class PingResponse extends GeneratedMessageLite implements PingResponseOrBuilder {
	
		private static final PingResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        PingResponse pingresponse = new PingResponse();
	        defaultInstance = pingresponse;
	        pingresponse.status_ = Data.ResponseStatus.OK;
	        pingresponse.timestamp_ = 0L;
	    }

	    private PingResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private PingResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static PingResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(PingResponse pingresponse)
	    {
	        return new Builder().mergeFrom(pingresponse);
	    }
	
	    public final PingResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	    }
	    
	    //======================================================
	    //					Builder
	    //======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements PingResponseOrBuilder {
	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public PingResponse.Builder clone()
	        {
	            return (new PingResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public PingResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final PingResponse build()
	        {
	            PingResponse pingresponse = buildPartial();
	            if(!pingresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("pingresponse"));
	            else
	                return pingresponse;
	        }
	
	        public final PingResponse buildPartial()
	        {
	            PingResponse pingresponse = new PingResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            pingresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            pingresponse.timestamp_ = timestamp_;
	            pingresponse.bitField0_ = k;
	            return pingresponse;
	        }
	
	        public final PingResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final PingResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final PingResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final PingResponse getDefaultInstanceForType()
	        {
	            return PingResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((PingResponse)generatedmessagelite);
	        }
	
	        public final PingResponse.Builder mergeFrom(PingResponse pingresponse)
	        {
	            if(pingresponse == PingResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(pingresponse.hasStatus())
	                setStatus(pingresponse.getStatus());
	            if(pingresponse.hasTimestamp())
	                setTimestamp(pingresponse.getTimestamp());
	            return this;
	        }
	
	        public final PingResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final PingResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	//==================================================================================================
	//									PresenceResponse
	//==================================================================================================
	public static interface PresenceResponseOrBuilder extends MessageLiteOrBuilder {
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class PresenceResponse extends GeneratedMessageLite implements PresenceResponseOrBuilder {
	
		private static final PresenceResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        PresenceResponse presenceresponse = new PresenceResponse();
	        defaultInstance = presenceresponse;
	        presenceresponse.status_ = Data.ResponseStatus.OK;
	    }

	    private PresenceResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    PresenceResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static PresenceResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(PresenceResponse presenceresponse)
	    {
	        return new Builder().mergeFrom(presenceresponse);
	    }
	
	    public final PresenceResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	    }
	    
	    //========================================================
	    //					Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements PresenceResponseOrBuilder {
	    	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	
	        public PresenceResponse.Builder clone()
	        {
	            return (new PresenceResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public PresenceResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final PresenceResponse build()
	        {
	            PresenceResponse presenceresponse = buildPartial();
	            if(!presenceresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("presenceresponse"));
	            else
	                return presenceresponse;
	        }
	
	        public final PresenceResponse buildPartial()
	        {
	            PresenceResponse presenceresponse = new PresenceResponse(this);
	            int i = 1 & bitField0_;
	            int j = 0;
	            if(i == 1)
	                j = 1;
	            presenceresponse.status_ = status_;
	            presenceresponse.bitField0_ = j;
	            return presenceresponse;
	        }
	
	        public final PresenceResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final PresenceResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final PresenceResponse getDefaultInstanceForType()
	        {
	            return PresenceResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((PresenceResponse)generatedmessagelite);
	        }
	
	        public final PresenceResponse.Builder mergeFrom(PresenceResponse presenceresponse)
	        {
	            if(presenceresponse != PresenceResponse.getDefaultInstance() && presenceresponse.hasStatus())
	                setStatus(presenceresponse.getStatus());
	            return this;
	        }
	
	        public final PresenceResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									ReceiptResponse
	//==================================================================================================
	public static interface ReceiptResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class ReceiptResponse extends GeneratedMessageLite implements ReceiptResponseOrBuilder {
	
		private static final ReceiptResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        ReceiptResponse receiptresponse = new ReceiptResponse();
	        defaultInstance = receiptresponse;
	        receiptresponse.status_ = Data.ResponseStatus.OK;
	        receiptresponse.requestError_ = "";
	    }

	    private ReceiptResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private ReceiptResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static ReceiptResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ReceiptResponse receiptresponse)
	    {
	        return new Builder().mergeFrom(receiptresponse);
	    }
	
	    public final ReceiptResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	    }
	    
	    //========================================================
	    //					Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ReceiptResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	        }
	        
	        public ReceiptResponse.Builder clone()
	        {
	            return (new ReceiptResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ReceiptResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ReceiptResponse build()
	        {
	            ReceiptResponse receiptresponse = buildPartial();
	            if(!receiptresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("receiptresponse"));
	            else
	                return receiptresponse;
	        }
	
	        public final ReceiptResponse buildPartial()
	        {
	            ReceiptResponse receiptresponse = new ReceiptResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            receiptresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            receiptresponse.requestError_ = requestError_;
	            receiptresponse.bitField0_ = k;
	            return receiptresponse;
	        }
	
	        public final ReceiptResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ReceiptResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = ReceiptResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final ReceiptResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ReceiptResponse getDefaultInstanceForType()
	        {
	            return ReceiptResponse.getDefaultInstance();
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ReceiptResponse)generatedmessagelite);
	        }
	
	        public final ReceiptResponse.Builder mergeFrom(ReceiptResponse receiptresponse)
	        {
	            if(receiptresponse == ReceiptResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(receiptresponse.hasStatus())
	                setStatus(receiptresponse.getStatus());
	            if(receiptresponse.hasRequestError())
	                setRequestError(receiptresponse.getRequestError());
	            return this;
	        }
	
	        public final ReceiptResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final ReceiptResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									ReplyToInviteResponse
	//==================================================================================================
	public static interface ReplyToInviteResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class ReplyToInviteResponse extends GeneratedMessageLite implements ReplyToInviteResponseOrBuilder {
	
		private static final ReplyToInviteResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        ReplyToInviteResponse replytoinviteresponse = new ReplyToInviteResponse();
	        defaultInstance = replytoinviteresponse;
	        replytoinviteresponse.status_ = Data.ResponseStatus.OK;
	        replytoinviteresponse.timestamp_ = 0L;
	    }

	    private ReplyToInviteResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ReplyToInviteResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static ReplyToInviteResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ReplyToInviteResponse replytoinviteresponse)
	    {
	        return new Builder().mergeFrom(replytoinviteresponse);
	    }
	
	    public final ReplyToInviteResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	    }
	    
	    //=============================================================
	    //						Builder
	    //=============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ReplyToInviteResponseOrBuilder {
	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public ReplyToInviteResponse.Builder clone()
	        {
	            return (new ReplyToInviteResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ReplyToInviteResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ReplyToInviteResponse build()
	        {
	            ReplyToInviteResponse replytoinviteresponse = buildPartial();
	            if(!replytoinviteresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("replytoinviteresponse"));
	            else
	                return replytoinviteresponse;
	        }
	
	        public final ReplyToInviteResponse buildPartial()
	        {
	            ReplyToInviteResponse replytoinviteresponse = new ReplyToInviteResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            replytoinviteresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            replytoinviteresponse.timestamp_ = timestamp_;
	            replytoinviteresponse.bitField0_ = k;
	            return replytoinviteresponse;
	        }
	
	        public final ReplyToInviteResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ReplyToInviteResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final ReplyToInviteResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final ReplyToInviteResponse getDefaultInstanceForType()
	        {
	            return ReplyToInviteResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ReplyToInviteResponse)generatedmessagelite);
	        }
	
	        public final ReplyToInviteResponse.Builder mergeFrom(ReplyToInviteResponse replytoinviteresponse)
	        {
	            if(replytoinviteresponse == ReplyToInviteResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(replytoinviteresponse.hasStatus())
	                setStatus(replytoinviteresponse.getStatus());
	            if(replytoinviteresponse.hasTimestamp())
	                setTimestamp(replytoinviteresponse.getTimestamp());
	            return this;
	        }
	
	        public final ReplyToInviteResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final ReplyToInviteResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									SetAclsResponse
	//==================================================================================================
	public static interface SetAclsResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class SetAclsResponse extends GeneratedMessageLite implements SetAclsResponseOrBuilder {
		
		private static final SetAclsResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        SetAclsResponse setaclsresponse = new SetAclsResponse();
	        defaultInstance = setaclsresponse;
	        setaclsresponse.status_ = Data.ResponseStatus.OK;
	        setaclsresponse.timestamp_ = 0L;
	    }

	    private SetAclsResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    SetAclsResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    public static SetAclsResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(SetAclsResponse setaclsresponse)
	    {
	        return new Builder().mergeFrom(setaclsresponse);
	    }
	
	    public final SetAclsResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	    }
	    
	    //======================================================================
	    //						Builder
	    //======================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements SetAclsResponseOrBuilder {
	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public SetAclsResponse.Builder clone()
	        {
	            return (new SetAclsResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public SetAclsResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final SetAclsResponse build()
	        {
	            SetAclsResponse setaclsresponse = buildPartial();
	            if(!setaclsresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("setaclsresponse"));
	            else
	                return setaclsresponse;
	        }
	
	        public final SetAclsResponse buildPartial()
	        {
	            SetAclsResponse setaclsresponse = new SetAclsResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            setaclsresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            setaclsresponse.timestamp_ = timestamp_;
	            setaclsresponse.bitField0_ = k;
	            return setaclsresponse;
	        }
	
	        public final SetAclsResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final SetAclsResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final SetAclsResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final SetAclsResponse getDefaultInstanceForType()
	        {
	            return SetAclsResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((SetAclsResponse)generatedmessagelite);
	        }
	
	        public final SetAclsResponse.Builder mergeFrom(SetAclsResponse setaclsresponse)
	        {
	            if(setaclsresponse == SetAclsResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(setaclsresponse.hasStatus())
	                setStatus(setaclsresponse.getStatus());
	            if(setaclsresponse.hasTimestamp())
	                setTimestamp(setaclsresponse.getTimestamp());
	            return this;
	        }
	
	        public final SetAclsResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final SetAclsResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	//==================================================================================================
	//									TileEventResponse
	//==================================================================================================
	public static interface TileEventResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getRequestError();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasRequestError();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class TileEventResponse extends GeneratedMessageLite implements TileEventResponseOrBuilder {
		
		private static final TileEventResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object requestError_;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        TileEventResponse tileeventresponse = new TileEventResponse();
	        defaultInstance = tileeventresponse;
	        tileeventresponse.status_ = Data.ResponseStatus.OK;
	        tileeventresponse.requestError_ = "";
	        tileeventresponse.timestamp_ = 0L;
	    }

	    private TileEventResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    TileEventResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    public static TileEventResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestErrorBytes()
	    {
	        Object obj = requestError_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestError_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(TileEventResponse tileeventresponse)
	    {
	        return new Builder().mergeFrom(tileeventresponse);
	    }
	
	    public final TileEventResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getRequestError()
	    {
	        Object obj = requestError_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestError_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeInt64Size(3, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasRequestError()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getRequestErrorBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeInt64(3, timestamp_);
	    }
	    
	    //=============================================================
	    //						Builder
	    //=============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements TileEventResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object requestError_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;

	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            requestError_ = "";
	        }
	        
	        public TileEventResponse.Builder clone()
	        {
	            return (new TileEventResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public TileEventResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    requestError_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final TileEventResponse build()
	        {
	            TileEventResponse tileeventresponse = buildPartial();
	            if(!tileeventresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("tileeventresponse"));
	            else
	                return tileeventresponse;
	        }
	
	        public final TileEventResponse buildPartial()
	        {
	            TileEventResponse tileeventresponse = new TileEventResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            tileeventresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            tileeventresponse.requestError_ = requestError_;
	            if((i & 4) == 4)
	                k |= 4;
	            tileeventresponse.timestamp_ = timestamp_;
	            tileeventresponse.bitField0_ = k;
	            return tileeventresponse;
	        }
	
	        public final TileEventResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            requestError_ = "";
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final TileEventResponse.Builder clearRequestError()
	        {
	            bitField0_ = -3 & bitField0_;
	            requestError_ = TileEventResponse.getDefaultInstance().getRequestError();
	            return this;
	        }
	
	        public final TileEventResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final TileEventResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -5 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final TileEventResponse getDefaultInstanceForType()
	        {
	            return TileEventResponse.getDefaultInstance();
	        }
	
	        public final String getRequestError()
	        {
	            Object obj = requestError_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestError_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasRequestError()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((TileEventResponse)generatedmessagelite);
	        }
	
	        public final TileEventResponse.Builder mergeFrom(TileEventResponse tileeventresponse)
	        {
	            if(tileeventresponse == TileEventResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(tileeventresponse.hasStatus())
	                setStatus(tileeventresponse.getStatus());
	            if(tileeventresponse.hasRequestError())
	                setRequestError(tileeventresponse.getRequestError());
	            if(tileeventresponse.hasTimestamp())
	                setTimestamp(tileeventresponse.getTimestamp());
	            return this;
	        }
	
	        public final TileEventResponse.Builder setRequestError(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                requestError_ = s;
	                return this;
	            }
	        }
	
	        public final TileEventResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final TileEventResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 4 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	//==================================================================================================
	//									TypingResponse
	//==================================================================================================
	public static interface TypingResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean hasStatus();
	}
	
	public static final class TypingResponse extends GeneratedMessageLite implements TypingResponseOrBuilder {
	
		private static final TypingResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.ResponseStatus status_;

	    static 
	    {
	        TypingResponse typingresponse = new TypingResponse();
	        defaultInstance = typingresponse;
	        typingresponse.status_ = Data.ResponseStatus.OK;
	    }
	    
	    private TypingResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private TypingResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static TypingResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(TypingResponse typingresponse)
	    {
	        return new Builder().mergeFrom(typingresponse);
	    }
	
	    public final TypingResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	    }
	    
	    //=================================================================
	    //						Builder
	    //=================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements TypingResponseOrBuilder {
	
	    	private int bitField0_;
	        private Data.ResponseStatus status_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	        }
	        
	        public TypingResponse.Builder clone()
	        {
	            return (new TypingResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public TypingResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final TypingResponse build()
	        {
	            TypingResponse typingresponse = buildPartial();
	            if(!typingresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("typingresponse"));
	            else
	                return typingresponse;
	        }
	
	        public final TypingResponse buildPartial()
	        {
	            TypingResponse typingresponse = new TypingResponse(this);
	            int i = 1 & bitField0_;
	            int j = 0;
	            if(i == 1)
	                j = 1;
	            typingresponse.status_ = status_;
	            typingresponse.bitField0_ = j;
	            return typingresponse;
	        }
	
	        public final TypingResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final TypingResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final TypingResponse getDefaultInstanceForType()
	        {
	            return TypingResponse.getDefaultInstance();
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((TypingResponse)generatedmessagelite);
	        }
	
	        public final TypingResponse.Builder mergeFrom(TypingResponse typingresponse)
	        {
	            if(typingresponse != TypingResponse.getDefaultInstance() && typingresponse.hasStatus())
	                setStatus(typingresponse.getStatus());
	            return this;
	        }
	
	        public final TypingResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									UserCreationResponse
	//==================================================================================================
	public static interface UserCreationResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract Data.Participant getParticipant();
	
	    public abstract String getParticipantId();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasParticipant();
	
	    public abstract boolean hasParticipantId();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class UserCreationResponse extends GeneratedMessageLite implements UserCreationResponseOrBuilder {
	
		private static final UserCreationResponse defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object participantId_;
	    private Data.Participant participant_;
	    private Data.ResponseStatus status_;
	    private long timestamp_;

	    static 
	    {
	        UserCreationResponse usercreationresponse = new UserCreationResponse();
	        defaultInstance = usercreationresponse;
	        usercreationresponse.status_ = Data.ResponseStatus.OK;
	        usercreationresponse.timestamp_ = 0L;
	        usercreationresponse.participantId_ = "";
	        usercreationresponse.participant_ = Data.Participant.getDefaultInstance();
	    }

	    private UserCreationResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    UserCreationResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static UserCreationResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getParticipantIdBytes()
	    {
	        Object obj = participantId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            participantId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(UserCreationResponse usercreationresponse)
	    {
	        return new Builder().mergeFrom(usercreationresponse);
	    }
	
	    public final UserCreationResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Data.Participant getParticipant()
	    {
	        return participant_;
	    }
	
	    public final String getParticipantId()
	    {
	        Object obj = participantId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                participantId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, status_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeInt64Size(2, timestamp_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getParticipantIdBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(4, participant_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasParticipant()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasParticipantId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, status_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeInt64(2, timestamp_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getParticipantIdBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(4, participant_);
	    }
	    
	    //=============================================================
	    //						Builder
	    //=============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements UserCreationResponseOrBuilder {
	
	    	private int bitField0_;
	        private Object participantId_;
	        private Data.Participant participant_;
	        private Data.ResponseStatus status_;
	        private long timestamp_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            participantId_ = "";
	            participant_ = Data.Participant.getDefaultInstance();
	        }
	        
	        public UserCreationResponse.Builder clone()
	        {
	            return (new UserCreationResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public UserCreationResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    participantId_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    Data.Participant.Builder builder = Data.Participant.newBuilder();
	                    if(hasParticipant())
	                        builder.mergeFrom(getParticipant());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setParticipant(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final UserCreationResponse build()
	        {
	            UserCreationResponse usercreationresponse = buildPartial();
	            if(!usercreationresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("usercreationresponse"));
	            else
	                return usercreationresponse;
	        }
	
	        public final UserCreationResponse buildPartial()
	        {
	            UserCreationResponse usercreationresponse = new UserCreationResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            usercreationresponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            usercreationresponse.timestamp_ = timestamp_;
	            if((i & 4) == 4)
	                k |= 4;
	            usercreationresponse.participantId_ = participantId_;
	            if((i & 8) == 8)
	                k |= 8;
	            usercreationresponse.participant_ = participant_;
	            usercreationresponse.bitField0_ = k;
	            return usercreationresponse;
	        }
	
	        public final UserCreationResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = -3 & bitField0_;
	            participantId_ = "";
	            bitField0_ = -5 & bitField0_;
	            participant_ = Data.Participant.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final UserCreationResponse.Builder clearParticipant()
	        {
	            participant_ = Data.Participant.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final UserCreationResponse.Builder clearParticipantId()
	        {
	            bitField0_ = -5 & bitField0_;
	            participantId_ = UserCreationResponse.getDefaultInstance().getParticipantId();
	            return this;
	        }
	
	        public final UserCreationResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final UserCreationResponse.Builder clearTimestamp()
	        {
	            bitField0_ = -3 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final UserCreationResponse getDefaultInstanceForType()
	        {
	            return UserCreationResponse.getDefaultInstance();
	        }
	
	        public final Data.Participant getParticipant()
	        {
	            return participant_;
	        }
	
	        public final String getParticipantId()
	        {
	            Object obj = participantId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                participantId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasParticipant()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasParticipantId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((UserCreationResponse)generatedmessagelite);
	        }
	
	        public final UserCreationResponse.Builder mergeFrom(UserCreationResponse usercreationresponse)
	        {
	            if(usercreationresponse == UserCreationResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(usercreationresponse.hasStatus())
	                setStatus(usercreationresponse.getStatus());
	            if(usercreationresponse.hasTimestamp())
	                setTimestamp(usercreationresponse.getTimestamp());
	            if(usercreationresponse.hasParticipantId())
	                setParticipantId(usercreationresponse.getParticipantId());
	            if(usercreationresponse.hasParticipant())
	            {
	                Data.Participant participant = usercreationresponse.getParticipant();
	                if((8 & bitField0_) == 8 && participant_ != Data.Participant.getDefaultInstance())
	                    participant_ = Data.Participant.newBuilder(participant_).mergeFrom(participant).buildPartial();
	                else
	                    participant_ = participant;
	                bitField0_ = 8 | bitField0_;
	            }
	            return this;
	        }
	
	        public final UserCreationResponse.Builder setParticipant(Data.Participant.Builder builder)
	        {
	            participant_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final UserCreationResponse.Builder setParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                participant_ = participant;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final UserCreationResponse.Builder setParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                participantId_ = s;
	                return this;
	            }
	        }
	
	        public final UserCreationResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final UserCreationResponse.Builder setTimestamp(long l)
	        {
	            bitField0_ = 2 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									SetAclsRequest
	//==================================================================================================
	public static interface SetAclsRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract SetAclsRequest.Acl getAcl();
	
	    public abstract String getSenderId();
	
	    public abstract boolean hasAcl();
	
	    public abstract boolean hasSenderId();
	}
	
	public static final class SetAclsRequest extends GeneratedMessageLite implements SetAclsRequestOrBuilder {
	
		private static final SetAclsRequest defaultInstance;
	    private Acl acl_;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object senderId_;

	    static 
	    {
	        SetAclsRequest setaclsrequest = new SetAclsRequest();
	        defaultInstance = setaclsrequest;
	        setaclsrequest.acl_ = Acl.EVERYONE;
	        setaclsrequest.senderId_ = "";
	    }

	    private SetAclsRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    SetAclsRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static SetAclsRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(SetAclsRequest setaclsrequest)
	    {
	        return new Builder().mergeFrom(setaclsrequest);
	    }
	
	    public final Acl getAcl()
	    {
	        return acl_;
	    }
	
	    public final SetAclsRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, acl_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final boolean hasAcl()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, acl_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getSenderIdBytes());
	    }
	    
	    //==========================================================
	    //						ACL
	    //==========================================================
	    public static enum Acl implements com.google.protobuf.Internal.EnumLite {
	    	
	    	EVERYONE(1),
	    	EXTENDED_CIRCLES(2),
	    	CIRCLES(3),
	    	NO_ONE(4);
	    	
	    	private int value;
	    	
	    	private Acl(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static Acl valueOf(int value) {
	    		for(Acl a : Acl.values()) {
	    			if(a.value == value) {
	    				return a;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //==========================================================
	    //						Builder
	    //==========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements SetAclsRequestOrBuilder {
	
	    	private SetAclsRequest.Acl acl_;
	        private int bitField0_;
	        private Object senderId_;

	        private Builder()
	        {
	            acl_ = SetAclsRequest.Acl.EVERYONE;
	            senderId_ = "";
	        }
	        
	        public SetAclsRequest.Builder clone()
	        {
	            return (new SetAclsRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public SetAclsRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    SetAclsRequest.Acl acl = SetAclsRequest.Acl.valueOf(codedinputstream.readEnum());
	                    if(acl != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        acl_ = acl;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final SetAclsRequest build()
	        {
	            SetAclsRequest setaclsrequest = buildPartial();
	            if(!setaclsrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("setaclsrequest"));
	            else
	                return setaclsrequest;
	        }
	
	        public final SetAclsRequest buildPartial()
	        {
	            SetAclsRequest setaclsrequest = new SetAclsRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            setaclsrequest.acl_ = acl_;
	            if((i & 2) == 2)
	                k |= 2;
	            setaclsrequest.senderId_ = senderId_;
	            setaclsrequest.bitField0_ = k;
	            return setaclsrequest;
	        }
	
	        public final SetAclsRequest.Builder clear()
	        {
	            super.clear();
	            acl_ = SetAclsRequest.Acl.EVERYONE;
	            bitField0_ = -2 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final SetAclsRequest.Builder clearAcl()
	        {
	            bitField0_ = -2 & bitField0_;
	            acl_ = SetAclsRequest.Acl.EVERYONE;
	            return this;
	        }
	
	        public final SetAclsRequest.Builder clearSenderId()
	        {
	            bitField0_ = -3 & bitField0_;
	            senderId_ = SetAclsRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final SetAclsRequest.Acl getAcl()
	        {
	            return acl_;
	        }
	
	        public final SetAclsRequest getDefaultInstanceForType()
	        {
	            return SetAclsRequest.getDefaultInstance();
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean hasAcl()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((SetAclsRequest)generatedmessagelite);
	        }
	
	        public final SetAclsRequest.Builder mergeFrom(SetAclsRequest setaclsrequest)
	        {
	            if(setaclsrequest == SetAclsRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(setaclsrequest.hasAcl())
	                setAcl(setaclsrequest.getAcl());
	            if(setaclsrequest.hasSenderId())
	                setSenderId(setaclsrequest.getSenderId());
	            return this;
	        }
	
	        public final SetAclsRequest.Builder setAcl(SetAclsRequest.Acl acl)
	        {
	            if(acl == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                acl_ = acl;
	                return this;
	            }
	        }
	
	        public final SetAclsRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	    }
	}

	//==================================================================================================
	//									DeviceInfo
	//==================================================================================================
	public static interface DeviceInfoOrBuilder extends MessageLiteOrBuilder {

	    public abstract long getAndroidId();
	
	    public abstract String getAppId();
	
	    public abstract Version.ClientVersion getClientVersion();
	
	    public abstract long getCreatedAt();
	
	    public abstract boolean getEnabled();
	
	    public abstract long getMarkedForDeletionAt();
	
	    public abstract String getPhoneNumber();
	
	    public abstract boolean getPushEnabled();
	
	    public abstract ByteString getToken();
	
	    public abstract DeviceInfo.DeviceType getType();
	
	    public abstract long getUpdatedAt();
	
	    public abstract boolean hasAndroidId();
	
	    public abstract boolean hasAppId();
	
	    public abstract boolean hasClientVersion();
	
	    public abstract boolean hasCreatedAt();
	
	    public abstract boolean hasEnabled();
	
	    public abstract boolean hasMarkedForDeletionAt();
	
	    public abstract boolean hasPhoneNumber();
	
	    public abstract boolean hasPushEnabled();
	
	    public abstract boolean hasToken();
	
	    public abstract boolean hasType();
	
	    public abstract boolean hasUpdatedAt();
	}
	
	public static final class DeviceInfo extends GeneratedMessageLite implements DeviceInfoOrBuilder {
	
		private static final DeviceInfo defaultInstance;
	    private long androidId_;
	    private Object appId_;
	    private int bitField0_;
	    private Version.ClientVersion clientVersion_;
	    private long createdAt_;
	    private boolean enabled_;
	    private long markedForDeletionAt_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object phoneNumber_;
	    private boolean pushEnabled_;
	    private ByteString token_;
	    private DeviceType type_;
	    private long updatedAt_;

	    static 
	    {
	        DeviceInfo deviceinfo = new DeviceInfo();
	        defaultInstance = deviceinfo;
	        deviceinfo.type_ = DeviceType.ANDROID;
	        deviceinfo.enabled_ = false;
	        deviceinfo.pushEnabled_ = false;
	        deviceinfo.token_ = ByteString.EMPTY;
	        deviceinfo.phoneNumber_ = "";
	        deviceinfo.createdAt_ = 0L;
	        deviceinfo.updatedAt_ = 0L;
	        deviceinfo.markedForDeletionAt_ = 0L;
	        deviceinfo.appId_ = "";
	        deviceinfo.androidId_ = 0L;
	        deviceinfo.clientVersion_ = Version.ClientVersion.getDefaultInstance();
	    }

	    private DeviceInfo()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    DeviceInfo(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getAppIdBytes()
	    {
	        Object obj = appId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            appId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static DeviceInfo getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getPhoneNumberBytes()
	    {
	        Object obj = phoneNumber_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            phoneNumber_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public final long getAndroidId()
	    {
	        return androidId_;
	    }
	
	    public final String getAppId()
	    {
	        Object obj = appId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                appId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Version.ClientVersion getClientVersion()
	    {
	        return clientVersion_;
	    }
	
	    public final long getCreatedAt()
	    {
	        return createdAt_;
	    }
	
	    public final DeviceInfo getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final boolean getEnabled()
	    {
	        return enabled_;
	    }
	
	    public final long getMarkedForDeletionAt()
	    {
	        return markedForDeletionAt_;
	    }
	
	    public final String getPhoneNumber()
	    {
	        Object obj = phoneNumber_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                phoneNumber_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final boolean getPushEnabled()
	    {
	        return pushEnabled_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBoolSize(2, enabled_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBoolSize(3, pushEnabled_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, token_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeBytesSize(5, getPhoneNumberBytes());
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeInt64Size(6, createdAt_);
	            if((0x40 & bitField0_) == 64)
	                k += CodedOutputStream.computeInt64Size(7, updatedAt_);
	            if((0x80 & bitField0_) == 128)
	                k += CodedOutputStream.computeInt64Size(8, markedForDeletionAt_);
	            if((0x100 & bitField0_) == 256)
	                k += CodedOutputStream.computeBytesSize(9, getAppIdBytes());
	            if((0x200 & bitField0_) == 512)
	                k += CodedOutputStream.computeInt64Size(10, androidId_);
	            if((0x400 & bitField0_) == 1024)
	                k += CodedOutputStream.computeMessageSize(11, clientVersion_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final ByteString getToken()
	    {
	        return token_;
	    }
	
	    public final DeviceType getType()
	    {
	        return type_;
	    }
	
	    public final long getUpdatedAt()
	    {
	        return updatedAt_;
	    }
	
	    public final boolean hasAndroidId()
	    {
	        boolean flag;
	        if((0x200 & bitField0_) == 512)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasAppId()
	    {
	        boolean flag;
	        if((0x100 & bitField0_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasClientVersion()
	    {
	        boolean flag;
	        if((0x400 & bitField0_) == 1024)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasCreatedAt()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEnabled()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMarkedForDeletionAt()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPhoneNumber()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPushEnabled()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasToken()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUpdatedAt()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBool(2, enabled_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBool(3, pushEnabled_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, token_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBytes(5, getPhoneNumberBytes());
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeInt64(6, createdAt_);
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeInt64(7, updatedAt_);
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeInt64(8, markedForDeletionAt_);
	        if((0x100 & bitField0_) == 256)
	            codedoutputstream.writeBytes(9, getAppIdBytes());
	        if((0x200 & bitField0_) == 512)
	            codedoutputstream.writeInt64(10, androidId_);
	        if((0x400 & bitField0_) == 1024)
	            codedoutputstream.writeMessage(11, clientVersion_);
	    }
	    
	    //===============================================
	    //					DeviceType
	    //===============================================
	    public static enum DeviceType implements com.google.protobuf.Internal.EnumLite {
	    	
	    	ANDROID(1),
	    	IOS(2),
	    	SMS(3);
	    	
	    	private int value;
	    	
	    	private DeviceType(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static DeviceType valueOf(int value) {
	    		for(DeviceType t : DeviceType.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //===============================================
	    //					Builder
	    //===============================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements DeviceInfoOrBuilder {
	
	    	private long androidId_;
	        private Object appId_;
	        private int bitField0_;
	        private Version.ClientVersion clientVersion_;
	        private long createdAt_;
	        private boolean enabled_;
	        private long markedForDeletionAt_;
	        private Object phoneNumber_;
	        private boolean pushEnabled_;
	        private ByteString token_;
	        private DeviceInfo.DeviceType type_;
	        private long updatedAt_;

	        private Builder()
	        {
	            type_ = DeviceInfo.DeviceType.ANDROID;
	            token_ = ByteString.EMPTY;
	            phoneNumber_ = "";
	            appId_ = "";
	            clientVersion_ = Version.ClientVersion.getDefaultInstance();
	        }
	        
	        public DeviceInfo.Builder clone()
	        {
	            return (new DeviceInfo.Builder()).mergeFrom(buildPartial());
	        }
	
	        public DeviceInfo.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    DeviceInfo.DeviceType devicetype = DeviceInfo.DeviceType.valueOf(codedinputstream.readEnum());
	                    if(devicetype != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = devicetype;
	                    }
	                    break;
	
	                case 16: // '\020'
	                    bitField0_ = 2 | bitField0_;
	                    enabled_ = codedinputstream.readBool();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    pushEnabled_ = codedinputstream.readBool();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    token_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 0x10 | bitField0_;
	                    phoneNumber_ = codedinputstream.readBytes();
	                    break;
	
	                case 48: // '0'
	                    bitField0_ = 0x20 | bitField0_;
	                    createdAt_ = codedinputstream.readInt64();
	                    break;
	
	                case 56: // '8'
	                    bitField0_ = 0x40 | bitField0_;
	                    updatedAt_ = codedinputstream.readInt64();
	                    break;
	
	                case 64: // '@'
	                    bitField0_ = 0x80 | bitField0_;
	                    markedForDeletionAt_ = codedinputstream.readInt64();
	                    break;
	
	                case 74: // 'J'
	                    bitField0_ = 0x100 | bitField0_;
	                    appId_ = codedinputstream.readBytes();
	                    break;
	
	                case 80: // 'P'
	                    bitField0_ = 0x200 | bitField0_;
	                    androidId_ = codedinputstream.readInt64();
	                    break;
	
	                case 90: // 'Z'
	                    Version.ClientVersion.Builder builder = Version.ClientVersion.newBuilder();
	                    if(hasClientVersion())
	                        builder.mergeFrom(getClientVersion());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setClientVersion(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final DeviceInfo build()
	        {
	            DeviceInfo deviceinfo = buildPartial();
	            if(!deviceinfo.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("deviceinfo"));
	            else
	                return deviceinfo;
	        }
	
	        public final DeviceInfo buildPartial()
	        {
	            DeviceInfo deviceinfo = new DeviceInfo(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            deviceinfo.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            deviceinfo.enabled_ = enabled_;
	            if((i & 4) == 4)
	                k |= 4;
	            deviceinfo.pushEnabled_ = pushEnabled_;
	            if((i & 8) == 8)
	                k |= 8;
	            deviceinfo.token_ = token_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            deviceinfo.phoneNumber_ = phoneNumber_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            deviceinfo.createdAt_ = createdAt_;
	            if((i & 0x40) == 64)
	                k |= 0x40;
	            deviceinfo.updatedAt_ = updatedAt_;
	            if((i & 0x80) == 128)
	                k |= 0x80;
	            deviceinfo.markedForDeletionAt_ = markedForDeletionAt_;
	            if((i & 0x100) == 256)
	                k |= 0x100;
	            deviceinfo.appId_ = appId_;
	            if((i & 0x200) == 512)
	                k |= 0x200;
	            deviceinfo.androidId_ = androidId_;
	            if((i & 0x400) == 1024)
	                k |= 0x400;
	            deviceinfo.clientVersion_ = clientVersion_;
	            deviceinfo.bitField0_ = k;
	            return deviceinfo;
	        }
	
	        public final DeviceInfo.Builder clear()
	        {
	            super.clear();
	            type_ = DeviceInfo.DeviceType.ANDROID;
	            bitField0_ = -2 & bitField0_;
	            enabled_ = false;
	            bitField0_ = -3 & bitField0_;
	            pushEnabled_ = false;
	            bitField0_ = -5 & bitField0_;
	            token_ = ByteString.EMPTY;
	            bitField0_ = -9 & bitField0_;
	            phoneNumber_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            createdAt_ = 0L;
	            bitField0_ = 0xffffffdf & bitField0_;
	            updatedAt_ = 0L;
	            bitField0_ = 0xffffffbf & bitField0_;
	            markedForDeletionAt_ = 0L;
	            bitField0_ = 0xffffff7f & bitField0_;
	            appId_ = "";
	            bitField0_ = 0xfffffeff & bitField0_;
	            androidId_ = 0L;
	            bitField0_ = 0xfffffdff & bitField0_;
	            clientVersion_ = Version.ClientVersion.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearAndroidId()
	        {
	            bitField0_ = 0xfffffdff & bitField0_;
	            androidId_ = 0L;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearAppId()
	        {
	            bitField0_ = 0xfffffeff & bitField0_;
	            appId_ = DeviceInfo.getDefaultInstance().getAppId();
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearClientVersion()
	        {
	            clientVersion_ = Version.ClientVersion.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearCreatedAt()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            createdAt_ = 0L;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearEnabled()
	        {
	            bitField0_ = -3 & bitField0_;
	            enabled_ = false;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearMarkedForDeletionAt()
	        {
	            bitField0_ = 0xffffff7f & bitField0_;
	            markedForDeletionAt_ = 0L;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearPhoneNumber()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            phoneNumber_ = DeviceInfo.getDefaultInstance().getPhoneNumber();
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearPushEnabled()
	        {
	            bitField0_ = -5 & bitField0_;
	            pushEnabled_ = false;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearToken()
	        {
	            bitField0_ = -9 & bitField0_;
	            token_ = DeviceInfo.getDefaultInstance().getToken();
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = DeviceInfo.DeviceType.ANDROID;
	            return this;
	        }
	
	        public final DeviceInfo.Builder clearUpdatedAt()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            updatedAt_ = 0L;
	            return this;
	        }
	
	        public final long getAndroidId()
	        {
	            return androidId_;
	        }
	
	        public final String getAppId()
	        {
	            Object obj = appId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                appId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Version.ClientVersion getClientVersion()
	        {
	            return clientVersion_;
	        }
	
	        public final long getCreatedAt()
	        {
	            return createdAt_;
	        }
	
	        public final DeviceInfo getDefaultInstanceForType()
	        {
	            return DeviceInfo.getDefaultInstance();
	        }
	
	        public final boolean getEnabled()
	        {
	            return enabled_;
	        }
	
	        public final long getMarkedForDeletionAt()
	        {
	            return markedForDeletionAt_;
	        }
	
	        public final String getPhoneNumber()
	        {
	            Object obj = phoneNumber_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                phoneNumber_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean getPushEnabled()
	        {
	            return pushEnabled_;
	        }
	
	        public final ByteString getToken()
	        {
	            return token_;
	        }
	
	        public final DeviceInfo.DeviceType getType()
	        {
	            return type_;
	        }
	
	        public final long getUpdatedAt()
	        {
	            return updatedAt_;
	        }
	
	        public final boolean hasAndroidId()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasAppId()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasClientVersion()
	        {
	            boolean flag;
	            if((0x400 & bitField0_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasCreatedAt()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEnabled()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMarkedForDeletionAt()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPhoneNumber()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPushEnabled()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasToken()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUpdatedAt()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((DeviceInfo)generatedmessagelite);
	        }
	
	        public final DeviceInfo.Builder mergeFrom(DeviceInfo deviceinfo)
	        {
	            if(deviceinfo == DeviceInfo.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(deviceinfo.hasType())
	                setType(deviceinfo.getType());
	            if(deviceinfo.hasEnabled())
	                setEnabled(deviceinfo.getEnabled());
	            if(deviceinfo.hasPushEnabled())
	                setPushEnabled(deviceinfo.getPushEnabled());
	            if(deviceinfo.hasToken())
	                setToken(deviceinfo.getToken());
	            if(deviceinfo.hasPhoneNumber())
	                setPhoneNumber(deviceinfo.getPhoneNumber());
	            if(deviceinfo.hasCreatedAt())
	                setCreatedAt(deviceinfo.getCreatedAt());
	            if(deviceinfo.hasUpdatedAt())
	                setUpdatedAt(deviceinfo.getUpdatedAt());
	            if(deviceinfo.hasMarkedForDeletionAt())
	                setMarkedForDeletionAt(deviceinfo.getMarkedForDeletionAt());
	            if(deviceinfo.hasAppId())
	                setAppId(deviceinfo.getAppId());
	            if(deviceinfo.hasAndroidId())
	                setAndroidId(deviceinfo.getAndroidId());
	            if(deviceinfo.hasClientVersion())
	            {
	                Version.ClientVersion clientversion = deviceinfo.getClientVersion();
	                if((0x400 & bitField0_) == 1024 && clientVersion_ != Version.ClientVersion.getDefaultInstance())
	                    clientVersion_ = Version.ClientVersion.newBuilder(clientVersion_).mergeFrom(clientversion).buildPartial();
	                else
	                    clientVersion_ = clientversion;
	                bitField0_ = 0x400 | bitField0_;
	            }
	            return this;
	        }
	
	        public final DeviceInfo.Builder setAndroidId(long l)
	        {
	            bitField0_ = 0x200 | bitField0_;
	            androidId_ = l;
	            return this;
	        }
	
	        public final DeviceInfo.Builder setAppId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x100 | bitField0_;
	                appId_ = s;
	                return this;
	            }
	        }
	
	        public final DeviceInfo.Builder setClientVersion(Version.ClientVersion.Builder builder)
	        {
	            clientVersion_ = builder.build();
	            bitField0_ = 0x400 | bitField0_;
	            return this;
	        }
	
	        public final DeviceInfo.Builder setClientVersion(Version.ClientVersion clientversion)
	        {
	            if(clientversion == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                clientVersion_ = clientversion;
	                bitField0_ = 0x400 | bitField0_;
	                return this;
	            }
	        }
	
	        public final DeviceInfo.Builder setCreatedAt(long l)
	        {
	            bitField0_ = 0x20 | bitField0_;
	            createdAt_ = l;
	            return this;
	        }
	
	        public final DeviceInfo.Builder setEnabled(boolean flag)
	        {
	            bitField0_ = 2 | bitField0_;
	            enabled_ = flag;
	            return this;
	        }
	
	        public final DeviceInfo.Builder setMarkedForDeletionAt(long l)
	        {
	            bitField0_ = 0x80 | bitField0_;
	            markedForDeletionAt_ = l;
	            return this;
	        }
	
	        public final DeviceInfo.Builder setPhoneNumber(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                phoneNumber_ = s;
	                return this;
	            }
	        }
	
	        public final DeviceInfo.Builder setPushEnabled(boolean flag)
	        {
	            bitField0_ = 4 | bitField0_;
	            pushEnabled_ = flag;
	            return this;
	        }
	
	        public final DeviceInfo.Builder setToken(ByteString bytestring)
	        {
	            if(bytestring == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                token_ = bytestring;
	                return this;
	            }
	        }
	
	        public final DeviceInfo.Builder setType(DeviceInfo.DeviceType devicetype)
	        {
	            if(devicetype == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = devicetype;
	                return this;
	            }
	        }
	
	        public final DeviceInfo.Builder setUpdatedAt(long l)
	        {
	            bitField0_ = 0x40 | bitField0_;
	            updatedAt_ = l;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									UserInfoResponse
	//==================================================================================================
	public static interface UserInfoResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract SetAclsRequest.Acl getAcl();
	
	    public abstract DeviceInfo getDevice(int i);
	
	    public abstract int getDeviceCount();
	
	    public abstract List getDeviceList();
	
	    public abstract Data.Participant getParticipant();
	
	    public abstract Data.ResponseStatus getStatus();
	
	    public abstract boolean getUserExists();
	
	    public abstract boolean hasAcl();
	
	    public abstract boolean hasParticipant();
	
	    public abstract boolean hasStatus();
	
	    public abstract boolean hasUserExists();
	}
	
	public static final class UserInfoResponse extends GeneratedMessageLite implements UserInfoResponseOrBuilder {
	
		private static final UserInfoResponse defaultInstance;
	    private SetAclsRequest.Acl acl_;
	    private int bitField0_;
	    private List device_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.Participant participant_;
	    private Data.ResponseStatus status_;
	    private boolean userExists_;

	    static 
	    {
	        UserInfoResponse userinforesponse = new UserInfoResponse();
	        defaultInstance = userinforesponse;
	        userinforesponse.status_ = Data.ResponseStatus.OK;
	        userinforesponse.participant_ = Data.Participant.getDefaultInstance();
	        userinforesponse.acl_ = SetAclsRequest.Acl.EVERYONE;
	        userinforesponse.userExists_ = false;
	        userinforesponse.device_ = Collections.emptyList();
	    }

	    private UserInfoResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private UserInfoResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static UserInfoResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(UserInfoResponse userinforesponse)
	    {
	        return new Builder().mergeFrom(userinforesponse);
	    }
	
	    public final SetAclsRequest.Acl getAcl()
	    {
	        return acl_;
	    }
	
	    public final UserInfoResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final DeviceInfo getDevice(int i)
	    {
	        return (DeviceInfo)device_.get(i);
	    }
	
	    public final int getDeviceCount()
	    {
	        return device_.size();
	    }
	
	    public final List getDeviceList()
	    {
	        return device_;
	    }
	
	    public final DeviceInfoOrBuilder getDeviceOrBuilder(int i)
	    {
	        return (DeviceInfoOrBuilder)device_.get(i);
	    }
	
	    public final List getDeviceOrBuilderList()
	    {
	        return device_;
	    }
	
	    public final Data.Participant getParticipant()
	    {
	        return participant_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 2 & bitField0_;
	            int k = 0;
	            if(j == 2)
	                k = 0 + CodedOutputStream.computeMessageSize(1, participant_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeEnumSize(2, acl_.getNumber());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBoolSize(3, userExists_);
	            for(int l = 0; l < device_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(4, (MessageLite)device_.get(l));
	
	            if((1 & bitField0_) == 1)
	                k += CodedOutputStream.computeEnumSize(5, status_.getNumber());
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.ResponseStatus getStatus()
	    {
	        return status_;
	    }
	
	    public final boolean getUserExists()
	    {
	        return userExists_;
	    }
	
	    public final boolean hasAcl()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasParticipant()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStatus()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUserExists()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(1, participant_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeEnum(2, acl_.getNumber());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBool(3, userExists_);
	        for(int i = 0; i < device_.size(); i++)
	            codedoutputstream.writeMessage(4, (MessageLite)device_.get(i));
	
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(5, status_.getNumber());
	    }
	    
	    //======================================================================
	    //						Builder
	    //======================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements UserInfoResponseOrBuilder {
	
	    	private SetAclsRequest.Acl acl_;
	        private int bitField0_;
	        private List device_;
	        private Data.Participant participant_;
	        private Data.ResponseStatus status_;
	        private boolean userExists_;


	        private Builder()
	        {
	            status_ = Data.ResponseStatus.OK;
	            participant_ = Data.Participant.getDefaultInstance();
	            acl_ = SetAclsRequest.Acl.EVERYONE;
	            device_ = Collections.emptyList();
	        }
	        
	        public UserInfoResponse.Builder clone()
	        {
	            return (new UserInfoResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureDeviceIsMutable()
	        {
	            if((0x10 & bitField0_) != 16)
	            {
	                device_ = new ArrayList(device_);
	                bitField0_ = 0x10 | bitField0_;
	            }
	        }
	
	        public UserInfoResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    Data.Participant.Builder builder1 = Data.Participant.newBuilder();
	                    if(hasParticipant())
	                        builder1.mergeFrom(getParticipant());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setParticipant(builder1.buildPartial());
	                    break;
	
	                case 16: // '\020'
	                    SetAclsRequest.Acl acl = SetAclsRequest.Acl.valueOf(codedinputstream.readEnum());
	                    if(acl != null)
	                    {
	                        bitField0_ = 4 | bitField0_;
	                        acl_ = acl;
	                    }
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 8 | bitField0_;
	                    userExists_ = codedinputstream.readBool();
	                    break;
	
	                case 34: // '"'
	                    DeviceInfo.Builder builder = DeviceInfo.newBuilder();
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    addDevice(builder.buildPartial());
	                    break;
	
	                case 40: // '('
	                    Data.ResponseStatus responsestatus = Data.ResponseStatus.valueOf(codedinputstream.readEnum());
	                    if(responsestatus != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        status_ = responsestatus;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final UserInfoResponse.Builder addAllDevice(Iterable iterable)
	        {
	            ensureDeviceIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, device_);
	            return this;
	        }
	
	        public final UserInfoResponse.Builder addDevice(int i, DeviceInfo.Builder builder)
	        {
	            ensureDeviceIsMutable();
	            device_.add(i, builder.build());
	            return this;
	        }
	
	        public final UserInfoResponse.Builder addDevice(int i, DeviceInfo deviceinfo)
	        {
	            if(deviceinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureDeviceIsMutable();
	                device_.add(i, deviceinfo);
	                return this;
	            }
	        }
	
	        public final UserInfoResponse.Builder addDevice(DeviceInfo.Builder builder)
	        {
	            ensureDeviceIsMutable();
	            device_.add(builder.build());
	            return this;
	        }
	
	        public final UserInfoResponse.Builder addDevice(DeviceInfo deviceinfo)
	        {
	            if(deviceinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureDeviceIsMutable();
	                device_.add(deviceinfo);
	                return this;
	            }
	        }
	
	        public final UserInfoResponse build()
	        {
	            UserInfoResponse userinforesponse = buildPartial();
	            if(!userinforesponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("userinforesponse"));
	            else
	                return userinforesponse;
	        }
	
	        public final UserInfoResponse buildPartial()
	        {
	            UserInfoResponse userinforesponse = new UserInfoResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            userinforesponse.status_ = status_;
	            if((i & 2) == 2)
	                k |= 2;
	            userinforesponse.participant_ = participant_;
	            if((i & 4) == 4)
	                k |= 4;
	            userinforesponse.acl_ = acl_;
	            if((i & 8) == 8)
	                k |= 8;
	            userinforesponse.userExists_ = userExists_;
	            if((0x10 & bitField0_) == 16)
	            {
	                device_ = Collections.unmodifiableList(device_);
	                bitField0_ = 0xffffffef & bitField0_;
	            }
	            userinforesponse.device_ = device_;
	            userinforesponse.bitField0_ = k;
	            return userinforesponse;
	        }
	
	        public final UserInfoResponse.Builder clear()
	        {
	            super.clear();
	            status_ = Data.ResponseStatus.OK;
	            bitField0_ = -2 & bitField0_;
	            participant_ = Data.Participant.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            acl_ = SetAclsRequest.Acl.EVERYONE;
	            bitField0_ = -5 & bitField0_;
	            userExists_ = false;
	            bitField0_ = -9 & bitField0_;
	            device_ = Collections.emptyList();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final UserInfoResponse.Builder clearAcl()
	        {
	            bitField0_ = -5 & bitField0_;
	            acl_ = SetAclsRequest.Acl.EVERYONE;
	            return this;
	        }
	
	        public final UserInfoResponse.Builder clearDevice()
	        {
	            device_ = Collections.emptyList();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final UserInfoResponse.Builder clearParticipant()
	        {
	            participant_ = Data.Participant.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final UserInfoResponse.Builder clearStatus()
	        {
	            bitField0_ = -2 & bitField0_;
	            status_ = Data.ResponseStatus.OK;
	            return this;
	        }
	
	        public final UserInfoResponse.Builder clearUserExists()
	        {
	            bitField0_ = -9 & bitField0_;
	            userExists_ = false;
	            return this;
	        }
	
	        public final SetAclsRequest.Acl getAcl()
	        {
	            return acl_;
	        }
	
	        public final UserInfoResponse getDefaultInstanceForType()
	        {
	            return UserInfoResponse.getDefaultInstance();
	        }
	
	        public final DeviceInfo getDevice(int i)
	        {
	            return (DeviceInfo)device_.get(i);
	        }
	
	        public final int getDeviceCount()
	        {
	            return device_.size();
	        }
	
	        public final List getDeviceList()
	        {
	            return Collections.unmodifiableList(device_);
	        }
	
	        public final Data.Participant getParticipant()
	        {
	            return participant_;
	        }
	
	        public final Data.ResponseStatus getStatus()
	        {
	            return status_;
	        }
	
	        public final boolean getUserExists()
	        {
	            return userExists_;
	        }
	
	        public final boolean hasAcl()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasParticipant()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStatus()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserExists()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((UserInfoResponse)generatedmessagelite);
	        }
	
	        public final UserInfoResponse.Builder mergeFrom(UserInfoResponse userinforesponse)
	        {
	            if(userinforesponse == UserInfoResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(userinforesponse.hasStatus())
	                setStatus(userinforesponse.getStatus());
	            if(userinforesponse.hasParticipant())
	            {
	                Data.Participant participant = userinforesponse.getParticipant();
	                if((2 & bitField0_) == 2 && participant_ != Data.Participant.getDefaultInstance())
	                    participant_ = Data.Participant.newBuilder(participant_).mergeFrom(participant).buildPartial();
	                else
	                    participant_ = participant;
	                bitField0_ = 2 | bitField0_;
	            }
	            if(userinforesponse.hasAcl())
	                setAcl(userinforesponse.getAcl());
	            if(userinforesponse.hasUserExists())
	                setUserExists(userinforesponse.getUserExists());
	            if(!userinforesponse.device_.isEmpty())
	                if(device_.isEmpty())
	                {
	                    device_ = userinforesponse.device_;
	                    bitField0_ = 0xffffffef & bitField0_;
	                } else
	                {
	                    ensureDeviceIsMutable();
	                    device_.addAll(userinforesponse.device_);
	                }
	            return this;
	        }
	
	        public final UserInfoResponse.Builder setAcl(SetAclsRequest.Acl acl)
	        {
	            if(acl == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                acl_ = acl;
	                return this;
	            }
	        }
	
	        public final UserInfoResponse.Builder setDevice(int i, DeviceInfo.Builder builder)
	        {
	            ensureDeviceIsMutable();
	            device_.set(i, builder.build());
	            return this;
	        }
	
	        public final UserInfoResponse.Builder setDevice(int i, DeviceInfo deviceinfo)
	        {
	            if(deviceinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureDeviceIsMutable();
	                device_.set(i, deviceinfo);
	                return this;
	            }
	        }
	
	        public final UserInfoResponse.Builder setParticipant(Data.Participant.Builder builder)
	        {
	            participant_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final UserInfoResponse.Builder setParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                participant_ = participant;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	
	        public final UserInfoResponse.Builder setStatus(Data.ResponseStatus responsestatus)
	        {
	            if(responsestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                status_ = responsestatus;
	                return this;
	            }
	        }
	
	        public final UserInfoResponse.Builder setUserExists(boolean flag)
	        {
	            bitField0_ = 8 | bitField0_;
	            userExists_ = flag;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									Error
	//==================================================================================================
	public static interface ErrorOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getDetail();
	
	    public abstract BunchCommand getOriginalCommand();
	
	    public abstract boolean hasDetail();
	
	    public abstract boolean hasOriginalCommand();
	}
	
	public static final class Error extends GeneratedMessageLite implements ErrorOrBuilder {
	
		private static final Error defaultInstance;
	    private int bitField0_;
	    private Object detail_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private BunchCommand originalCommand_;

	    static 
	    {
	        Error error = new Error();
	        defaultInstance = error;
	        error.originalCommand_ = BunchCommand.getDefaultInstance();
	        error.detail_ = "";
	    }

	    private Error()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    Error(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static Error getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getDetailBytes()
	    {
	        Object obj = detail_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            detail_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(Error error)
	    {
	        return new Builder().mergeFrom(error);
	    }
	
	    public final Error getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getDetail()
	    {
	        Object obj = detail_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                detail_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final BunchCommand getOriginalCommand()
	    {
	        return originalCommand_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeMessageSize(1, originalCommand_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getDetailBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final boolean hasDetail()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasOriginalCommand()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeMessage(1, originalCommand_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getDetailBytes());
	    }
	    
	    //==============================================================
	    //						Builder
	    //==============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ErrorOrBuilder {
	
	    	private int bitField0_;
	        private Object detail_;
	        private BunchCommand originalCommand_;

	        private Builder()
	        {
	            originalCommand_ = BunchCommand.getDefaultInstance();
	            detail_ = "";
	        }
	        
	    	public Builder clone()
	        {
	            return (new Error.Builder()).mergeFrom(buildPartial());
	        }
	
	    	public Error.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    BunchCommand.Builder builder = BunchCommand.newBuilder();
	                    if(hasOriginalCommand())
	                        builder.mergeFrom(getOriginalCommand());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setOriginalCommand(builder.buildPartial());
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    detail_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final Error build()
	        {
	            Error error = buildPartial();
	            if(!error.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("error"));
	            else
	                return error;
	        }
	
	        public final Error buildPartial()
	        {
	            Error error = new Error(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            error.originalCommand_ = originalCommand_;
	            if((i & 2) == 2)
	                k |= 2;
	            error.detail_ = detail_;
	            error.bitField0_ = k;
	            return error;
	        }
	
	        public final Error.Builder clear()
	        {
	            super.clear();
	            originalCommand_ = BunchCommand.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            detail_ = "";
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final Error.Builder clearDetail()
	        {
	            bitField0_ = -3 & bitField0_;
	            detail_ = Error.getDefaultInstance().getDetail();
	            return this;
	        }
	
	        public final Error.Builder clearOriginalCommand()
	        {
	            originalCommand_ = BunchCommand.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final Error getDefaultInstanceForType()
	        {
	            return Error.getDefaultInstance();
	        }
	
	        public final String getDetail()
	        {
	            Object obj = detail_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                detail_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final BunchCommand getOriginalCommand()
	        {
	            return originalCommand_;
	        }
	
	        public final boolean hasDetail()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasOriginalCommand()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((Error)generatedmessagelite);
	        }
	
	        public final Error.Builder mergeFrom(Error error)
	        {
	            if(error == Error.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(error.hasOriginalCommand())
	            {
	                BunchCommand bunchcommand = error.getOriginalCommand();
	                if((1 & bitField0_) == 1 && originalCommand_ != BunchCommand.getDefaultInstance())
	                    originalCommand_ = BunchCommand.newBuilder(originalCommand_).mergeFrom(bunchcommand).buildPartial();
	                else
	                    originalCommand_ = bunchcommand;
	                bitField0_ = 1 | bitField0_;
	            }
	            if(error.hasDetail())
	                setDetail(error.getDetail());
	            return this;
	        }
	
	        public final Error.Builder setDetail(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                detail_ = s;
	                return this;
	            }
	        }
	
	        public final Error.Builder setOriginalCommand(BunchCommand.Builder builder)
	        {
	            originalCommand_ = builder.build();
	            bitField0_ = 1 | bitField0_;
	            return this;
	        }
	
	        public final Error.Builder setOriginalCommand(BunchCommand bunchcommand)
	        {
	            if(bunchcommand == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                originalCommand_ = bunchcommand;
	                bitField0_ = 1 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									ConversationJoinRequest
	//==================================================================================================
	public static interface ConversationJoinRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getJoinCode();
	
	    public abstract Data.Participant getParticipant();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasJoinCode();
	
	    public abstract boolean hasParticipant();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class ConversationJoinRequest extends GeneratedMessageLite implements ConversationJoinRequestOrBuilder {
	
		private static final ConversationJoinRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private Object joinCode_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.Participant participant_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        ConversationJoinRequest conversationjoinrequest = new ConversationJoinRequest();
	        defaultInstance = conversationjoinrequest;
	        conversationjoinrequest.joinCode_ = "";
	        conversationjoinrequest.conversationId_ = "";
	        conversationjoinrequest.participant_ = Data.Participant.getDefaultInstance();
	        conversationjoinrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private ConversationJoinRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationJoinRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ConversationJoinRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getJoinCodeBytes()
	    {
	        Object obj = joinCode_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            joinCode_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationJoinRequest conversationjoinrequest)
	    {
	        return new Builder().mergeFrom(conversationjoinrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ConversationJoinRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getJoinCode()
	    {
	        Object obj = joinCode_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                joinCode_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Data.Participant getParticipant()
	    {
	        return participant_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getJoinCodeBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, participant_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(4, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasJoinCode()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasParticipant()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getJoinCodeBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, participant_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(4, stubbyInfo_);
	    }
	    
	    //=================================================================
	    //						Builder
	    //=================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationJoinRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object joinCode_;
	        private Data.Participant participant_;
	        private Data.StubbyInfo stubbyInfo_;


	        private Builder()
	        {
	            joinCode_ = "";
	            conversationId_ = "";
	            participant_ = Data.Participant.getDefaultInstance();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public Builder clone()
	        {
	            return (new ConversationJoinRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ConversationJoinRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    joinCode_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Data.Participant.Builder builder1 = Data.Participant.newBuilder();
	                    if(hasParticipant())
	                        builder1.mergeFrom(getParticipant());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setParticipant(builder1.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationJoinRequest build()
	        {
	            ConversationJoinRequest conversationjoinrequest = buildPartial();
	            if(!conversationjoinrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationjoinrequest"));
	            else
	                return conversationjoinrequest;
	        }
	
	        public final ConversationJoinRequest buildPartial()
	        {
	            ConversationJoinRequest conversationjoinrequest = new ConversationJoinRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationjoinrequest.joinCode_ = joinCode_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationjoinrequest.conversationId_ = conversationId_;
	            if((i & 4) == 4)
	                k |= 4;
	            conversationjoinrequest.participant_ = participant_;
	            if((i & 8) == 8)
	                k |= 8;
	            conversationjoinrequest.stubbyInfo_ = stubbyInfo_;
	            conversationjoinrequest.bitField0_ = k;
	            return conversationjoinrequest;
	        }
	
	        public final ConversationJoinRequest.Builder clear()
	        {
	            super.clear();
	            joinCode_ = "";
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            participant_ = Data.Participant.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ConversationJoinRequest.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = ConversationJoinRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ConversationJoinRequest.Builder clearJoinCode()
	        {
	            bitField0_ = -2 & bitField0_;
	            joinCode_ = ConversationJoinRequest.getDefaultInstance().getJoinCode();
	            return this;
	        }
	
	        public final ConversationJoinRequest.Builder clearParticipant()
	        {
	            participant_ = Data.Participant.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ConversationJoinRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ConversationJoinRequest getDefaultInstanceForType()
	        {
	            return ConversationJoinRequest.getDefaultInstance();
	        }
	
	        public final String getJoinCode()
	        {
	            Object obj = joinCode_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                joinCode_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.Participant getParticipant()
	        {
	            return participant_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasJoinCode()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasParticipant()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationJoinRequest)generatedmessagelite);
	        }
	
	        public final ConversationJoinRequest.Builder mergeFrom(ConversationJoinRequest conversationjoinrequest)
	        {
	            if(conversationjoinrequest == ConversationJoinRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(conversationjoinrequest.hasJoinCode())
	                setJoinCode(conversationjoinrequest.getJoinCode());
	            if(conversationjoinrequest.hasConversationId())
	                setConversationId(conversationjoinrequest.getConversationId());
	            if(conversationjoinrequest.hasParticipant())
	            {
	                Data.Participant participant = conversationjoinrequest.getParticipant();
	                if((4 & bitField0_) == 4 && participant_ != Data.Participant.getDefaultInstance())
	                    participant_ = Data.Participant.newBuilder(participant_).mergeFrom(participant).buildPartial();
	                else
	                    participant_ = participant;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(conversationjoinrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = conversationjoinrequest.getStubbyInfo();
	                if((8 & bitField0_) == 8 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	            }
	            return this;
	        }
	
	        public final ConversationJoinRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationJoinRequest.Builder setJoinCode(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                joinCode_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationJoinRequest.Builder setParticipant(Data.Participant.Builder builder)
	        {
	            participant_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final ConversationJoinRequest.Builder setParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                participant_ = participant;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ConversationJoinRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final ConversationJoinRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									ConversationListRequest
	//==================================================================================================
	public static interface ConversationListRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getSenderId();
	
	    public abstract long getTimestamp();
	
	    public abstract ConversationListRequest.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasTimestamp();
	
	    public abstract boolean hasType();
	}
	
	public static final class ConversationListRequest extends GeneratedMessageLite implements ConversationListRequestOrBuilder {
	
		private static final ConversationListRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object senderId_;
	    private long timestamp_;
	    private Type type_;

	    static 
	    {
	        ConversationListRequest conversationlistrequest = new ConversationListRequest();
	        defaultInstance = conversationlistrequest;
	        conversationlistrequest.timestamp_ = 0L;
	        conversationlistrequest.senderId_ = "";
	        conversationlistrequest.type_ = Type.ID;
	        conversationlistrequest.conversationId_ = "";
	    }

	    private ConversationListRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationListRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ConversationListRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationListRequest conversationlistrequest)
	    {
	        return new Builder().mergeFrom(conversationlistrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ConversationListRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeInt64Size(1, timestamp_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeEnumSize(3, type_.getNumber());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getConversationIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final Type getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeInt64(1, timestamp_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getSenderIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeEnum(3, type_.getNumber());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getConversationIdBytes());
	    }
	    
	    //=========================================================
	    //					Type
	    //=========================================================
	    public static enum Type implements com.google.protobuf.Internal.EnumLite {
	    	ID(1),
	    	SINCE(2);
	    	
	    	private final int value;
	    	
	    	private Type(int value) {
	    		this.value = value;
	    	}
	    	
	    	@Override
			public int getNumber() {
				return value;
			}


			public static Type valueOf(int value) {
	    		for(Type t: Type.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //=========================================================
	    //					Builder
	    //=========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationListRequestOrBuilder {
	
			private int bitField0_;
	        private Object conversationId_;
	        private Object senderId_;
	        private long timestamp_;
	        private ConversationListRequest.Type type_;

	        private Builder()
	        {
	            senderId_ = "";
	            type_ = ConversationListRequest.Type.ID;
	            conversationId_ = "";
	        }
	        
	        public Builder clone()
	        {
	            return (new ConversationListRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ConversationListRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    bitField0_ = 1 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    ConversationListRequest.Type type = ConversationListRequest.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 4 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	        
	        @Override
			public GeneratedMessageLite getDefaultInstanceForType() {
				return null;
			}
	
	        public final ConversationListRequest build()
	        {
	            ConversationListRequest conversationlistrequest = buildPartial();
	            if(!conversationlistrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationlistrequest"));
	            else
	                return conversationlistrequest;
	        }
	
	        public final ConversationListRequest buildPartial()
	        {
	            ConversationListRequest conversationlistrequest = new ConversationListRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationlistrequest.timestamp_ = timestamp_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationlistrequest.senderId_ = senderId_;
	            if((i & 4) == 4)
	                k |= 4;
	            conversationlistrequest.type_ = type_;
	            if((i & 8) == 8)
	                k |= 8;
	            conversationlistrequest.conversationId_ = conversationId_;
	            conversationlistrequest.bitField0_ = k;
	            return conversationlistrequest;
	        }
	
	        public final ConversationListRequest.Builder clear()
	        {
	            super.clear();
	            timestamp_ = 0L;
	            bitField0_ = -2 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -3 & bitField0_;
	            type_ = ConversationListRequest.Type.ID;
	            bitField0_ = -5 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ConversationListRequest.Builder clearConversationId()
	        {
	            bitField0_ = -9 & bitField0_;
	            conversationId_ = ConversationListRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ConversationListRequest.Builder clearSenderId()
	        {
	            bitField0_ = -3 & bitField0_;
	            senderId_ = ConversationListRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final ConversationListRequest.Builder clearTimestamp()
	        {
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final ConversationListRequest.Builder clearType()
	        {
	            bitField0_ = -5 & bitField0_;
	            type_ = ConversationListRequest.Type.ID;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final ConversationListRequest.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationListRequest)generatedmessagelite);
	        }
	
	        public final ConversationListRequest.Builder mergeFrom(ConversationListRequest conversationlistrequest)
	        {
	            if(conversationlistrequest == ConversationListRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(conversationlistrequest.hasTimestamp())
	                setTimestamp(conversationlistrequest.getTimestamp());
	            if(conversationlistrequest.hasSenderId())
	                setSenderId(conversationlistrequest.getSenderId());
	            if(conversationlistrequest.hasType())
	                setType(conversationlistrequest.getType());
	            if(conversationlistrequest.hasConversationId())
	                setConversationId(conversationlistrequest.getConversationId());
	            return this;
	        }
	
	        public final ConversationListRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationListRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationListRequest.Builder setTimestamp(long l)
	        {
	            bitField0_ = 1 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	
	        public final ConversationListRequest.Builder setType(ConversationListRequest.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									ConversationPreferenceRequest
	//==================================================================================================
	public static interface ConversationPreferenceRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getSenderId();
	
	    public abstract ConversationPreferenceRequest.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasType();
	}
	
	public static final class ConversationPreferenceRequest extends GeneratedMessageLite implements ConversationPreferenceRequestOrBuilder {
	
		private static final ConversationPreferenceRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object senderId_;
	    private Type type_;

	    static 
	    {
	        ConversationPreferenceRequest conversationpreferencerequest = new ConversationPreferenceRequest();
	        defaultInstance = conversationpreferencerequest;
	        conversationpreferencerequest.type_ = Type.MUTE;
	        conversationpreferencerequest.senderId_ = "";
	        conversationpreferencerequest.conversationId_ = "";
	    }

	    private ConversationPreferenceRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationPreferenceRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ConversationPreferenceRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationPreferenceRequest conversationpreferencerequest)
	    {
	        return new Builder().mergeFrom(conversationpreferencerequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ConversationPreferenceRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getConversationIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Type getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getSenderIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getConversationIdBytes());
	    }
	    
	    //==========================================================
	    //					Type
	    //==========================================================
	    public static enum Type implements com.google.protobuf.Internal.EnumLite {
	    	
	    	MUTE(1),
	    	UNMUTE(2),
	    	HIDE(3),
	    	SHOW(4);
	    	
	    	private int value;
	    	
	    	private Type(int value) {
	    		this.value = value;
	    	}
	    	
	    	@Override
			public int getNumber() {
				return value;
			}

			public static Type valueOf(int value) {
	    		for(Type t : Type.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //==========================================================
	    //					Builder
	    //==========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationPreferenceRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object senderId_;
	        private ConversationPreferenceRequest.Type type_;

	        private Builder()
	        {
	            type_ = ConversationPreferenceRequest.Type.MUTE;
	            senderId_ = "";
	            conversationId_ = "";
	        }
	        
	        public ConversationPreferenceRequest.Builder clone()
	        {
	            return (new ConversationPreferenceRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ConversationPreferenceRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    ConversationPreferenceRequest.Type type = ConversationPreferenceRequest.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationPreferenceRequest build()
	        {
	            ConversationPreferenceRequest conversationpreferencerequest = buildPartial();
	            if(!conversationpreferencerequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationpreferencerequest"));
	            else
	                return conversationpreferencerequest;
	        }
	
	        public final ConversationPreferenceRequest buildPartial()
	        {
	            ConversationPreferenceRequest conversationpreferencerequest = new ConversationPreferenceRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationpreferencerequest.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationpreferencerequest.senderId_ = senderId_;
	            if((i & 4) == 4)
	                k |= 4;
	            conversationpreferencerequest.conversationId_ = conversationId_;
	            conversationpreferencerequest.bitField0_ = k;
	            return conversationpreferencerequest;
	        }
	
	        public final ConversationPreferenceRequest.Builder clear()
	        {
	            super.clear();
	            type_ = ConversationPreferenceRequest.Type.MUTE;
	            bitField0_ = -2 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ConversationPreferenceRequest.Builder clearConversationId()
	        {
	            bitField0_ = -5 & bitField0_;
	            conversationId_ = ConversationPreferenceRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ConversationPreferenceRequest.Builder clearSenderId()
	        {
	            bitField0_ = -3 & bitField0_;
	            senderId_ = ConversationPreferenceRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final ConversationPreferenceRequest.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = ConversationPreferenceRequest.Type.MUTE;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ConversationPreferenceRequest getDefaultInstanceForType()
	        {
	            return ConversationPreferenceRequest.getDefaultInstance();
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ConversationPreferenceRequest.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationPreferenceRequest)generatedmessagelite);
	        }
	
	        public final ConversationPreferenceRequest.Builder mergeFrom(ConversationPreferenceRequest conversationpreferencerequest)
	        {
	            if(conversationpreferencerequest == ConversationPreferenceRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(conversationpreferencerequest.hasType())
	                setType(conversationpreferencerequest.getType());
	            if(conversationpreferencerequest.hasSenderId())
	                setSenderId(conversationpreferencerequest.getSenderId());
	            if(conversationpreferencerequest.hasConversationId())
	                setConversationId(conversationpreferencerequest.getConversationId());
	            return this;
	        }
	
	        public final ConversationPreferenceRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationPreferenceRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationPreferenceRequest.Builder setType(ConversationPreferenceRequest.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									ConversationRenameRequest
	//==================================================================================================
	public static interface ConversationRenameRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getNewDisplayName();
	
	    public abstract String getRecipientId(int i);
	
	    public abstract int getRecipientIdCount();
	
	    public abstract List getRecipientIdList();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasNewDisplayName();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class ConversationRenameRequest extends GeneratedMessageLite implements ConversationRenameRequestOrBuilder {
	
		private static final ConversationRenameRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object newDisplayName_;
	    private LazyStringList recipientId_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        ConversationRenameRequest conversationrenamerequest = new ConversationRenameRequest();
	        defaultInstance = conversationrenamerequest;
	        conversationrenamerequest.conversationId_ = "";
	        conversationrenamerequest.newDisplayName_ = "";
	        conversationrenamerequest.recipientId_ = LazyStringArrayList.EMPTY;
	        conversationrenamerequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private ConversationRenameRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationRenameRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ConversationRenameRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getNewDisplayNameBytes()
	    {
	        Object obj = newDisplayName_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            newDisplayName_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationRenameRequest conversationrenamerequest)
	    {
	        return new Builder().mergeFrom(conversationrenamerequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ConversationRenameRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getNewDisplayName()
	    {
	        Object obj = newDisplayName_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                newDisplayName_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getRecipientId(int i)
	    {
	        return (String)recipientId_.get(i);
	    }
	
	    public final int getRecipientIdCount()
	    {
	        return recipientId_.size();
	    }
	
	    public final List getRecipientIdList()
	    {
	        return recipientId_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int k1;
	        if(i != -1)
	        {
	            k1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getNewDisplayNameBytes());
	            int l = 0;
	            for(int i1 = 0; i1 < recipientId_.size(); i1++)
	                l += CodedOutputStream.computeBytesSizeNoTag(recipientId_.getByteString(i1));
	
	            int j1 = k + l + 1 * getRecipientIdList().size();
	            if((4 & bitField0_) == 4)
	                j1 += CodedOutputStream.computeMessageSize(4, stubbyInfo_);
	            memoizedSerializedSize = j1;
	            k1 = j1;
	        }
	        return k1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasNewDisplayName()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getNewDisplayNameBytes());
	        for(int i = 0; i < recipientId_.size(); i++)
	            codedoutputstream.writeBytes(3, recipientId_.getByteString(i));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(4, stubbyInfo_);
	    }
	    
	    //===========================================================
	    //						Builder
	    //===========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationRenameRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object newDisplayName_;
	        private LazyStringList recipientId_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            conversationId_ = "";
	            newDisplayName_ = "";
	            recipientId_ = LazyStringArrayList.EMPTY;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public ConversationRenameRequest.Builder clone()
	        {
	            return (new ConversationRenameRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureRecipientIdIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                recipientId_ = new LazyStringArrayList(recipientId_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public ConversationRenameRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    newDisplayName_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    ensureRecipientIdIsMutable();
	                    recipientId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 34: // '"'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationRenameRequest.Builder addAllRecipientId(Iterable iterable)
	        {
	            ensureRecipientIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, recipientId_);
	            return this;
	        }
	
	        public final ConversationRenameRequest.Builder addRecipientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.add(s);
	                return this;
	            }
	        }
	
	        public final ConversationRenameRequest build()
	        {
	            ConversationRenameRequest conversationrenamerequest = buildPartial();
	            if(!conversationrenamerequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationrenamerequest"));
	            else
	                return conversationrenamerequest;
	        }
	
	        public final ConversationRenameRequest buildPartial()
	        {
	            ConversationRenameRequest conversationrenamerequest = new ConversationRenameRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationrenamerequest.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            conversationrenamerequest.newDisplayName_ = newDisplayName_;
	            if((4 & bitField0_) == 4)
	            {
	                recipientId_ = new UnmodifiableLazyStringList(recipientId_);
	                bitField0_ = -5 & bitField0_;
	            }
	            conversationrenamerequest.recipientId_ = recipientId_;
	            if((i & 8) == 8)
	                k |= 4;
	            conversationrenamerequest.stubbyInfo_ = stubbyInfo_;
	            conversationrenamerequest.bitField0_ = k;
	            return conversationrenamerequest;
	        }
	
	        public final ConversationRenameRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            newDisplayName_ = "";
	            bitField0_ = -3 & bitField0_;
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -5 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ConversationRenameRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = ConversationRenameRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ConversationRenameRequest.Builder clearNewDisplayName()
	        {
	            bitField0_ = -3 & bitField0_;
	            newDisplayName_ = ConversationRenameRequest.getDefaultInstance().getNewDisplayName();
	            return this;
	        }
	
	        public final ConversationRenameRequest.Builder clearRecipientId()
	        {
	            recipientId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ConversationRenameRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ConversationRenameRequest getDefaultInstanceForType()
	        {
	            return ConversationRenameRequest.getDefaultInstance();
	        }
	
	        public final String getNewDisplayName()
	        {
	            Object obj = newDisplayName_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                newDisplayName_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getRecipientId(int i)
	        {
	            return (String)recipientId_.get(i);
	        }
	
	        public final int getRecipientIdCount()
	        {
	            return recipientId_.size();
	        }
	
	        public final List getRecipientIdList()
	        {
	            return Collections.unmodifiableList(recipientId_);
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasNewDisplayName()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationRenameRequest)generatedmessagelite);
	        }
	
	        public final ConversationRenameRequest.Builder mergeFrom(ConversationRenameRequest conversationrenamerequest)
	        {
	            if(conversationrenamerequest == ConversationRenameRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(conversationrenamerequest.hasConversationId())
	                setConversationId(conversationrenamerequest.getConversationId());
	            if(conversationrenamerequest.hasNewDisplayName())
	                setNewDisplayName(conversationrenamerequest.getNewDisplayName());
	            if(!conversationrenamerequest.recipientId_.isEmpty())
	                if(recipientId_.isEmpty())
	                {
	                    recipientId_ = conversationrenamerequest.recipientId_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureRecipientIdIsMutable();
	                    recipientId_.addAll(conversationrenamerequest.recipientId_);
	                }
	            if(conversationrenamerequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = conversationrenamerequest.getStubbyInfo();
	                if((8 & bitField0_) == 8 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	            }
	            return this;
	        }
	
	        public final ConversationRenameRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationRenameRequest.Builder setNewDisplayName(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                newDisplayName_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationRenameRequest.Builder setRecipientId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureRecipientIdIsMutable();
	                recipientId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final ConversationRenameRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final ConversationRenameRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									NewConversationRequest
	//==================================================================================================
	public static interface NewConversationRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract ChatMessage getChatMessage();
	
	    public abstract String getConversationClientId();
	
	    public abstract Data.ConversationMetadata getConversationMetadata();
	
	    public abstract String getDisplayName();
	
	    public abstract Data.Participant getParticipant(int i);
	
	    public abstract int getParticipantCount();
	
	    public abstract String getParticipantId(int i);
	
	    public abstract int getParticipantIdCount();
	
	    public abstract List getParticipantIdList();
	
	    public abstract List getParticipantList();
	
	    public abstract boolean getRetry();
	
	    public abstract String getSenderId();
	
	    public abstract Data.ConversationType getType();
	
	    public abstract boolean hasChatMessage();
	
	    public abstract boolean hasConversationClientId();
	
	    public abstract boolean hasConversationMetadata();
	
	    public abstract boolean hasDisplayName();
	
	    public abstract boolean hasRetry();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasType();
	}
	
	public static final class NewConversationRequest extends GeneratedMessageLite implements NewConversationRequestOrBuilder {
	
		private static final NewConversationRequest defaultInstance;
	    private int bitField0_;
	    private ChatMessage chatMessage_;
	    private Object conversationClientId_;
	    private Data.ConversationMetadata conversationMetadata_;
	    private Object displayName_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private LazyStringList participantId_;
	    private List participant_;
	    private boolean retry_;
	    private Object senderId_;
	    private Data.ConversationType type_;

	    static 
	    {
	        NewConversationRequest newconversationrequest = new NewConversationRequest();
	        defaultInstance = newconversationrequest;
	        newconversationrequest.type_ = Data.ConversationType.ONE_TO_ONE;
	        newconversationrequest.conversationClientId_ = "";
	        newconversationrequest.participantId_ = LazyStringArrayList.EMPTY;
	        newconversationrequest.senderId_ = "";
	        newconversationrequest.displayName_ = "";
	        newconversationrequest.participant_ = Collections.emptyList();
	        newconversationrequest.chatMessage_ = ChatMessage.getDefaultInstance();
	        newconversationrequest.retry_ = false;
	        newconversationrequest.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	    }

	    private NewConversationRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    NewConversationRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationClientIdBytes()
	    {
	        Object obj = conversationClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static NewConversationRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getDisplayNameBytes()
	    {
	        Object obj = displayName_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            displayName_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(NewConversationRequest newconversationrequest)
	    {
	        return new Builder().mergeFrom(newconversationrequest);
	    }
	
	    public final ChatMessage getChatMessage()
	    {
	        return chatMessage_;
	    }
	
	    public final String getConversationClientId()
	    {
	        Object obj = conversationClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Data.ConversationMetadata getConversationMetadata()
	    {
	        return conversationMetadata_;
	    }
	
	    public final NewConversationRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getDisplayName()
	    {
	        Object obj = displayName_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                displayName_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Data.Participant getParticipant(int i)
	    {
	        return (Data.Participant)participant_.get(i);
	    }
	
	    public final int getParticipantCount()
	    {
	        return participant_.size();
	    }
	
	    public final String getParticipantId(int i)
	    {
	        return (String)participantId_.get(i);
	    }
	
	    public final int getParticipantIdCount()
	    {
	        return participantId_.size();
	    }
	
	    public final List getParticipantIdList()
	    {
	        return participantId_;
	    }
	
	    public final List getParticipantList()
	    {
	        return participant_;
	    }
	
	    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int i)
	    {
	        return (Data.ParticipantOrBuilder)participant_.get(i);
	    }
	
	    public final List getParticipantOrBuilderList()
	    {
	        return participant_;
	    }
	
	    public final boolean getRetry()
	    {
	        return retry_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l1;
	        if(i != -1)
	        {
	            l1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationClientIdBytes());
	            int l = 0;
	            for(int i1 = 0; i1 < participantId_.size(); i1++)
	                l += CodedOutputStream.computeBytesSizeNoTag(participantId_.getByteString(i1));
	
	            int j1 = k + l + 1 * getParticipantIdList().size();
	            if((4 & bitField0_) == 4)
	                j1 += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
	            if((8 & bitField0_) == 8)
	                j1 += CodedOutputStream.computeBytesSize(5, getDisplayNameBytes());
	            for(int k1 = 0; k1 < participant_.size(); k1++)
	                j1 += CodedOutputStream.computeMessageSize(6, (MessageLite)participant_.get(k1));
	
	            if((0x10 & bitField0_) == 16)
	                j1 += CodedOutputStream.computeMessageSize(7, chatMessage_);
	            if((0x20 & bitField0_) == 32)
	                j1 += CodedOutputStream.computeBoolSize(8, retry_);
	            if((0x40 & bitField0_) == 64)
	                j1 += CodedOutputStream.computeMessageSize(9, conversationMetadata_);
	            memoizedSerializedSize = j1;
	            l1 = j1;
	        }
	        return l1;
	    }
	
	    public final Data.ConversationType getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasChatMessage()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationClientId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationMetadata()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasDisplayName()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRetry()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationClientIdBytes());
	        for(int i = 0; i < participantId_.size(); i++)
	            codedoutputstream.writeBytes(3, participantId_.getByteString(i));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(4, getSenderIdBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(5, getDisplayNameBytes());
	        for(int j = 0; j < participant_.size(); j++)
	            codedoutputstream.writeMessage(6, (MessageLite)participant_.get(j));
	
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(7, chatMessage_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeBool(8, retry_);
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeMessage(9, conversationMetadata_);
	    }
	    
	    //=========================================================
	    //					Builder
	    //=========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements NewConversationRequestOrBuilder {
	
	    	private int bitField0_;
	        private ChatMessage chatMessage_;
	        private Object conversationClientId_;
	        private Data.ConversationMetadata conversationMetadata_;
	        private Object displayName_;
	        private LazyStringList participantId_;
	        private List participant_;
	        private boolean retry_;
	        private Object senderId_;
	        private Data.ConversationType type_;

	        private Builder()
	        {
	            type_ = Data.ConversationType.ONE_TO_ONE;
	            conversationClientId_ = "";
	            participantId_ = LazyStringArrayList.EMPTY;
	            senderId_ = "";
	            displayName_ = "";
	            participant_ = Collections.emptyList();
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	        }
	        
	        public NewConversationRequest.Builder clone()
	        {
	            return (new NewConversationRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureParticipantIdIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                participantId_ = new LazyStringArrayList(participantId_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        private void ensureParticipantIsMutable()
	        {
	            if((0x20 & bitField0_) != 32)
	            {
	                participant_ = new ArrayList(participant_);
	                bitField0_ = 0x20 | bitField0_;
	            }
	        }
	
	        public NewConversationRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Data.ConversationType conversationtype = Data.ConversationType.valueOf(codedinputstream.readEnum());
	                    if(conversationtype != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = conversationtype;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    ensureParticipantIdIsMutable();
	                    participantId_.add(codedinputstream.readBytes());
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 0x10 | bitField0_;
	                    displayName_ = codedinputstream.readBytes();
	                    break;
	
	                case 50: // '2'
	                    Data.Participant.Builder builder2 = Data.Participant.newBuilder();
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    addParticipant(builder2.buildPartial());
	                    break;
	
	                case 58: // ':'
	                    ChatMessage.Builder builder1 = ChatMessage.newBuilder();
	                    if(hasChatMessage())
	                        builder1.mergeFrom(getChatMessage());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setChatMessage(builder1.buildPartial());
	                    break;
	
	                case 64: // '@'
	                    bitField0_ = 0x80 | bitField0_;
	                    retry_ = codedinputstream.readBool();
	                    break;
	
	                case 74: // 'J'
	                    Data.ConversationMetadata.Builder builder = Data.ConversationMetadata.newBuilder();
	                    if(hasConversationMetadata())
	                        builder.mergeFrom(getConversationMetadata());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setConversationMetadata(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final NewConversationRequest.Builder addAllParticipant(Iterable iterable)
	        {
	            ensureParticipantIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participant_);
	            return this;
	        }
	
	        public final NewConversationRequest.Builder addAllParticipantId(Iterable iterable)
	        {
	            ensureParticipantIdIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participantId_);
	            return this;
	        }
	
	        public final NewConversationRequest.Builder addParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(i, builder.build());
	            return this;
	        }
	
	        public final NewConversationRequest.Builder addParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(i, participant);
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder addParticipant(Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(builder.build());
	            return this;
	        }
	
	        public final NewConversationRequest.Builder addParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(participant);
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder addParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIdIsMutable();
	                participantId_.add(s);
	                return this;
	            }
	        }
	
	        public final NewConversationRequest build()
	        {
	            NewConversationRequest newconversationrequest = buildPartial();
	            if(!newconversationrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("newconversationrequest"));
	            else
	                return newconversationrequest;
	        }
	
	        public final NewConversationRequest buildPartial()
	        {
	            NewConversationRequest newconversationrequest = new NewConversationRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            newconversationrequest.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            newconversationrequest.conversationClientId_ = conversationClientId_;
	            if((4 & bitField0_) == 4)
	            {
	                participantId_ = new UnmodifiableLazyStringList(participantId_);
	                bitField0_ = -5 & bitField0_;
	            }
	            newconversationrequest.participantId_ = participantId_;
	            if((i & 8) == 8)
	                k |= 4;
	            newconversationrequest.senderId_ = senderId_;
	            if((i & 0x10) == 16)
	                k |= 8;
	            newconversationrequest.displayName_ = displayName_;
	            if((0x20 & bitField0_) == 32)
	            {
	                participant_ = Collections.unmodifiableList(participant_);
	                bitField0_ = 0xffffffdf & bitField0_;
	            }
	            newconversationrequest.participant_ = participant_;
	            if((i & 0x40) == 64)
	                k |= 0x10;
	            newconversationrequest.chatMessage_ = chatMessage_;
	            if((i & 0x80) == 128)
	                k |= 0x20;
	            newconversationrequest.retry_ = retry_;
	            if((i & 0x100) == 256)
	                k |= 0x40;
	            newconversationrequest.conversationMetadata_ = conversationMetadata_;
	            newconversationrequest.bitField0_ = k;
	            return newconversationrequest;
	        }
	
	        public final NewConversationRequest.Builder clear()
	        {
	            super.clear();
	            type_ = Data.ConversationType.ONE_TO_ONE;
	            bitField0_ = -2 & bitField0_;
	            conversationClientId_ = "";
	            bitField0_ = -3 & bitField0_;
	            participantId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -5 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -9 & bitField0_;
	            displayName_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            participant_ = Collections.emptyList();
	            bitField0_ = 0xffffffdf & bitField0_;
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            retry_ = false;
	            bitField0_ = 0xffffff7f & bitField0_;
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearChatMessage()
	        {
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearConversationClientId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationClientId_ = NewConversationRequest.getDefaultInstance().getConversationClientId();
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearConversationMetadata()
	        {
	            conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearDisplayName()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            displayName_ = NewConversationRequest.getDefaultInstance().getDisplayName();
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearParticipant()
	        {
	            participant_ = Collections.emptyList();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearParticipantId()
	        {
	            participantId_ = LazyStringArrayList.EMPTY;
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearRetry()
	        {
	            bitField0_ = 0xffffff7f & bitField0_;
	            retry_ = false;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearSenderId()
	        {
	            bitField0_ = -9 & bitField0_;
	            senderId_ = NewConversationRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final NewConversationRequest.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = Data.ConversationType.ONE_TO_ONE;
	            return this;
	        }
	
	        public final ChatMessage getChatMessage()
	        {
	            return chatMessage_;
	        }
	
	        public final String getConversationClientId()
	        {
	            Object obj = conversationClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ConversationMetadata getConversationMetadata()
	        {
	            return conversationMetadata_;
	        }
	
	        public final NewConversationRequest getDefaultInstanceForType()
	        {
	            return NewConversationRequest.getDefaultInstance();
	        }
	
	        public final String getDisplayName()
	        {
	            Object obj = displayName_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                displayName_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.Participant getParticipant(int i)
	        {
	            return (Data.Participant)participant_.get(i);
	        }
	
	        public final int getParticipantCount()
	        {
	            return participant_.size();
	        }
	
	        public final String getParticipantId(int i)
	        {
	            return (String)participantId_.get(i);
	        }
	
	        public final int getParticipantIdCount()
	        {
	            return participantId_.size();
	        }
	
	        public final List getParticipantIdList()
	        {
	            return Collections.unmodifiableList(participantId_);
	        }
	
	        public final List getParticipantList()
	        {
	            return Collections.unmodifiableList(participant_);
	        }
	
	        public final boolean getRetry()
	        {
	            return retry_;
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ConversationType getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasChatMessage()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationClientId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationMetadata()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasDisplayName()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRetry()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((NewConversationRequest)generatedmessagelite);
	        }
	
	        public final NewConversationRequest.Builder mergeFrom(NewConversationRequest newconversationrequest)
	        {
	            if(newconversationrequest == NewConversationRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(newconversationrequest.hasType())
	                setType(newconversationrequest.getType());
	            if(newconversationrequest.hasConversationClientId())
	                setConversationClientId(newconversationrequest.getConversationClientId());
	            if(!newconversationrequest.participantId_.isEmpty())
	                if(participantId_.isEmpty())
	                {
	                    participantId_ = newconversationrequest.participantId_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureParticipantIdIsMutable();
	                    participantId_.addAll(newconversationrequest.participantId_);
	                }
	            if(newconversationrequest.hasSenderId())
	                setSenderId(newconversationrequest.getSenderId());
	            if(newconversationrequest.hasDisplayName())
	                setDisplayName(newconversationrequest.getDisplayName());
	            if(!newconversationrequest.participant_.isEmpty())
	                if(participant_.isEmpty())
	                {
	                    participant_ = newconversationrequest.participant_;
	                    bitField0_ = 0xffffffdf & bitField0_;
	                } else
	                {
	                    ensureParticipantIsMutable();
	                    participant_.addAll(newconversationrequest.participant_);
	                }
	            if(newconversationrequest.hasChatMessage())
	            {
	                ChatMessage chatmessage = newconversationrequest.getChatMessage();
	                if((0x40 & bitField0_) == 64 && chatMessage_ != ChatMessage.getDefaultInstance())
	                    chatMessage_ = ChatMessage.newBuilder(chatMessage_).mergeFrom(chatmessage).buildPartial();
	                else
	                    chatMessage_ = chatmessage;
	                bitField0_ = 0x40 | bitField0_;
	            }
	            if(newconversationrequest.hasRetry())
	                setRetry(newconversationrequest.getRetry());
	            if(newconversationrequest.hasConversationMetadata())
	            {
	                Data.ConversationMetadata conversationmetadata = newconversationrequest.getConversationMetadata();
	                if((0x100 & bitField0_) == 256 && conversationMetadata_ != Data.ConversationMetadata.getDefaultInstance())
	                    conversationMetadata_ = Data.ConversationMetadata.newBuilder(conversationMetadata_).mergeFrom(conversationmetadata).buildPartial();
	                else
	                    conversationMetadata_ = conversationmetadata;
	                bitField0_ = 0x100 | bitField0_;
	            }
	            return this;
	        }
	
	        public final NewConversationRequest.Builder setChatMessage(ChatMessage.Builder builder)
	        {
	            chatMessage_ = builder.build();
	            bitField0_ = 0x40 | bitField0_;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder setChatMessage(ChatMessage chatmessage)
	        {
	            if(chatmessage == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                chatMessage_ = chatmessage;
	                bitField0_ = 0x40 | bitField0_;
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder setConversationClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationClientId_ = s;
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder setConversationMetadata(Data.ConversationMetadata.Builder builder)
	        {
	            conversationMetadata_ = builder.build();
	            bitField0_ = 0x100 | bitField0_;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder setConversationMetadata(Data.ConversationMetadata conversationmetadata)
	        {
	            if(conversationmetadata == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationMetadata_ = conversationmetadata;
	                bitField0_ = 0x100 | bitField0_;
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder setDisplayName(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                displayName_ = s;
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder setParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.set(i, builder.build());
	            return this;
	        }
	
	        public final NewConversationRequest.Builder setParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.set(i, participant);
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder setParticipantId(int i, String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIdIsMutable();
	                participantId_.set(i, s);
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder setRetry(boolean flag)
	        {
	            bitField0_ = 0x80 | bitField0_;
	            retry_ = flag;
	            return this;
	        }
	
	        public final NewConversationRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final NewConversationRequest.Builder setType(Data.ConversationType conversationtype)
	        {
	            if(conversationtype == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = conversationtype;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									ConversationSearchRequest
	//==================================================================================================
	public static interface ConversationSearchRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getContentQuery();
	
	    public abstract Data.ConversationAttributes getConversationQuery(int i);
	
	    public abstract int getConversationQueryCount();
	
	    public abstract List getConversationQueryList();
	
	    public abstract Data.ParticipantAttributes getFromQuery(int i);
	
	    public abstract int getFromQueryCount();
	
	    public abstract List getFromQueryList();
	
	    public abstract boolean getHasPhotoQuery();
	
	    public abstract Data.Location getLocationQuery();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract Data.TimeRange getTimeRangeQuery();
	
	    public abstract Data.ParticipantAttributes getToQuery(int i);
	
	    public abstract int getToQueryCount();
	
	    public abstract List getToQueryList();
	
	    public abstract String getUnstructuredQuery();
	
	    public abstract boolean hasContentQuery();
	
	    public abstract boolean hasHasPhotoQuery();
	
	    public abstract boolean hasLocationQuery();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasTimeRangeQuery();
	
	    public abstract boolean hasUnstructuredQuery();
	}
	
	public static final class ConversationSearchRequest extends GeneratedMessageLite implements ConversationSearchRequestOrBuilder {
	
		private static final ConversationSearchRequest defaultInstance;
	    private int bitField0_;
	    private Object contentQuery_;
	    private List conversationQuery_;
	    private List fromQuery_;
	    private boolean hasPhotoQuery_;
	    private Data.Location locationQuery_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;
	    private Data.TimeRange timeRangeQuery_;
	    private List toQuery_;
	    private Object unstructuredQuery_;

	    static 
	    {
	        ConversationSearchRequest conversationsearchrequest = new ConversationSearchRequest();
	        defaultInstance = conversationsearchrequest;
	        conversationsearchrequest.unstructuredQuery_ = "";
	        conversationsearchrequest.fromQuery_ = Collections.emptyList();
	        conversationsearchrequest.toQuery_ = Collections.emptyList();
	        conversationsearchrequest.conversationQuery_ = Collections.emptyList();
	        conversationsearchrequest.contentQuery_ = "";
	        conversationsearchrequest.locationQuery_ = Data.Location.getDefaultInstance();
	        conversationsearchrequest.hasPhotoQuery_ = false;
	        conversationsearchrequest.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	        conversationsearchrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private ConversationSearchRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ConversationSearchRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getContentQueryBytes()
	    {
	        Object obj = contentQuery_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            contentQuery_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ConversationSearchRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getUnstructuredQueryBytes()
	    {
	        Object obj = unstructuredQuery_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            unstructuredQuery_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ConversationSearchRequest conversationsearchrequest)
	    {
	        return new Builder().mergeFrom(conversationsearchrequest);
	    }
	
	    public final String getContentQuery()
	    {
	        Object obj = contentQuery_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                contentQuery_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Data.ConversationAttributes getConversationQuery(int i)
	    {
	        return (Data.ConversationAttributes)conversationQuery_.get(i);
	    }
	
	    public final int getConversationQueryCount()
	    {
	        return conversationQuery_.size();
	    }
	
	    public final List getConversationQueryList()
	    {
	        return conversationQuery_;
	    }
	
	    public final Data.ConversationAttributesOrBuilder getConversationQueryOrBuilder(int i)
	    {
	        return (Data.ConversationAttributesOrBuilder)conversationQuery_.get(i);
	    }
	
	    public final List getConversationQueryOrBuilderList()
	    {
	        return conversationQuery_;
	    }
	
	    public final ConversationSearchRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Data.ParticipantAttributes getFromQuery(int i)
	    {
	        return (Data.ParticipantAttributes)fromQuery_.get(i);
	    }
	
	    public final int getFromQueryCount()
	    {
	        return fromQuery_.size();
	    }
	
	    public final List getFromQueryList()
	    {
	        return fromQuery_;
	    }
	
	    public final Data.ParticipantAttributesOrBuilder getFromQueryOrBuilder(int i)
	    {
	        return (Data.ParticipantAttributesOrBuilder)fromQuery_.get(i);
	    }
	
	    public final List getFromQueryOrBuilderList()
	    {
	        return fromQuery_;
	    }
	
	    public final boolean getHasPhotoQuery()
	    {
	        return hasPhotoQuery_;
	    }
	
	    public final Data.Location getLocationQuery()
	    {
	        return locationQuery_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int k1;
	        if(i != -1)
	        {
	            k1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getUnstructuredQueryBytes());
	            for(int l = 0; l < fromQuery_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(2, (MessageLite)fromQuery_.get(l));
	
	            for(int i1 = 0; i1 < toQuery_.size(); i1++)
	                k += CodedOutputStream.computeMessageSize(3, (MessageLite)toQuery_.get(i1));
	
	            for(int j1 = 0; j1 < conversationQuery_.size(); j1++)
	                k += CodedOutputStream.computeMessageSize(4, (MessageLite)conversationQuery_.get(j1));
	
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(5, getContentQueryBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(6, locationQuery_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBoolSize(7, hasPhotoQuery_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeMessageSize(8, timeRangeQuery_);
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeMessageSize(9, stubbyInfo_);
	            memoizedSerializedSize = k;
	            k1 = k;
	        }
	        return k1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final Data.TimeRange getTimeRangeQuery()
	    {
	        return timeRangeQuery_;
	    }
	
	    public final Data.ParticipantAttributes getToQuery(int i)
	    {
	        return (Data.ParticipantAttributes)toQuery_.get(i);
	    }
	
	    public final int getToQueryCount()
	    {
	        return toQuery_.size();
	    }
	
	    public final List getToQueryList()
	    {
	        return toQuery_;
	    }
	
	    public final Data.ParticipantAttributesOrBuilder getToQueryOrBuilder(int i)
	    {
	        return (Data.ParticipantAttributesOrBuilder)toQuery_.get(i);
	    }
	
	    public final List getToQueryOrBuilderList()
	    {
	        return toQuery_;
	    }
	
	    public final String getUnstructuredQuery()
	    {
	        Object obj = unstructuredQuery_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                unstructuredQuery_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final boolean hasContentQuery()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHasPhotoQuery()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLocationQuery()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimeRangeQuery()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUnstructuredQuery()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getUnstructuredQueryBytes());
	        for(int i = 0; i < fromQuery_.size(); i++)
	            codedoutputstream.writeMessage(2, (MessageLite)fromQuery_.get(i));
	
	        for(int j = 0; j < toQuery_.size(); j++)
	            codedoutputstream.writeMessage(3, (MessageLite)toQuery_.get(j));
	
	        for(int k = 0; k < conversationQuery_.size(); k++)
	            codedoutputstream.writeMessage(4, (MessageLite)conversationQuery_.get(k));
	
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(5, getContentQueryBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(6, locationQuery_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBool(7, hasPhotoQuery_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(8, timeRangeQuery_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeMessage(9, stubbyInfo_);
	    }
	    
	    //=============================================================
	    //						Builder
	    //=============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ConversationSearchRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object contentQuery_;
	        private List conversationQuery_;
	        private List fromQuery_;
	        private boolean hasPhotoQuery_;
	        private Data.Location locationQuery_;
	        private Data.StubbyInfo stubbyInfo_;
	        private Data.TimeRange timeRangeQuery_;
	        private List toQuery_;
	        private Object unstructuredQuery_;

	        private Builder()
	        {
	            unstructuredQuery_ = "";
	            fromQuery_ = Collections.emptyList();
	            toQuery_ = Collections.emptyList();
	            conversationQuery_ = Collections.emptyList();
	            contentQuery_ = "";
	            locationQuery_ = Data.Location.getDefaultInstance();
	            timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public ConversationSearchRequest.Builder clone()
	        {
	            return (new ConversationSearchRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureConversationQueryIsMutable()
	        {
	            if((8 & bitField0_) != 8)
	            {
	                conversationQuery_ = new ArrayList(conversationQuery_);
	                bitField0_ = 8 | bitField0_;
	            }
	        }
	
	        private void ensureFromQueryIsMutable()
	        {
	            if((2 & bitField0_) != 2)
	            {
	                fromQuery_ = new ArrayList(fromQuery_);
	                bitField0_ = 2 | bitField0_;
	            }
	        }
	
	        private void ensureToQueryIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                toQuery_ = new ArrayList(toQuery_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public ConversationSearchRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    unstructuredQuery_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    Data.ParticipantAttributes.Builder builder5 = Data.ParticipantAttributes.newBuilder();
	                    codedinputstream.readMessage(builder5, extensionregistrylite);
	                    addFromQuery(builder5.buildPartial());
	                    break;
	
	                case 26: // '\032'
	                    Data.ParticipantAttributes.Builder builder4 = Data.ParticipantAttributes.newBuilder();
	                    codedinputstream.readMessage(builder4, extensionregistrylite);
	                    addToQuery(builder4.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    Data.ConversationAttributes.Builder builder3 = Data.ConversationAttributes.newBuilder();
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    addConversationQuery(builder3.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 0x10 | bitField0_;
	                    contentQuery_ = codedinputstream.readBytes();
	                    break;
	
	                case 50: // '2'
	                    Data.Location.Builder builder2 = Data.Location.newBuilder();
	                    if(hasLocationQuery())
	                        builder2.mergeFrom(getLocationQuery());
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    setLocationQuery(builder2.buildPartial());
	                    break;
	
	                case 56: // '8'
	                    bitField0_ = 0x40 | bitField0_;
	                    hasPhotoQuery_ = codedinputstream.readBool();
	                    break;
	
	                case 66: // 'B'
	                    Data.TimeRange.Builder builder1 = Data.TimeRange.newBuilder();
	                    if(hasTimeRangeQuery())
	                        builder1.mergeFrom(getTimeRangeQuery());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setTimeRangeQuery(builder1.buildPartial());
	                    break;
	
	                case 74: // 'J'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ConversationSearchRequest.Builder addAllConversationQuery(Iterable iterable)
	        {
	            ensureConversationQueryIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, conversationQuery_);
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addAllFromQuery(Iterable iterable)
	        {
	            ensureFromQueryIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, fromQuery_);
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addAllToQuery(Iterable iterable)
	        {
	            ensureToQueryIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, toQuery_);
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addConversationQuery(int i, Data.ConversationAttributes.Builder builder)
	        {
	            ensureConversationQueryIsMutable();
	            conversationQuery_.add(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addConversationQuery(int i, Data.ConversationAttributes conversationattributes)
	        {
	            if(conversationattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureConversationQueryIsMutable();
	                conversationQuery_.add(i, conversationattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder addConversationQuery(Data.ConversationAttributes.Builder builder)
	        {
	            ensureConversationQueryIsMutable();
	            conversationQuery_.add(builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addConversationQuery(Data.ConversationAttributes conversationattributes)
	        {
	            if(conversationattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureConversationQueryIsMutable();
	                conversationQuery_.add(conversationattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder addFromQuery(int i, Data.ParticipantAttributes.Builder builder)
	        {
	            ensureFromQueryIsMutable();
	            fromQuery_.add(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addFromQuery(int i, Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureFromQueryIsMutable();
	                fromQuery_.add(i, participantattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder addFromQuery(Data.ParticipantAttributes.Builder builder)
	        {
	            ensureFromQueryIsMutable();
	            fromQuery_.add(builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addFromQuery(Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureFromQueryIsMutable();
	                fromQuery_.add(participantattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder addToQuery(int i, Data.ParticipantAttributes.Builder builder)
	        {
	            ensureToQueryIsMutable();
	            toQuery_.add(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addToQuery(int i, Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureToQueryIsMutable();
	                toQuery_.add(i, participantattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder addToQuery(Data.ParticipantAttributes.Builder builder)
	        {
	            ensureToQueryIsMutable();
	            toQuery_.add(builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder addToQuery(Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureToQueryIsMutable();
	                toQuery_.add(participantattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest build()
	        {
	            ConversationSearchRequest conversationsearchrequest = buildPartial();
	            if(!conversationsearchrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("conversationsearchrequest"));
	            else
	                return conversationsearchrequest;
	        }
	
	        public final ConversationSearchRequest buildPartial()
	        {
	            ConversationSearchRequest conversationsearchrequest = new ConversationSearchRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            conversationsearchrequest.unstructuredQuery_ = unstructuredQuery_;
	            if((2 & bitField0_) == 2)
	            {
	                fromQuery_ = Collections.unmodifiableList(fromQuery_);
	                bitField0_ = -3 & bitField0_;
	            }
	            conversationsearchrequest.fromQuery_ = fromQuery_;
	            if((4 & bitField0_) == 4)
	            {
	                toQuery_ = Collections.unmodifiableList(toQuery_);
	                bitField0_ = -5 & bitField0_;
	            }
	            conversationsearchrequest.toQuery_ = toQuery_;
	            if((8 & bitField0_) == 8)
	            {
	                conversationQuery_ = Collections.unmodifiableList(conversationQuery_);
	                bitField0_ = -9 & bitField0_;
	            }
	            conversationsearchrequest.conversationQuery_ = conversationQuery_;
	            if((i & 0x10) == 16)
	                k |= 2;
	            conversationsearchrequest.contentQuery_ = contentQuery_;
	            if((i & 0x20) == 32)
	                k |= 4;
	            conversationsearchrequest.locationQuery_ = locationQuery_;
	            if((i & 0x40) == 64)
	                k |= 8;
	            conversationsearchrequest.hasPhotoQuery_ = hasPhotoQuery_;
	            if((i & 0x80) == 128)
	                k |= 0x10;
	            conversationsearchrequest.timeRangeQuery_ = timeRangeQuery_;
	            if((i & 0x100) == 256)
	                k |= 0x20;
	            conversationsearchrequest.stubbyInfo_ = stubbyInfo_;
	            conversationsearchrequest.bitField0_ = k;
	            return conversationsearchrequest;
	        }
	
	        public final ConversationSearchRequest.Builder clear()
	        {
	            super.clear();
	            unstructuredQuery_ = "";
	            bitField0_ = -2 & bitField0_;
	            fromQuery_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            toQuery_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            conversationQuery_ = Collections.emptyList();
	            bitField0_ = -9 & bitField0_;
	            contentQuery_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            locationQuery_ = Data.Location.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            hasPhotoQuery_ = false;
	            bitField0_ = 0xffffffbf & bitField0_;
	            timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearContentQuery()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            contentQuery_ = ConversationSearchRequest.getDefaultInstance().getContentQuery();
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearConversationQuery()
	        {
	            conversationQuery_ = Collections.emptyList();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearFromQuery()
	        {
	            fromQuery_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearHasPhotoQuery()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            hasPhotoQuery_ = false;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearLocationQuery()
	        {
	            locationQuery_ = Data.Location.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearTimeRangeQuery()
	        {
	            timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearToQuery()
	        {
	            toQuery_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder clearUnstructuredQuery()
	        {
	            bitField0_ = -2 & bitField0_;
	            unstructuredQuery_ = ConversationSearchRequest.getDefaultInstance().getUnstructuredQuery();
	            return this;
	        }
	
	        public final String getContentQuery()
	        {
	            Object obj = contentQuery_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                contentQuery_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.ConversationAttributes getConversationQuery(int i)
	        {
	            return (Data.ConversationAttributes)conversationQuery_.get(i);
	        }
	
	        public final int getConversationQueryCount()
	        {
	            return conversationQuery_.size();
	        }
	
	        public final List getConversationQueryList()
	        {
	            return Collections.unmodifiableList(conversationQuery_);
	        }
	
	        public final ConversationSearchRequest getDefaultInstanceForType()
	        {
	            return ConversationSearchRequest.getDefaultInstance();
	        }
	
	        public final Data.ParticipantAttributes getFromQuery(int i)
	        {
	            return (Data.ParticipantAttributes)fromQuery_.get(i);
	        }
	
	        public final int getFromQueryCount()
	        {
	            return fromQuery_.size();
	        }
	
	        public final List getFromQueryList()
	        {
	            return Collections.unmodifiableList(fromQuery_);
	        }
	
	        public final boolean getHasPhotoQuery()
	        {
	            return hasPhotoQuery_;
	        }
	
	        public final Data.Location getLocationQuery()
	        {
	            return locationQuery_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final Data.TimeRange getTimeRangeQuery()
	        {
	            return timeRangeQuery_;
	        }
	
	        public final Data.ParticipantAttributes getToQuery(int i)
	        {
	            return (Data.ParticipantAttributes)toQuery_.get(i);
	        }
	
	        public final int getToQueryCount()
	        {
	            return toQuery_.size();
	        }
	
	        public final List getToQueryList()
	        {
	            return Collections.unmodifiableList(toQuery_);
	        }
	
	        public final String getUnstructuredQuery()
	        {
	            Object obj = unstructuredQuery_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                unstructuredQuery_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean hasContentQuery()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHasPhotoQuery()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLocationQuery()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimeRangeQuery()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUnstructuredQuery()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ConversationSearchRequest)generatedmessagelite);
	        }
	
	        public final ConversationSearchRequest.Builder mergeFrom(ConversationSearchRequest conversationsearchrequest)
	        {
	            if(conversationsearchrequest == ConversationSearchRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(conversationsearchrequest.hasUnstructuredQuery())
	                setUnstructuredQuery(conversationsearchrequest.getUnstructuredQuery());
	            if(!conversationsearchrequest.fromQuery_.isEmpty())
	                if(fromQuery_.isEmpty())
	                {
	                    fromQuery_ = conversationsearchrequest.fromQuery_;
	                    bitField0_ = -3 & bitField0_;
	                } else
	                {
	                    ensureFromQueryIsMutable();
	                    fromQuery_.addAll(conversationsearchrequest.fromQuery_);
	                }
	            if(!conversationsearchrequest.toQuery_.isEmpty())
	                if(toQuery_.isEmpty())
	                {
	                    toQuery_ = conversationsearchrequest.toQuery_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureToQueryIsMutable();
	                    toQuery_.addAll(conversationsearchrequest.toQuery_);
	                }
	            if(!conversationsearchrequest.conversationQuery_.isEmpty())
	                if(conversationQuery_.isEmpty())
	                {
	                    conversationQuery_ = conversationsearchrequest.conversationQuery_;
	                    bitField0_ = -9 & bitField0_;
	                } else
	                {
	                    ensureConversationQueryIsMutable();
	                    conversationQuery_.addAll(conversationsearchrequest.conversationQuery_);
	                }
	            if(conversationsearchrequest.hasContentQuery())
	                setContentQuery(conversationsearchrequest.getContentQuery());
	            if(conversationsearchrequest.hasLocationQuery())
	            {
	                Data.Location location = conversationsearchrequest.getLocationQuery();
	                if((0x20 & bitField0_) == 32 && locationQuery_ != Data.Location.getDefaultInstance())
	                    locationQuery_ = Data.Location.newBuilder(locationQuery_).mergeFrom(location).buildPartial();
	                else
	                    locationQuery_ = location;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            if(conversationsearchrequest.hasHasPhotoQuery())
	                setHasPhotoQuery(conversationsearchrequest.getHasPhotoQuery());
	            if(conversationsearchrequest.hasTimeRangeQuery())
	            {
	                Data.TimeRange timerange = conversationsearchrequest.getTimeRangeQuery();
	                if((0x80 & bitField0_) == 128 && timeRangeQuery_ != Data.TimeRange.getDefaultInstance())
	                    timeRangeQuery_ = Data.TimeRange.newBuilder(timeRangeQuery_).mergeFrom(timerange).buildPartial();
	                else
	                    timeRangeQuery_ = timerange;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            if(conversationsearchrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = conversationsearchrequest.getStubbyInfo();
	                if((0x100 & bitField0_) == 256 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x100 | bitField0_;
	            }
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setContentQuery(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                contentQuery_ = s;
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder setConversationQuery(int i, Data.ConversationAttributes.Builder builder)
	        {
	            ensureConversationQueryIsMutable();
	            conversationQuery_.set(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setConversationQuery(int i, Data.ConversationAttributes conversationattributes)
	        {
	            if(conversationattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureConversationQueryIsMutable();
	                conversationQuery_.set(i, conversationattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder setFromQuery(int i, Data.ParticipantAttributes.Builder builder)
	        {
	            ensureFromQueryIsMutable();
	            fromQuery_.set(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setFromQuery(int i, Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureFromQueryIsMutable();
	                fromQuery_.set(i, participantattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder setHasPhotoQuery(boolean flag)
	        {
	            bitField0_ = 0x40 | bitField0_;
	            hasPhotoQuery_ = flag;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setLocationQuery(Data.Location.Builder builder)
	        {
	            locationQuery_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setLocationQuery(Data.Location location)
	        {
	            if(location == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                locationQuery_ = location;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x100 | bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x100 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder setTimeRangeQuery(Data.TimeRange.Builder builder)
	        {
	            timeRangeQuery_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setTimeRangeQuery(Data.TimeRange timerange)
	        {
	            if(timerange == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                timeRangeQuery_ = timerange;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder setToQuery(int i, Data.ParticipantAttributes.Builder builder)
	        {
	            ensureToQueryIsMutable();
	            toQuery_.set(i, builder.build());
	            return this;
	        }
	
	        public final ConversationSearchRequest.Builder setToQuery(int i, Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureToQueryIsMutable();
	                toQuery_.set(i, participantattributes);
	                return this;
	            }
	        }
	
	        public final ConversationSearchRequest.Builder setUnstructuredQuery(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                unstructuredQuery_ = s;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									DeviceRegistrationRequest
	//==================================================================================================
	public static interface DeviceRegistrationRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract long getAndroidId();
	
	    public abstract String getAndroidRegistrationId();
	
	    public abstract String getAppId();
	
	    public abstract DeviceRegistrationRequest.DeviceType getDeviceType();
	
	    public abstract String getLocale();
	
	    public abstract ByteString getOldToken();
	
	    public abstract String getOwnerId();
	
	    public abstract String getPhoneNumber();
	
	    public abstract DeviceRegistrationRequest.RegistrationType getRegistrationType();
	
	    public abstract ByteString getToken();
	
	    public abstract String getVerification();
	
	    public abstract boolean hasAndroidId();
	
	    public abstract boolean hasAndroidRegistrationId();
	
	    public abstract boolean hasAppId();
	
	    public abstract boolean hasDeviceType();
	
	    public abstract boolean hasLocale();
	
	    public abstract boolean hasOldToken();
	
	    public abstract boolean hasOwnerId();
	
	    public abstract boolean hasPhoneNumber();
	
	    public abstract boolean hasRegistrationType();
	
	    public abstract boolean hasToken();
	
	    public abstract boolean hasVerification();
	}
	
	public static final class DeviceRegistrationRequest extends GeneratedMessageLite implements DeviceRegistrationRequestOrBuilder {
	
		private static final DeviceRegistrationRequest defaultInstance;
	    private long androidId_;
	    private Object androidRegistrationId_;
	    private Object appId_;
	    private int bitField0_;
	    private DeviceType deviceType_;
	    private Object locale_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private ByteString oldToken_;
	    private Object ownerId_;
	    private Object phoneNumber_;
	    private RegistrationType registrationType_;
	    private ByteString token_;
	    private Object verification_;

	    static 
	    {
	        DeviceRegistrationRequest deviceregistrationrequest = new DeviceRegistrationRequest();
	        defaultInstance = deviceregistrationrequest;
	        deviceregistrationrequest.deviceType_ = DeviceType.ANDROID;
	        deviceregistrationrequest.registrationType_ = RegistrationType.REGISTER;
	        deviceregistrationrequest.ownerId_ = "";
	        deviceregistrationrequest.verification_ = "";
	        deviceregistrationrequest.locale_ = "";
	        deviceregistrationrequest.phoneNumber_ = "";
	        deviceregistrationrequest.appId_ = "";
	        deviceregistrationrequest.token_ = ByteString.EMPTY;
	        deviceregistrationrequest.androidId_ = 0L;
	        deviceregistrationrequest.androidRegistrationId_ = "";
	        deviceregistrationrequest.oldToken_ = ByteString.EMPTY;
	    }

	    private DeviceRegistrationRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    DeviceRegistrationRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getAndroidRegistrationIdBytes()
	    {
	        Object obj = androidRegistrationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            androidRegistrationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getAppIdBytes()
	    {
	        Object obj = appId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            appId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static DeviceRegistrationRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getLocaleBytes()
	    {
	        Object obj = locale_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            locale_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getOwnerIdBytes()
	    {
	        Object obj = ownerId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            ownerId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getPhoneNumberBytes()
	    {
	        Object obj = phoneNumber_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            phoneNumber_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getVerificationBytes()
	    {
	        Object obj = verification_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            verification_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(DeviceRegistrationRequest deviceregistrationrequest)
	    {
	        return new Builder().mergeFrom(deviceregistrationrequest);
	    }
	
	    public final long getAndroidId()
	    {
	        return androidId_;
	    }
	
	    public final String getAndroidRegistrationId()
	    {
	        Object obj = androidRegistrationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                androidRegistrationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getAppId()
	    {
	        Object obj = appId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                appId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final DeviceRegistrationRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final DeviceType getDeviceType()
	    {
	        return deviceType_;
	    }
	
	    public final String getLocale()
	    {
	        Object obj = locale_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                locale_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ByteString getOldToken()
	    {
	        return oldToken_;
	    }
	
	    public final String getOwnerId()
	    {
	        Object obj = ownerId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                ownerId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getPhoneNumber()
	    {
	        Object obj = phoneNumber_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                phoneNumber_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final RegistrationType getRegistrationType()
	    {
	        return registrationType_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, deviceType_.getNumber());
	            if((0x80 & bitField0_) == 128)
	                k += CodedOutputStream.computeBytesSize(2, token_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getOwnerIdBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getVerificationBytes());
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeBytesSize(5, getLocaleBytes());
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeBytesSize(6, getPhoneNumberBytes());
	            if((0x40 & bitField0_) == 64)
	                k += CodedOutputStream.computeBytesSize(7, getAppIdBytes());
	            if((0x400 & bitField0_) == 1024)
	                k += CodedOutputStream.computeBytesSize(8, oldToken_);
	            if((0x200 & bitField0_) == 512)
	                k += CodedOutputStream.computeBytesSize(9, getAndroidRegistrationIdBytes());
	            if((0x100 & bitField0_) == 256)
	                k += CodedOutputStream.computeInt64Size(10, androidId_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(11, registrationType_.getNumber());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final ByteString getToken()
	    {
	        return token_;
	    }
	
	    public final String getVerification()
	    {
	        Object obj = verification_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                verification_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final boolean hasAndroidId()
	    {
	        boolean flag;
	        if((0x100 & bitField0_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasAndroidRegistrationId()
	    {
	        boolean flag;
	        if((0x200 & bitField0_) == 512)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasAppId()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasDeviceType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLocale()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasOldToken()
	    {
	        boolean flag;
	        if((0x400 & bitField0_) == 1024)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasOwnerId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPhoneNumber()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRegistrationType()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasToken()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasVerification()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, deviceType_.getNumber());
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeBytes(2, token_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getOwnerIdBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getVerificationBytes());
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBytes(5, getLocaleBytes());
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeBytes(6, getPhoneNumberBytes());
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeBytes(7, getAppIdBytes());
	        if((0x400 & bitField0_) == 1024)
	            codedoutputstream.writeBytes(8, oldToken_);
	        if((0x200 & bitField0_) == 512)
	            codedoutputstream.writeBytes(9, getAndroidRegistrationIdBytes());
	        if((0x100 & bitField0_) == 256)
	            codedoutputstream.writeInt64(10, androidId_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(11, registrationType_.getNumber());
	    }
	    
	    //=========================================================
	    //						DeviceType
	    //=========================================================
	    public static enum DeviceType implements com.google.protobuf.Internal.EnumLite {
	    	
	    	ANDROID(1),
	    	IOS(2),
	    	SMS(3);
	    	
	    	private int value;
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	private DeviceType(int value) {
	    		this.value = value;
	    	}
	    	
	    	public static DeviceType valueOf(int value) {
	    		for(DeviceType t : DeviceType.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //=========================================================
	    //						RegistrationType
	    //=========================================================
	    public static enum RegistrationType implements com.google.protobuf.Internal.EnumLite {
	    	
	    	REGISTER(1),
	    	UNREGISTER(2);
	    	
	    	private int value;
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	private RegistrationType(int value) {
	    		this.value = value;
	    	}
	    	
	    	public static RegistrationType valueOf(int value) {
	    		for(RegistrationType t : RegistrationType.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //=========================================================
	    //						Builder
	    //=========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements DeviceRegistrationRequestOrBuilder {
	
	    	private long androidId_;
	        private Object androidRegistrationId_;
	        private Object appId_;
	        private int bitField0_;
	        private DeviceRegistrationRequest.DeviceType deviceType_;
	        private Object locale_;
	        private ByteString oldToken_;
	        private Object ownerId_;
	        private Object phoneNumber_;
	        private DeviceRegistrationRequest.RegistrationType registrationType_;
	        private ByteString token_;
	        private Object verification_;

	        private Builder()
	        {
	            deviceType_ = DeviceRegistrationRequest.DeviceType.ANDROID;
	            registrationType_ = DeviceRegistrationRequest.RegistrationType.REGISTER;
	            ownerId_ = "";
	            verification_ = "";
	            locale_ = "";
	            phoneNumber_ = "";
	            appId_ = "";
	            token_ = ByteString.EMPTY;
	            androidRegistrationId_ = "";
	            oldToken_ = ByteString.EMPTY;
	        }
	        
	        public DeviceRegistrationRequest.Builder clone()
	        {
	            return (new DeviceRegistrationRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public DeviceRegistrationRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    DeviceRegistrationRequest.DeviceType devicetype = DeviceRegistrationRequest.DeviceType.valueOf(codedinputstream.readEnum());
	                    if(devicetype != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        deviceType_ = devicetype;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 0x80 | bitField0_;
	                    token_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    ownerId_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    verification_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 0x10 | bitField0_;
	                    locale_ = codedinputstream.readBytes();
	                    break;
	
	                case 50: // '2'
	                    bitField0_ = 0x20 | bitField0_;
	                    phoneNumber_ = codedinputstream.readBytes();
	                    break;
	
	                case 58: // ':'
	                    bitField0_ = 0x40 | bitField0_;
	                    appId_ = codedinputstream.readBytes();
	                    break;
	
	                case 66: // 'B'
	                    bitField0_ = 0x400 | bitField0_;
	                    oldToken_ = codedinputstream.readBytes();
	                    break;
	
	                case 74: // 'J'
	                    bitField0_ = 0x200 | bitField0_;
	                    androidRegistrationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 80: // 'P'
	                    bitField0_ = 0x100 | bitField0_;
	                    androidId_ = codedinputstream.readInt64();
	                    break;
	
	                case 88: // 'X'
	                    DeviceRegistrationRequest.RegistrationType registrationtype = DeviceRegistrationRequest.RegistrationType.valueOf(codedinputstream.readEnum());
	                    if(registrationtype != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        registrationType_ = registrationtype;
	                    }
	                    break;
	                }
	            } while(true);
	        }
	
	        public final DeviceRegistrationRequest build()
	        {
	            DeviceRegistrationRequest deviceregistrationrequest = buildPartial();
	            if(!deviceregistrationrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("deviceregistrationrequest"));
	            else
	                return deviceregistrationrequest;
	        }
	
	        public final DeviceRegistrationRequest buildPartial()
	        {
	            DeviceRegistrationRequest deviceregistrationrequest = new DeviceRegistrationRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            deviceregistrationrequest.deviceType_ = deviceType_;
	            if((i & 2) == 2)
	                k |= 2;
	            deviceregistrationrequest.registrationType_ = registrationType_;
	            if((i & 4) == 4)
	                k |= 4;
	            deviceregistrationrequest.ownerId_ = ownerId_;
	            if((i & 8) == 8)
	                k |= 8;
	            deviceregistrationrequest.verification_ = verification_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            deviceregistrationrequest.locale_ = locale_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            deviceregistrationrequest.phoneNumber_ = phoneNumber_;
	            if((i & 0x40) == 64)
	                k |= 0x40;
	            deviceregistrationrequest.appId_ = appId_;
	            if((i & 0x80) == 128)
	                k |= 0x80;
	            deviceregistrationrequest.token_ = token_;
	            if((i & 0x100) == 256)
	                k |= 0x100;
	            deviceregistrationrequest.androidId_ = androidId_;
	            if((i & 0x200) == 512)
	                k |= 0x200;
	            deviceregistrationrequest.androidRegistrationId_ = androidRegistrationId_;
	            if((i & 0x400) == 1024)
	                k |= 0x400;
	            deviceregistrationrequest.oldToken_ = oldToken_;
	            deviceregistrationrequest.bitField0_ = k;
	            return deviceregistrationrequest;
	        }
	
	        public final DeviceRegistrationRequest.Builder clear()
	        {
	            super.clear();
	            deviceType_ = DeviceRegistrationRequest.DeviceType.ANDROID;
	            bitField0_ = -2 & bitField0_;
	            registrationType_ = DeviceRegistrationRequest.RegistrationType.REGISTER;
	            bitField0_ = -3 & bitField0_;
	            ownerId_ = "";
	            bitField0_ = -5 & bitField0_;
	            verification_ = "";
	            bitField0_ = -9 & bitField0_;
	            locale_ = "";
	            bitField0_ = 0xffffffef & bitField0_;
	            phoneNumber_ = "";
	            bitField0_ = 0xffffffdf & bitField0_;
	            appId_ = "";
	            bitField0_ = 0xffffffbf & bitField0_;
	            token_ = ByteString.EMPTY;
	            bitField0_ = 0xffffff7f & bitField0_;
	            androidId_ = 0L;
	            bitField0_ = 0xfffffeff & bitField0_;
	            androidRegistrationId_ = "";
	            bitField0_ = 0xfffffdff & bitField0_;
	            oldToken_ = ByteString.EMPTY;
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearAndroidId()
	        {
	            bitField0_ = 0xfffffeff & bitField0_;
	            androidId_ = 0L;
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearAndroidRegistrationId()
	        {
	            bitField0_ = 0xfffffdff & bitField0_;
	            androidRegistrationId_ = DeviceRegistrationRequest.getDefaultInstance().getAndroidRegistrationId();
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearAppId()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            appId_ = DeviceRegistrationRequest.getDefaultInstance().getAppId();
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearDeviceType()
	        {
	            bitField0_ = -2 & bitField0_;
	            deviceType_ = DeviceRegistrationRequest.DeviceType.ANDROID;
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearLocale()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            locale_ = DeviceRegistrationRequest.getDefaultInstance().getLocale();
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearOldToken()
	        {
	            bitField0_ = 0xfffffbff & bitField0_;
	            oldToken_ = DeviceRegistrationRequest.getDefaultInstance().getOldToken();
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearOwnerId()
	        {
	            bitField0_ = -5 & bitField0_;
	            ownerId_ = DeviceRegistrationRequest.getDefaultInstance().getOwnerId();
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearPhoneNumber()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            phoneNumber_ = DeviceRegistrationRequest.getDefaultInstance().getPhoneNumber();
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearRegistrationType()
	        {
	            bitField0_ = -3 & bitField0_;
	            registrationType_ = DeviceRegistrationRequest.RegistrationType.REGISTER;
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearToken()
	        {
	            bitField0_ = 0xffffff7f & bitField0_;
	            token_ = DeviceRegistrationRequest.getDefaultInstance().getToken();
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder clearVerification()
	        {
	            bitField0_ = -9 & bitField0_;
	            verification_ = DeviceRegistrationRequest.getDefaultInstance().getVerification();
	            return this;
	        }
	
	        public final long getAndroidId()
	        {
	            return androidId_;
	        }
	
	        public final String getAndroidRegistrationId()
	        {
	            Object obj = androidRegistrationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                androidRegistrationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getAppId()
	        {
	            Object obj = appId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                appId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final DeviceRegistrationRequest getDefaultInstanceForType()
	        {
	            return DeviceRegistrationRequest.getDefaultInstance();
	        }
	
	        public final DeviceRegistrationRequest.DeviceType getDeviceType()
	        {
	            return deviceType_;
	        }
	
	        public final String getLocale()
	        {
	            Object obj = locale_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                locale_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ByteString getOldToken()
	        {
	            return oldToken_;
	        }
	
	        public final String getOwnerId()
	        {
	            Object obj = ownerId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                ownerId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getPhoneNumber()
	        {
	            Object obj = phoneNumber_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                phoneNumber_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final DeviceRegistrationRequest.RegistrationType getRegistrationType()
	        {
	            return registrationType_;
	        }
	
	        public final ByteString getToken()
	        {
	            return token_;
	        }
	
	        public final String getVerification()
	        {
	            Object obj = verification_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                verification_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean hasAndroidId()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasAndroidRegistrationId()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasAppId()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasDeviceType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLocale()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasOldToken()
	        {
	            boolean flag;
	            if((0x400 & bitField0_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasOwnerId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPhoneNumber()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRegistrationType()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasToken()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasVerification()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((DeviceRegistrationRequest)generatedmessagelite);
	        }
	
	        public final DeviceRegistrationRequest.Builder mergeFrom(DeviceRegistrationRequest deviceregistrationrequest)
	        {
	            if(deviceregistrationrequest == DeviceRegistrationRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(deviceregistrationrequest.hasDeviceType())
	                setDeviceType(deviceregistrationrequest.getDeviceType());
	            if(deviceregistrationrequest.hasRegistrationType())
	                setRegistrationType(deviceregistrationrequest.getRegistrationType());
	            if(deviceregistrationrequest.hasOwnerId())
	                setOwnerId(deviceregistrationrequest.getOwnerId());
	            if(deviceregistrationrequest.hasVerification())
	                setVerification(deviceregistrationrequest.getVerification());
	            if(deviceregistrationrequest.hasLocale())
	                setLocale(deviceregistrationrequest.getLocale());
	            if(deviceregistrationrequest.hasPhoneNumber())
	                setPhoneNumber(deviceregistrationrequest.getPhoneNumber());
	            if(deviceregistrationrequest.hasAppId())
	                setAppId(deviceregistrationrequest.getAppId());
	            if(deviceregistrationrequest.hasToken())
	                setToken(deviceregistrationrequest.getToken());
	            if(deviceregistrationrequest.hasAndroidId())
	                setAndroidId(deviceregistrationrequest.getAndroidId());
	            if(deviceregistrationrequest.hasAndroidRegistrationId())
	                setAndroidRegistrationId(deviceregistrationrequest.getAndroidRegistrationId());
	            if(deviceregistrationrequest.hasOldToken())
	                setOldToken(deviceregistrationrequest.getOldToken());
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder setAndroidId(long l)
	        {
	            bitField0_ = 0x100 | bitField0_;
	            androidId_ = l;
	            return this;
	        }
	
	        public final DeviceRegistrationRequest.Builder setAndroidRegistrationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x200 | bitField0_;
	                androidRegistrationId_ = s;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setAppId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x40 | bitField0_;
	                appId_ = s;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setDeviceType(DeviceRegistrationRequest.DeviceType devicetype)
	        {
	            if(devicetype == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                deviceType_ = devicetype;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setLocale(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x10 | bitField0_;
	                locale_ = s;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setOldToken(ByteString bytestring)
	        {
	            if(bytestring == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x400 | bitField0_;
	                oldToken_ = bytestring;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setOwnerId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                ownerId_ = s;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setPhoneNumber(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x20 | bitField0_;
	                phoneNumber_ = s;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setRegistrationType(DeviceRegistrationRequest.RegistrationType registrationtype)
	        {
	            if(registrationtype == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                registrationType_ = registrationtype;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setToken(ByteString bytestring)
	        {
	            if(bytestring == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x80 | bitField0_;
	                token_ = bytestring;
	                return this;
	            }
	        }
	
	        public final DeviceRegistrationRequest.Builder setVerification(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                verification_ = s;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									EventSearchRequest
	//==================================================================================================
	public static interface EventSearchRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getContentQuery();
	
	    public abstract String getConversationId();
	
	    public abstract Data.ParticipantAttributes getFromQuery(int i);
	
	    public abstract int getFromQueryCount();
	
	    public abstract List getFromQueryList();
	
	    public abstract boolean getHasPhotoQuery();
	
	    public abstract Data.Location getLocationQuery();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract Data.TimeRange getTimeRangeQuery();
	
	    public abstract String getUnstructuredQuery();
	
	    public abstract boolean hasContentQuery();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasHasPhotoQuery();
	
	    public abstract boolean hasLocationQuery();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasTimeRangeQuery();
	
	    public abstract boolean hasUnstructuredQuery();
	}
	
	public static final class EventSearchRequest extends GeneratedMessageLite implements EventSearchRequestOrBuilder {
	
		private static final EventSearchRequest defaultInstance;
	    private int bitField0_;
	    private Object contentQuery_;
	    private Object conversationId_;
	    private List fromQuery_;
	    private boolean hasPhotoQuery_;
	    private Data.Location locationQuery_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;
	    private Data.TimeRange timeRangeQuery_;
	    private Object unstructuredQuery_;

	    static 
	    {
	        EventSearchRequest eventsearchrequest = new EventSearchRequest();
	        defaultInstance = eventsearchrequest;
	        eventsearchrequest.conversationId_ = "";
	        eventsearchrequest.unstructuredQuery_ = "";
	        eventsearchrequest.fromQuery_ = Collections.emptyList();
	        eventsearchrequest.contentQuery_ = "";
	        eventsearchrequest.locationQuery_ = Data.Location.getDefaultInstance();
	        eventsearchrequest.hasPhotoQuery_ = false;
	        eventsearchrequest.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	        eventsearchrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private EventSearchRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    EventSearchRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getContentQueryBytes()
	    {
	        Object obj = contentQuery_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            contentQuery_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static EventSearchRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getUnstructuredQueryBytes()
	    {
	        Object obj = unstructuredQuery_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            unstructuredQuery_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(EventSearchRequest eventsearchrequest)
	    {
	        return new Builder().mergeFrom(eventsearchrequest);
	    }
	
	    public final String getContentQuery()
	    {
	        Object obj = contentQuery_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                contentQuery_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final EventSearchRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Data.ParticipantAttributes getFromQuery(int i)
	    {
	        return (Data.ParticipantAttributes)fromQuery_.get(i);
	    }
	
	    public final int getFromQueryCount()
	    {
	        return fromQuery_.size();
	    }
	
	    public final List getFromQueryList()
	    {
	        return fromQuery_;
	    }
	
	    public final Data.ParticipantAttributesOrBuilder getFromQueryOrBuilder(int i)
	    {
	        return (Data.ParticipantAttributesOrBuilder)fromQuery_.get(i);
	    }
	
	    public final List getFromQueryOrBuilderList()
	    {
	        return fromQuery_;
	    }
	
	    public final boolean getHasPhotoQuery()
	    {
	        return hasPhotoQuery_;
	    }
	
	    public final Data.Location getLocationQuery()
	    {
	        return locationQuery_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getUnstructuredQueryBytes());
	            for(int l = 0; l < fromQuery_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(3, (MessageLite)fromQuery_.get(l));
	
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(4, getContentQueryBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(5, locationQuery_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeBoolSize(6, hasPhotoQuery_);
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeMessageSize(7, timeRangeQuery_);
	            if((0x40 & bitField0_) == 64)
	                k += CodedOutputStream.computeMessageSize(8, stubbyInfo_);
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final Data.TimeRange getTimeRangeQuery()
	    {
	        return timeRangeQuery_;
	    }
	
	    public final String getUnstructuredQuery()
	    {
	        Object obj = unstructuredQuery_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                unstructuredQuery_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final boolean hasContentQuery()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHasPhotoQuery()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLocationQuery()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimeRangeQuery()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUnstructuredQuery()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getUnstructuredQueryBytes());
	        for(int i = 0; i < fromQuery_.size(); i++)
	            codedoutputstream.writeMessage(3, (MessageLite)fromQuery_.get(i));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(4, getContentQueryBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(5, locationQuery_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeBool(6, hasPhotoQuery_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeMessage(7, timeRangeQuery_);
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeMessage(8, stubbyInfo_);
	    }
	    
	    //===========================================================
	    //						Builder
	    //===========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements EventSearchRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object contentQuery_;
	        private Object conversationId_;
	        private List fromQuery_;
	        private boolean hasPhotoQuery_;
	        private Data.Location locationQuery_;
	        private Data.StubbyInfo stubbyInfo_;
	        private Data.TimeRange timeRangeQuery_;
	        private Object unstructuredQuery_;

	        private Builder()
	        {
	            conversationId_ = "";
	            unstructuredQuery_ = "";
	            fromQuery_ = Collections.emptyList();
	            contentQuery_ = "";
	            locationQuery_ = Data.Location.getDefaultInstance();
	            timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public EventSearchRequest.Builder clone()
	        {
	            return (new EventSearchRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureFromQueryIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                fromQuery_ = new ArrayList(fromQuery_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public EventSearchRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    unstructuredQuery_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Data.ParticipantAttributes.Builder builder3 = Data.ParticipantAttributes.newBuilder();
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    addFromQuery(builder3.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    contentQuery_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    Data.Location.Builder builder2 = Data.Location.newBuilder();
	                    if(hasLocationQuery())
	                        builder2.mergeFrom(getLocationQuery());
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    setLocationQuery(builder2.buildPartial());
	                    break;
	
	                case 48: // '0'
	                    bitField0_ = 0x20 | bitField0_;
	                    hasPhotoQuery_ = codedinputstream.readBool();
	                    break;
	
	                case 58: // ':'
	                    Data.TimeRange.Builder builder1 = Data.TimeRange.newBuilder();
	                    if(hasTimeRangeQuery())
	                        builder1.mergeFrom(getTimeRangeQuery());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setTimeRangeQuery(builder1.buildPartial());
	                    break;
	
	                case 66: // 'B'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final EventSearchRequest.Builder addAllFromQuery(Iterable iterable)
	        {
	            ensureFromQueryIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, fromQuery_);
	            return this;
	        }
	
	        public final EventSearchRequest.Builder addFromQuery(int i, Data.ParticipantAttributes.Builder builder)
	        {
	            ensureFromQueryIsMutable();
	            fromQuery_.add(i, builder.build());
	            return this;
	        }
	
	        public final EventSearchRequest.Builder addFromQuery(int i, Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureFromQueryIsMutable();
	                fromQuery_.add(i, participantattributes);
	                return this;
	            }
	        }
	
	        public final EventSearchRequest.Builder addFromQuery(Data.ParticipantAttributes.Builder builder)
	        {
	            ensureFromQueryIsMutable();
	            fromQuery_.add(builder.build());
	            return this;
	        }
	
	        public final EventSearchRequest.Builder addFromQuery(Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureFromQueryIsMutable();
	                fromQuery_.add(participantattributes);
	                return this;
	            }
	        }
	
	        public final EventSearchRequest build()
	        {
	            EventSearchRequest eventsearchrequest = buildPartial();
	            if(!eventsearchrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("eventsearchrequest"));
	            else
	                return eventsearchrequest;
	        }
	
	        public final EventSearchRequest buildPartial()
	        {
	            EventSearchRequest eventsearchrequest = new EventSearchRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            eventsearchrequest.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            eventsearchrequest.unstructuredQuery_ = unstructuredQuery_;
	            if((4 & bitField0_) == 4)
	            {
	                fromQuery_ = Collections.unmodifiableList(fromQuery_);
	                bitField0_ = -5 & bitField0_;
	            }
	            eventsearchrequest.fromQuery_ = fromQuery_;
	            if((i & 8) == 8)
	                k |= 4;
	            eventsearchrequest.contentQuery_ = contentQuery_;
	            if((i & 0x10) == 16)
	                k |= 8;
	            eventsearchrequest.locationQuery_ = locationQuery_;
	            if((i & 0x20) == 32)
	                k |= 0x10;
	            eventsearchrequest.hasPhotoQuery_ = hasPhotoQuery_;
	            if((i & 0x40) == 64)
	                k |= 0x20;
	            eventsearchrequest.timeRangeQuery_ = timeRangeQuery_;
	            if((i & 0x80) == 128)
	                k |= 0x40;
	            eventsearchrequest.stubbyInfo_ = stubbyInfo_;
	            eventsearchrequest.bitField0_ = k;
	            return eventsearchrequest;
	        }
	
	        public final EventSearchRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            unstructuredQuery_ = "";
	            bitField0_ = -3 & bitField0_;
	            fromQuery_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            contentQuery_ = "";
	            bitField0_ = -9 & bitField0_;
	            locationQuery_ = Data.Location.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            hasPhotoQuery_ = false;
	            bitField0_ = 0xffffffdf & bitField0_;
	            timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearContentQuery()
	        {
	            bitField0_ = -9 & bitField0_;
	            contentQuery_ = EventSearchRequest.getDefaultInstance().getContentQuery();
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = EventSearchRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearFromQuery()
	        {
	            fromQuery_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearHasPhotoQuery()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            hasPhotoQuery_ = false;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearLocationQuery()
	        {
	            locationQuery_ = Data.Location.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearTimeRangeQuery()
	        {
	            timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder clearUnstructuredQuery()
	        {
	            bitField0_ = -3 & bitField0_;
	            unstructuredQuery_ = EventSearchRequest.getDefaultInstance().getUnstructuredQuery();
	            return this;
	        }
	
	        public final String getContentQuery()
	        {
	            Object obj = contentQuery_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                contentQuery_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final EventSearchRequest getDefaultInstanceForType()
	        {
	            return EventSearchRequest.getDefaultInstance();
	        }
	
	        public final Data.ParticipantAttributes getFromQuery(int i)
	        {
	            return (Data.ParticipantAttributes)fromQuery_.get(i);
	        }
	
	        public final int getFromQueryCount()
	        {
	            return fromQuery_.size();
	        }
	
	        public final List getFromQueryList()
	        {
	            return Collections.unmodifiableList(fromQuery_);
	        }
	
	        public final boolean getHasPhotoQuery()
	        {
	            return hasPhotoQuery_;
	        }
	
	        public final Data.Location getLocationQuery()
	        {
	            return locationQuery_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final Data.TimeRange getTimeRangeQuery()
	        {
	            return timeRangeQuery_;
	        }
	
	        public final String getUnstructuredQuery()
	        {
	            Object obj = unstructuredQuery_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                unstructuredQuery_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean hasContentQuery()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHasPhotoQuery()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLocationQuery()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimeRangeQuery()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUnstructuredQuery()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((EventSearchRequest)generatedmessagelite);
	        }
	
	        public final EventSearchRequest.Builder mergeFrom(EventSearchRequest eventsearchrequest)
	        {
	            if(eventsearchrequest == EventSearchRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(eventsearchrequest.hasConversationId())
	                setConversationId(eventsearchrequest.getConversationId());
	            if(eventsearchrequest.hasUnstructuredQuery())
	                setUnstructuredQuery(eventsearchrequest.getUnstructuredQuery());
	            if(!eventsearchrequest.fromQuery_.isEmpty())
	                if(fromQuery_.isEmpty())
	                {
	                    fromQuery_ = eventsearchrequest.fromQuery_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureFromQueryIsMutable();
	                    fromQuery_.addAll(eventsearchrequest.fromQuery_);
	                }
	            if(eventsearchrequest.hasContentQuery())
	                setContentQuery(eventsearchrequest.getContentQuery());
	            if(eventsearchrequest.hasLocationQuery())
	            {
	                Data.Location location = eventsearchrequest.getLocationQuery();
	                if((0x10 & bitField0_) == 16 && locationQuery_ != Data.Location.getDefaultInstance())
	                    locationQuery_ = Data.Location.newBuilder(locationQuery_).mergeFrom(location).buildPartial();
	                else
	                    locationQuery_ = location;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            if(eventsearchrequest.hasHasPhotoQuery())
	                setHasPhotoQuery(eventsearchrequest.getHasPhotoQuery());
	            if(eventsearchrequest.hasTimeRangeQuery())
	            {
	                Data.TimeRange timerange = eventsearchrequest.getTimeRangeQuery();
	                if((0x40 & bitField0_) == 64 && timeRangeQuery_ != Data.TimeRange.getDefaultInstance())
	                    timeRangeQuery_ = Data.TimeRange.newBuilder(timeRangeQuery_).mergeFrom(timerange).buildPartial();
	                else
	                    timeRangeQuery_ = timerange;
	                bitField0_ = 0x40 | bitField0_;
	            }
	            if(eventsearchrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = eventsearchrequest.getStubbyInfo();
	                if((0x80 & bitField0_) == 128 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            return this;
	        }
	
	        public final EventSearchRequest.Builder setContentQuery(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                contentQuery_ = s;
	                return this;
	            }
	        }
	
	        public final EventSearchRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final EventSearchRequest.Builder setFromQuery(int i, Data.ParticipantAttributes.Builder builder)
	        {
	            ensureFromQueryIsMutable();
	            fromQuery_.set(i, builder.build());
	            return this;
	        }
	
	        public final EventSearchRequest.Builder setFromQuery(int i, Data.ParticipantAttributes participantattributes)
	        {
	            if(participantattributes == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureFromQueryIsMutable();
	                fromQuery_.set(i, participantattributes);
	                return this;
	            }
	        }
	
	        public final EventSearchRequest.Builder setHasPhotoQuery(boolean flag)
	        {
	            bitField0_ = 0x20 | bitField0_;
	            hasPhotoQuery_ = flag;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder setLocationQuery(Data.Location.Builder builder)
	        {
	            locationQuery_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder setLocationQuery(Data.Location location)
	        {
	            if(location == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                locationQuery_ = location;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
	
	        public final EventSearchRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	
	        public final EventSearchRequest.Builder setTimeRangeQuery(Data.TimeRange.Builder builder)
	        {
	            timeRangeQuery_ = builder.build();
	            bitField0_ = 0x40 | bitField0_;
	            return this;
	        }
	
	        public final EventSearchRequest.Builder setTimeRangeQuery(Data.TimeRange timerange)
	        {
	            if(timerange == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                timeRangeQuery_ = timerange;
	                bitField0_ = 0x40 | bitField0_;
	                return this;
	            }
	        }
	
	        public final EventSearchRequest.Builder setUnstructuredQuery(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                unstructuredQuery_ = s;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									EventStreamRequest
	//==================================================================================================
	public static interface EventStreamRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract int getCount();
	
	    public abstract long getEnd();
	
	    public abstract String getMessageId();
	
	    public abstract EventStreamRequest.Order getOrder();
	
	    public abstract String getSenderId();
	
	    public abstract long getStart();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasCount();
	
	    public abstract boolean hasEnd();
	
	    public abstract boolean hasMessageId();
	
	    public abstract boolean hasOrder();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasStart();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class EventStreamRequest extends GeneratedMessageLite implements EventStreamRequestOrBuilder {
	
		private static final EventStreamRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private int count_;
	    private long end_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object messageId_;
	    private Order order_;
	    private Object senderId_;
	    private long start_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        EventStreamRequest eventstreamrequest = new EventStreamRequest();
	        defaultInstance = eventstreamrequest;
	        eventstreamrequest.conversationId_ = "";
	        eventstreamrequest.messageId_ = "";
	        eventstreamrequest.start_ = 0L;
	        eventstreamrequest.order_ = Order.EARLIEST;
	        eventstreamrequest.end_ = 0L;
	        eventstreamrequest.count_ = 0;
	        eventstreamrequest.senderId_ = "";
	        eventstreamrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private EventStreamRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    EventStreamRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static EventStreamRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getMessageIdBytes()
	    {
	        Object obj = messageId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            messageId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(EventStreamRequest eventstreamrequest)
	    {
	        return new Builder().mergeFrom(eventstreamrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getCount()
	    {
	        return count_;
	    }
	
	    public final EventStreamRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final long getEnd()
	    {
	        return end_;
	    }
	
	    public final String getMessageId()
	    {
	        Object obj = messageId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                messageId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Order getOrder()
	    {
	        return order_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getMessageIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeInt64Size(3, start_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeEnumSize(4, order_.getNumber());
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeInt64Size(5, end_);
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeInt32Size(6, count_);
	            if((0x40 & bitField0_) == 64)
	                k += CodedOutputStream.computeBytesSize(7, getSenderIdBytes());
	            if((0x80 & bitField0_) == 128)
	                k += CodedOutputStream.computeMessageSize(8, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final long getStart()
	    {
	        return start_;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasCount()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEnd()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMessageId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasOrder()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStart()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getMessageIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeInt64(3, start_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeEnum(4, order_.getNumber());
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeInt64(5, end_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeInt32(6, count_);
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeBytes(7, getSenderIdBytes());
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeMessage(8, stubbyInfo_);
	    }
	    
	    //===========================================================
	    //						Order
	    //===========================================================
	    public static enum Order implements com.google.protobuf.Internal.EnumLite {
	    	
	    	EARLIEST(1),
	    	LATEST(2);
	    	
	    	private int value;
	    	
	    	private Order(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static Order valueOf(int value) {
	    		for(Order o : Order.values()) {
	    			if(o.value == value) {
	    				return o;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //===========================================================
	    //						Builder
	    //===========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements EventStreamRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private int count_;
	        private long end_;
	        private Object messageId_;
	        private EventStreamRequest.Order order_;
	        private Object senderId_;
	        private long start_;
	        private Data.StubbyInfo stubbyInfo_;


	        private Builder()
	        {
	            conversationId_ = "";
	            messageId_ = "";
	            order_ = EventStreamRequest.Order.EARLIEST;
	            senderId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public EventStreamRequest.Builder clone()
	        {
	            return (new EventStreamRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public EventStreamRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    messageId_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    start_ = codedinputstream.readInt64();
	                    break;
	
	                case 32: // ' '
	                    EventStreamRequest.Order order = EventStreamRequest.Order.valueOf(codedinputstream.readEnum());
	                    if(order != null)
	                    {
	                        bitField0_ = 8 | bitField0_;
	                        order_ = order;
	                    }
	                    break;
	
	                case 40: // '('
	                    bitField0_ = 0x10 | bitField0_;
	                    end_ = codedinputstream.readInt64();
	                    break;
	
	                case 48: // '0'
	                    bitField0_ = 0x20 | bitField0_;
	                    count_ = codedinputstream.readInt32();
	                    break;
	
	                case 58: // ':'
	                    bitField0_ = 0x40 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 66: // 'B'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final EventStreamRequest build()
	        {
	            EventStreamRequest eventstreamrequest = buildPartial();
	            if(!eventstreamrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("eventstreamrequest"));
	            else
	                return eventstreamrequest;
	        }
	
	        public final EventStreamRequest buildPartial()
	        {
	            EventStreamRequest eventstreamrequest = new EventStreamRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            eventstreamrequest.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            eventstreamrequest.messageId_ = messageId_;
	            if((i & 4) == 4)
	                k |= 4;
	            eventstreamrequest.start_ = start_;
	            if((i & 8) == 8)
	                k |= 8;
	            eventstreamrequest.order_ = order_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            eventstreamrequest.end_ = end_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            eventstreamrequest.count_ = count_;
	            if((i & 0x40) == 64)
	                k |= 0x40;
	            eventstreamrequest.senderId_ = senderId_;
	            if((i & 0x80) == 128)
	                k |= 0x80;
	            eventstreamrequest.stubbyInfo_ = stubbyInfo_;
	            eventstreamrequest.bitField0_ = k;
	            return eventstreamrequest;
	        }
	
	        public final EventStreamRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            messageId_ = "";
	            bitField0_ = -3 & bitField0_;
	            start_ = 0L;
	            bitField0_ = -5 & bitField0_;
	            order_ = EventStreamRequest.Order.EARLIEST;
	            bitField0_ = -9 & bitField0_;
	            end_ = 0L;
	            bitField0_ = 0xffffffef & bitField0_;
	            count_ = 0;
	            bitField0_ = 0xffffffdf & bitField0_;
	            senderId_ = "";
	            bitField0_ = 0xffffffbf & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = EventStreamRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearCount()
	        {
	            bitField0_ = 0xffffffdf & bitField0_;
	            count_ = 0;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearEnd()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            end_ = 0L;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearMessageId()
	        {
	            bitField0_ = -3 & bitField0_;
	            messageId_ = EventStreamRequest.getDefaultInstance().getMessageId();
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearOrder()
	        {
	            bitField0_ = -9 & bitField0_;
	            order_ = EventStreamRequest.Order.EARLIEST;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearSenderId()
	        {
	            bitField0_ = 0xffffffbf & bitField0_;
	            senderId_ = EventStreamRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearStart()
	        {
	            bitField0_ = -5 & bitField0_;
	            start_ = 0L;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final int getCount()
	        {
	            return count_;
	        }
	
	        public final EventStreamRequest getDefaultInstanceForType()
	        {
	            return EventStreamRequest.getDefaultInstance();
	        }
	
	        public final long getEnd()
	        {
	            return end_;
	        }
	
	        public final String getMessageId()
	        {
	            Object obj = messageId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                messageId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final EventStreamRequest.Order getOrder()
	        {
	            return order_;
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getStart()
	        {
	            return start_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasCount()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEnd()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMessageId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasOrder()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStart()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((EventStreamRequest)generatedmessagelite);
	        }
	
	        public final EventStreamRequest.Builder mergeFrom(EventStreamRequest eventstreamrequest)
	        {
	            if(eventstreamrequest == EventStreamRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(eventstreamrequest.hasConversationId())
	                setConversationId(eventstreamrequest.getConversationId());
	            if(eventstreamrequest.hasMessageId())
	                setMessageId(eventstreamrequest.getMessageId());
	            if(eventstreamrequest.hasStart())
	                setStart(eventstreamrequest.getStart());
	            if(eventstreamrequest.hasOrder())
	                setOrder(eventstreamrequest.getOrder());
	            if(eventstreamrequest.hasEnd())
	                setEnd(eventstreamrequest.getEnd());
	            if(eventstreamrequest.hasCount())
	                setCount(eventstreamrequest.getCount());
	            if(eventstreamrequest.hasSenderId())
	                setSenderId(eventstreamrequest.getSenderId());
	            if(eventstreamrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = eventstreamrequest.getStubbyInfo();
	                if((0x80 & bitField0_) == 128 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            return this;
	        }
	
	        public final EventStreamRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final EventStreamRequest.Builder setCount(int i)
	        {
	            bitField0_ = 0x20 | bitField0_;
	            count_ = i;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder setEnd(long l)
	        {
	            bitField0_ = 0x10 | bitField0_;
	            end_ = l;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder setMessageId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                messageId_ = s;
	                return this;
	            }
	        }
	
	        public final EventStreamRequest.Builder setOrder(EventStreamRequest.Order order)
	        {
	            if(order == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                order_ = order;
	                return this;
	            }
	        }
	
	        public final EventStreamRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 0x40 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final EventStreamRequest.Builder setStart(long l)
	        {
	            bitField0_ = 4 | bitField0_;
	            start_ = l;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final EventStreamRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									GlobalConversationPreferences
	//==================================================================================================
	public static interface GlobalConversationPreferencesRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract GlobalConversationPreferencesRequest.LocationModification getLocationModification();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract GlobalConversationPreferencesRequest.TagModification getTagModification(int i);
	
	    public abstract int getTagModificationCount();
	
	    public abstract List getTagModificationList();
	
	    public abstract Data.ConversationMetadata.ConversationVisibility getVisibilityModification();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasLocationModification();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasVisibilityModification();
	}
	
	public static final class GlobalConversationPreferencesRequest extends GeneratedMessageLite implements GlobalConversationPreferencesRequestOrBuilder {
	
		private static final GlobalConversationPreferencesRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private LocationModification locationModification_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;
	    private List tagModification_;
	    private Data.ConversationMetadata.ConversationVisibility visibilityModification_;

	    static 
	    {
	        GlobalConversationPreferencesRequest globalconversationpreferencesrequest = new GlobalConversationPreferencesRequest();
	        defaultInstance = globalconversationpreferencesrequest;
	        globalconversationpreferencesrequest.conversationId_ = "";
	        globalconversationpreferencesrequest.visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;
	        globalconversationpreferencesrequest.tagModification_ = Collections.emptyList();
	        globalconversationpreferencesrequest.locationModification_ = LocationModification.getDefaultInstance();
	        globalconversationpreferencesrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private GlobalConversationPreferencesRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    GlobalConversationPreferencesRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static GlobalConversationPreferencesRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(GlobalConversationPreferencesRequest globalconversationpreferencesrequest)
	    {
	        return new Builder().mergeFrom(globalconversationpreferencesrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final GlobalConversationPreferencesRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final LocationModification getLocationModification()
	    {
	        return locationModification_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(2, visibilityModification_.getNumber());
	            for(int l = 0; l < tagModification_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(3, (MessageLite)tagModification_.get(l));
	
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(4, locationModification_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(5, stubbyInfo_);
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final TagModification getTagModification(int i)
	    {
	        return (TagModification)tagModification_.get(i);
	    }
	
	    public final int getTagModificationCount()
	    {
	        return tagModification_.size();
	    }
	
	    public final List getTagModificationList()
	    {
	        return tagModification_;
	    }
	
	    public final TagModificationOrBuilder getTagModificationOrBuilder(int i)
	    {
	        return (TagModificationOrBuilder)tagModification_.get(i);
	    }
	
	    public final List getTagModificationOrBuilderList()
	    {
	        return tagModification_;
	    }
	
	    public final Data.ConversationMetadata.ConversationVisibility getVisibilityModification()
	    {
	        return visibilityModification_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLocationModification()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasVisibilityModification()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(2, visibilityModification_.getNumber());
	        for(int i = 0; i < tagModification_.size(); i++)
	            codedoutputstream.writeMessage(3, (MessageLite)tagModification_.get(i));
	
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(4, locationModification_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(5, stubbyInfo_);
	    }
	    
	    //===========================================================================
	    //								PreferencesModificationType
	    //===========================================================================
	    public static enum PreferencesModificationType implements com.google.protobuf.Internal.EnumLite {
	    	
	    	ADD(1),
	    	REMOVE(2);
	    	
	    	private int value;
	    	
	    	private PreferencesModificationType(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static PreferencesModificationType valueOf(int value) {
	    		for(PreferencesModificationType t  : PreferencesModificationType.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    
	    //===========================================================================
	    //								LocationModification
	    //===========================================================================
	    public static interface LocationModificationOrBuilder extends MessageLiteOrBuilder {

	        public abstract Data.Location getLocation();
	
	        public abstract GlobalConversationPreferencesRequest.PreferencesModificationType getType();
	
	        public abstract boolean hasLocation();
	
	        public abstract boolean hasType();
	    }
	    
	    public static final class LocationModification extends GeneratedMessageLite implements GlobalConversationPreferencesRequest.LocationModificationOrBuilder
	    {
	
	    	private static final GlobalConversationPreferencesRequest.LocationModification defaultInstance;
	        private int bitField0_;
	        private Data.Location location_;
	        private byte memoizedIsInitialized;
	        private int memoizedSerializedSize;
	        private GlobalConversationPreferencesRequest.PreferencesModificationType type_;

	        static 
	        {
	            GlobalConversationPreferencesRequest.LocationModification locationmodification = new GlobalConversationPreferencesRequest.LocationModification();
	            defaultInstance = locationmodification;
	            locationmodification.type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
	            locationmodification.location_ = Data.Location.getDefaultInstance();
	        }

	        private LocationModification()
	        {
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }

	        LocationModification(Builder builder)
	        {
	            super();
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }
	        
	        public static GlobalConversationPreferencesRequest.LocationModification getDefaultInstance()
	        {
	            return defaultInstance;
	        }
	
	        public static Builder newBuilder()
	        {
	            return new Builder();
	        }
	
	        public static Builder newBuilder(GlobalConversationPreferencesRequest.LocationModification locationmodification)
	        {
	            return new Builder().mergeFrom(locationmodification);
	        }
	
	        public final GlobalConversationPreferencesRequest.LocationModification getDefaultInstanceForType()
	        {
	            return defaultInstance;
	        }
	
	        public final Data.Location getLocation()
	        {
	            return location_;
	        }
	
	        public final int getSerializedSize()
	        {
	            int i = memoizedSerializedSize;
	            int l;
	            if(i != -1)
	            {
	                l = i;
	            } else
	            {
	                int j = 1 & bitField0_;
	                int k = 0;
	                if(j == 1)
	                    k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	                if((2 & bitField0_) == 2)
	                    k += CodedOutputStream.computeMessageSize(2, location_);
	                memoizedSerializedSize = k;
	                l = k;
	            }
	            return l;
	        }
	
	        public final GlobalConversationPreferencesRequest.PreferencesModificationType getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasLocation()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            boolean flag = true;
	            byte byte0 = memoizedIsInitialized;
	            if(byte0 != -1)
	            {
	                if(byte0 != 1)
	                    flag = false;
	            } else
	            {
	                memoizedIsInitialized = 1;
	            }
	            return flag;
	        }
	
	        public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	        {
	            return new Builder();
	        }
	
	        public final com.google.protobuf.MessageLite.Builder toBuilder()
	        {
	            return new Builder().mergeFrom(this);
	        }
	
	        protected final Object writeReplace()
	            throws ObjectStreamException
	        {
	            return super.writeReplace();
	        }
	
	        public final void writeTo(CodedOutputStream codedoutputstream)
	            throws IOException
	        {
	            getSerializedSize();
	            if((1 & bitField0_) == 1)
	                codedoutputstream.writeEnum(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                codedoutputstream.writeMessage(2, location_);
	        }
	        
	        //==========================================
	        //				Builder
	        //==========================================
	        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements GlobalConversationPreferencesRequest.LocationModificationOrBuilder {
	
	        	private int bitField0_;
		        private Data.Location location_;
		        private GlobalConversationPreferencesRequest.PreferencesModificationType type_;


		        private Builder()
		        {
		            type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
		            location_ = Data.Location.getDefaultInstance();
		        }
		        
		        public GlobalConversationPreferencesRequest.LocationModification.Builder clone()
		        {
		            return (new GlobalConversationPreferencesRequest.LocationModification.Builder()).mergeFrom(buildPartial());
		        }
	
		        public GlobalConversationPreferencesRequest.LocationModification.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
		            throws IOException
		        {
		            do
		            {
		                int i = codedinputstream.readTag();
		                switch(i)
		                {
		                default:
		                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
		                        continue;
		                    // fall through
	
		                case 0: // '\0'
		                    return this;
	
		                case 8: // '\b'
		                    GlobalConversationPreferencesRequest.PreferencesModificationType preferencesmodificationtype = GlobalConversationPreferencesRequest.PreferencesModificationType.valueOf(codedinputstream.readEnum());
		                    if(preferencesmodificationtype != null)
		                    {
		                        bitField0_ = 1 | bitField0_;
		                        type_ = preferencesmodificationtype;
		                    }
		                    break;
	
		                case 18: // '\022'
		                    Data.Location.Builder builder = Data.Location.newBuilder();
		                    if(hasLocation())
		                        builder.mergeFrom(getLocation());
		                    codedinputstream.readMessage(builder, extensionregistrylite);
		                    setLocation(builder.buildPartial());
		                    break;
		                }
		            } while(true);
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification build()
		        {
		            GlobalConversationPreferencesRequest.LocationModification locationmodification = buildPartial();
		            if(!locationmodification.isInitialized())
		                throw new UninitializedMessageException(Arrays.asList("locationmodification"));
		            else
		                return locationmodification;
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification buildPartial()
		        {
		            GlobalConversationPreferencesRequest.LocationModification locationmodification = new GlobalConversationPreferencesRequest.LocationModification(this);
		            int i = bitField0_;
		            int j = i & 1;
		            int k = 0;
		            if(j == 1)
		                k = 1;
		            locationmodification.type_ = type_;
		            if((i & 2) == 2)
		                k |= 2;
		            locationmodification.location_ = location_;
		            locationmodification.bitField0_ = k;
		            return locationmodification;
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification.Builder clear()
		        {
		            super.clear();
		            type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
		            bitField0_ = -2 & bitField0_;
		            location_ = Data.Location.getDefaultInstance();
		            bitField0_ = -3 & bitField0_;
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification.Builder clearLocation()
		        {
		            location_ = Data.Location.getDefaultInstance();
		            bitField0_ = -3 & bitField0_;
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification.Builder clearType()
		        {
		            bitField0_ = -2 & bitField0_;
		            type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification getDefaultInstanceForType()
		        {
		            return GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
		        }
	
		        public final Data.Location getLocation()
		        {
		            return location_;
		        }
	
		        public final GlobalConversationPreferencesRequest.PreferencesModificationType getType()
		        {
		            return type_;
		        }
	
		        public final boolean hasLocation()
		        {
		            boolean flag;
		            if((2 & bitField0_) == 2)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasType()
		        {
		            boolean flag = true;
		            if((1 & bitField0_) != 1)
		                flag = false;
		            return flag;
		        }
	
		        public final boolean isInitialized()
		        {
		            return true;
		        }
	
		        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
		        {
		            return mergeFrom((GlobalConversationPreferencesRequest.LocationModification)generatedmessagelite);
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification.Builder mergeFrom(GlobalConversationPreferencesRequest.LocationModification locationmodification)
		        {
		            if(locationmodification == GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance()) {
		            	return this;
		            }
		            
		            if(locationmodification.hasType())
		                setType(locationmodification.getType());
		            if(locationmodification.hasLocation())
		            {
		                Data.Location location = locationmodification.getLocation();
		                if((2 & bitField0_) == 2 && location_ != Data.Location.getDefaultInstance())
		                    location_ = Data.Location.newBuilder(location_).mergeFrom(location).buildPartial();
		                else
		                    location_ = location;
		                bitField0_ = 2 | bitField0_;
		            }
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification.Builder setLocation(Data.Location.Builder builder)
		        {
		            location_ = builder.build();
		            bitField0_ = 2 | bitField0_;
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification.Builder setLocation(Data.Location location)
		        {
		            if(location == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                location_ = location;
		                bitField0_ = 2 | bitField0_;
		                return this;
		            }
		        }
	
		        public final GlobalConversationPreferencesRequest.LocationModification.Builder setType(GlobalConversationPreferencesRequest.PreferencesModificationType preferencesmodificationtype)
		        {
		            if(preferencesmodificationtype == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                bitField0_ = 1 | bitField0_;
		                type_ = preferencesmodificationtype;
		                return this;
		            }
		        }
		    }
	    }
	    
	    //===========================================================================
	    //								TagModification
	    //===========================================================================
        public static interface TagModificationOrBuilder extends MessageLiteOrBuilder {

	        public abstract String getTag();

	        public abstract GlobalConversationPreferencesRequest.PreferencesModificationType getType();

	        public abstract boolean hasTag();

	        public abstract boolean hasType();
	    }
        
        public static final class TagModification extends GeneratedMessageLite implements GlobalConversationPreferencesRequest.TagModificationOrBuilder {
        	
        	private static final GlobalConversationPreferencesRequest.TagModification defaultInstance;
	        private int bitField0_;
	        private byte memoizedIsInitialized;
	        private int memoizedSerializedSize;
	        private Object tag_;
	        private GlobalConversationPreferencesRequest.PreferencesModificationType type_;

	        static 
	        {
	            GlobalConversationPreferencesRequest.TagModification tagmodification = new GlobalConversationPreferencesRequest.TagModification();
	            defaultInstance = tagmodification;
	            tagmodification.type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
	            tagmodification.tag_ = "";
	        }

	        private TagModification()
	        {
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }

	        TagModification(Builder builder)
	        {
	            super();
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }

	        public static GlobalConversationPreferencesRequest.TagModification getDefaultInstance()
	        {
	            return defaultInstance;
	        }

	        private ByteString getTagBytes()
	        {
	            Object obj = tag_;
	            ByteString bytestring;
	            if(obj instanceof String)
	            {
	                bytestring = ByteString.copyFromUtf8((String)obj);
	                tag_ = bytestring;
	            } else
	            {
	                bytestring = (ByteString)obj;
	            }
	            return bytestring;
	        }

	        public static Builder newBuilder()
	        {
	            return new Builder();
	        }

	        public final GlobalConversationPreferencesRequest.TagModification getDefaultInstanceForType()
	        {
	            return defaultInstance;
	        }

	        public final int getSerializedSize()
	        {
	            int i = memoizedSerializedSize;
	            int l;
	            if(i != -1)
	            {
	                l = i;
	            } else
	            {
	                int j = 1 & bitField0_;
	                int k = 0;
	                if(j == 1)
	                    k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	                if((2 & bitField0_) == 2)
	                    k += CodedOutputStream.computeBytesSize(2, getTagBytes());
	                memoizedSerializedSize = k;
	                l = k;
	            }
	            return l;
	        }

	        public final String getTag()
	        {
	            Object obj = tag_;
	            String s1;
	            if(obj instanceof String)
	            {
	                s1 = (String)obj;
	            } else
	            {
	                ByteString bytestring = (ByteString)obj;
	                String s = bytestring.toStringUtf8();
	                if(Internal.isValidUtf8(bytestring))
	                    tag_ = s;
	                s1 = s;
	            }
	            return s1;
	        }

	        public final GlobalConversationPreferencesRequest.PreferencesModificationType getType()
	        {
	            return type_;
	        }

	        public final boolean hasTag()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }

	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }

	        public final boolean isInitialized()
	        {
	            boolean flag = true;
	            byte byte0 = memoizedIsInitialized;
	            if(byte0 != -1)
	            {
	                if(byte0 != 1)
	                    flag = false;
	            } else
	            {
	                memoizedIsInitialized = 1;
	            }
	            return flag;
	        }

	        public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	        {
	            return new Builder();
	        }

	        public final com.google.protobuf.MessageLite.Builder toBuilder()
	        {
	            return new Builder().mergeFrom(this);
	        }

	        protected final Object writeReplace()
	            throws ObjectStreamException
	        {
	            return super.writeReplace();
	        }

	        public final void writeTo(CodedOutputStream codedoutputstream)
	            throws IOException
	        {
	            getSerializedSize();
	            if((1 & bitField0_) == 1)
	                codedoutputstream.writeEnum(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                codedoutputstream.writeBytes(2, getTagBytes());
	        }
	        
	        //========================================
	        //				Builder
	        //========================================
	        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements GlobalConversationPreferencesRequest.TagModificationOrBuilder {
	
	        	private int bitField0_;
		        private Object tag_;
		        private GlobalConversationPreferencesRequest.PreferencesModificationType type_;


		        private Builder()
		        {
		            type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
		            tag_ = "";
		        }
		        
		        public GlobalConversationPreferencesRequest.TagModification.Builder clone()
		        {
		            return (new GlobalConversationPreferencesRequest.TagModification.Builder()).mergeFrom(buildPartial());
		        }
	
		        public GlobalConversationPreferencesRequest.TagModification.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
		            throws IOException
		        {
		            do
		            {
		                int i = codedinputstream.readTag();
		                switch(i)
		                {
		                default:
		                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
		                        continue;
		                    // fall through
	
		                case 0: // '\0'
		                    return this;
	
		                case 8: // '\b'
		                    GlobalConversationPreferencesRequest.PreferencesModificationType preferencesmodificationtype = GlobalConversationPreferencesRequest.PreferencesModificationType.valueOf(codedinputstream.readEnum());
		                    if(preferencesmodificationtype != null)
		                    {
		                        bitField0_ = 1 | bitField0_;
		                        type_ = preferencesmodificationtype;
		                    }
		                    break;
	
		                case 18: // '\022'
		                    bitField0_ = 2 | bitField0_;
		                    tag_ = codedinputstream.readBytes();
		                    break;
		                }
		            } while(true);
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification build()
		        {
		            GlobalConversationPreferencesRequest.TagModification tagmodification = buildPartial();
		            if(!tagmodification.isInitialized())
		                throw new UninitializedMessageException(Arrays.asList("tagmodification"));
		            else
		                return tagmodification;
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification buildPartial()
		        {
		            GlobalConversationPreferencesRequest.TagModification tagmodification = new GlobalConversationPreferencesRequest.TagModification(this);
		            int i = bitField0_;
		            int j = i & 1;
		            int k = 0;
		            if(j == 1)
		                k = 1;
		            tagmodification.type_ = type_;
		            if((i & 2) == 2)
		                k |= 2;
		            tagmodification.tag_ = tag_;
		            tagmodification.bitField0_ = k;
		            return tagmodification;
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification.Builder clear()
		        {
		            super.clear();
		            type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
		            bitField0_ = -2 & bitField0_;
		            tag_ = "";
		            bitField0_ = -3 & bitField0_;
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification.Builder clearTag()
		        {
		            bitField0_ = -3 & bitField0_;
		            tag_ = GlobalConversationPreferencesRequest.TagModification.getDefaultInstance().getTag();
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification.Builder clearType()
		        {
		            bitField0_ = -2 & bitField0_;
		            type_ = GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification getDefaultInstanceForType()
		        {
		            return GlobalConversationPreferencesRequest.TagModification.getDefaultInstance();
		        }
	
		        public final String getTag()
		        {
		            Object obj = tag_;
		            String s;
		            if(!(obj instanceof String))
		            {
		                s = ((ByteString)obj).toStringUtf8();
		                tag_ = s;
		            } else
		            {
		                s = (String)obj;
		            }
		            return s;
		        }
	
		        public final GlobalConversationPreferencesRequest.PreferencesModificationType getType()
		        {
		            return type_;
		        }
	
		        public final boolean hasTag()
		        {
		            boolean flag;
		            if((2 & bitField0_) == 2)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasType()
		        {
		            boolean flag = true;
		            if((1 & bitField0_) != 1)
		                flag = false;
		            return flag;
		        }
	
		        public final boolean isInitialized()
		        {
		            return true;
		        }
	
		        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
		        {
		            return mergeFrom((GlobalConversationPreferencesRequest.TagModification)generatedmessagelite);
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification.Builder mergeFrom(GlobalConversationPreferencesRequest.TagModification tagmodification)
		        {
		            if(tagmodification == GlobalConversationPreferencesRequest.TagModification.getDefaultInstance()) {
		            	return this;
		            }
		            
		            if(tagmodification.hasType())
		                setType(tagmodification.getType());
		            if(tagmodification.hasTag())
		                setTag(tagmodification.getTag());
		            return this;
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification.Builder setTag(String s)
		        {
		            if(s == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                bitField0_ = 2 | bitField0_;
		                tag_ = s;
		                return this;
		            }
		        }
	
		        public final GlobalConversationPreferencesRequest.TagModification.Builder setType(GlobalConversationPreferencesRequest.PreferencesModificationType preferencesmodificationtype)
		        {
		            if(preferencesmodificationtype == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                bitField0_ = 1 | bitField0_;
		                type_ = preferencesmodificationtype;
		                return this;
		            }
		        }
		    }
	    }
        
	    //===========================================================================
	    //								Builder
	    //===========================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements GlobalConversationPreferencesRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private GlobalConversationPreferencesRequest.LocationModification locationModification_;
	        private Data.StubbyInfo stubbyInfo_;
	        private List tagModification_;
	        private Data.ConversationMetadata.ConversationVisibility visibilityModification_;


	        private Builder()
	        {
	            conversationId_ = "";
	            visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;
	            tagModification_ = Collections.emptyList();
	            locationModification_ = GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public GlobalConversationPreferencesRequest.Builder clone()
	        {
	            return (new GlobalConversationPreferencesRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureTagModificationIsMutable()
	        {
	            if((4 & bitField0_) != 4)
	            {
	                tagModification_ = new ArrayList(tagModification_);
	                bitField0_ = 4 | bitField0_;
	            }
	        }
	
	        public GlobalConversationPreferencesRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 16: // '\020'
	                    Data.ConversationMetadata.ConversationVisibility conversationvisibility = Data.ConversationMetadata.ConversationVisibility.valueOf(codedinputstream.readEnum());
	                    if(conversationvisibility != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        visibilityModification_ = conversationvisibility;
	                    }
	                    break;
	
	                case 26: // '\032'
	                    GlobalConversationPreferencesRequest.TagModification.Builder builder2 = GlobalConversationPreferencesRequest.TagModification.newBuilder();
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    addTagModification(builder2.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    GlobalConversationPreferencesRequest.LocationModification.Builder builder1 = GlobalConversationPreferencesRequest.LocationModification.newBuilder();
	                    if(hasLocationModification())
	                        builder1.mergeFrom(getLocationModification());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setLocationModification(builder1.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder addAllTagModification(Iterable iterable)
	        {
	            ensureTagModificationIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, tagModification_);
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder addTagModification(int i, GlobalConversationPreferencesRequest.TagModification.Builder builder)
	        {
	            ensureTagModificationIsMutable();
	            tagModification_.add(i, builder.build());
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder addTagModification(int i, GlobalConversationPreferencesRequest.TagModification tagmodification)
	        {
	            if(tagmodification == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureTagModificationIsMutable();
	                tagModification_.add(i, tagmodification);
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder addTagModification(GlobalConversationPreferencesRequest.TagModification.Builder builder)
	        {
	            ensureTagModificationIsMutable();
	            tagModification_.add(builder.build());
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder addTagModification(GlobalConversationPreferencesRequest.TagModification tagmodification)
	        {
	            if(tagmodification == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureTagModificationIsMutable();
	                tagModification_.add(tagmodification);
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesRequest build()
	        {
	            GlobalConversationPreferencesRequest globalconversationpreferencesrequest = buildPartial();
	            if(!globalconversationpreferencesrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("globalconversationpreferencesrequest"));
	            else
	                return globalconversationpreferencesrequest;
	        }
	
	        public final GlobalConversationPreferencesRequest buildPartial()
	        {
	            GlobalConversationPreferencesRequest globalconversationpreferencesrequest = new GlobalConversationPreferencesRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            globalconversationpreferencesrequest.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            globalconversationpreferencesrequest.visibilityModification_ = visibilityModification_;
	            if((4 & bitField0_) == 4)
	            {
	                tagModification_ = Collections.unmodifiableList(tagModification_);
	                bitField0_ = -5 & bitField0_;
	            }
	            globalconversationpreferencesrequest.tagModification_ = tagModification_;
	            if((i & 8) == 8)
	                k |= 4;
	            globalconversationpreferencesrequest.locationModification_ = locationModification_;
	            if((i & 0x10) == 16)
	                k |= 8;
	            globalconversationpreferencesrequest.stubbyInfo_ = stubbyInfo_;
	            globalconversationpreferencesrequest.bitField0_ = k;
	            return globalconversationpreferencesrequest;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;
	            bitField0_ = -3 & bitField0_;
	            tagModification_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            locationModification_ = GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = GlobalConversationPreferencesRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder clearLocationModification()
	        {
	            locationModification_ = GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder clearTagModification()
	        {
	            tagModification_ = Collections.emptyList();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder clearVisibilityModification()
	        {
	            bitField0_ = -3 & bitField0_;
	            visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final GlobalConversationPreferencesRequest getDefaultInstanceForType()
	        {
	            return GlobalConversationPreferencesRequest.getDefaultInstance();
	        }
	
	        public final GlobalConversationPreferencesRequest.LocationModification getLocationModification()
	        {
	            return locationModification_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final GlobalConversationPreferencesRequest.TagModification getTagModification(int i)
	        {
	            return (GlobalConversationPreferencesRequest.TagModification)tagModification_.get(i);
	        }
	
	        public final int getTagModificationCount()
	        {
	            return tagModification_.size();
	        }
	
	        public final List getTagModificationList()
	        {
	            return Collections.unmodifiableList(tagModification_);
	        }
	
	        public final Data.ConversationMetadata.ConversationVisibility getVisibilityModification()
	        {
	            return visibilityModification_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLocationModification()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasVisibilityModification()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((GlobalConversationPreferencesRequest)generatedmessagelite);
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder mergeFrom(GlobalConversationPreferencesRequest globalconversationpreferencesrequest)
	        {
	            if(globalconversationpreferencesrequest == GlobalConversationPreferencesRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(globalconversationpreferencesrequest.hasConversationId())
	                setConversationId(globalconversationpreferencesrequest.getConversationId());
	            if(globalconversationpreferencesrequest.hasVisibilityModification())
	                setVisibilityModification(globalconversationpreferencesrequest.getVisibilityModification());
	            if(!globalconversationpreferencesrequest.tagModification_.isEmpty())
	                if(tagModification_.isEmpty())
	                {
	                    tagModification_ = globalconversationpreferencesrequest.tagModification_;
	                    bitField0_ = -5 & bitField0_;
	                } else
	                {
	                    ensureTagModificationIsMutable();
	                    tagModification_.addAll(globalconversationpreferencesrequest.tagModification_);
	                }
	            if(globalconversationpreferencesrequest.hasLocationModification())
	            {
	                GlobalConversationPreferencesRequest.LocationModification locationmodification = globalconversationpreferencesrequest.getLocationModification();
	                if((8 & bitField0_) == 8 && locationModification_ != GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance())
	                    locationModification_ = GlobalConversationPreferencesRequest.LocationModification.newBuilder(locationModification_).mergeFrom(locationmodification).buildPartial();
	                else
	                    locationModification_ = locationmodification;
	                bitField0_ = 8 | bitField0_;
	            }
	            if(globalconversationpreferencesrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = globalconversationpreferencesrequest.getStubbyInfo();
	                if((0x10 & bitField0_) == 16 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setLocationModification(GlobalConversationPreferencesRequest.LocationModification.Builder builder)
	        {
	            locationModification_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setLocationModification(GlobalConversationPreferencesRequest.LocationModification locationmodification)
	        {
	            if(locationmodification == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                locationModification_ = locationmodification;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setTagModification(int i, GlobalConversationPreferencesRequest.TagModification.Builder builder)
	        {
	            ensureTagModificationIsMutable();
	            tagModification_.set(i, builder.build());
	            return this;
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setTagModification(int i, GlobalConversationPreferencesRequest.TagModification tagmodification)
	        {
	            if(tagmodification == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureTagModificationIsMutable();
	                tagModification_.set(i, tagmodification);
	                return this;
	            }
	        }
	
	        public final GlobalConversationPreferencesRequest.Builder setVisibilityModification(Data.ConversationMetadata.ConversationVisibility conversationvisibility)
	        {
	            if(conversationvisibility == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                visibilityModification_ = conversationvisibility;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									HangoutInviteFinishRequest
	//==================================================================================================
	public static interface HangoutInviteFinishRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getInviteId();
	
	    public abstract HangoutInviteFinishRequest.InviteStatus getInviteStatus();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasInviteId();
	
	    public abstract boolean hasInviteStatus();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class HangoutInviteFinishRequest extends GeneratedMessageLite implements HangoutInviteFinishRequestOrBuilder {
	
		private static final HangoutInviteFinishRequest defaultInstance;
	    private int bitField0_;
	    private Object inviteId_;
	    private InviteStatus inviteStatus_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        HangoutInviteFinishRequest hangoutinvitefinishrequest = new HangoutInviteFinishRequest();
	        defaultInstance = hangoutinvitefinishrequest;
	        hangoutinvitefinishrequest.inviteId_ = "";
	        hangoutinvitefinishrequest.inviteStatus_ = InviteStatus.UNKNOWN;
	        hangoutinvitefinishrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private HangoutInviteFinishRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    HangoutInviteFinishRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutInviteFinishRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getInviteIdBytes()
	    {
	        Object obj = inviteId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviteId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteFinishRequest hangoutinvitefinishrequest)
	    {
	        return new Builder().mergeFrom(hangoutinvitefinishrequest);
	    }
	
	    public final HangoutInviteFinishRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getInviteId()
	    {
	        Object obj = inviteId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviteId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final InviteStatus getInviteStatus()
	    {
	        return inviteStatus_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getInviteIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(2, inviteStatus_.getNumber());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasInviteId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviteStatus()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getInviteIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(2, inviteStatus_.getNumber());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, stubbyInfo_);
	    }
	    
	    //==============================================================
	    //						InviteStatus
	    //==============================================================
	    public static enum InviteStatus implements com.google.protobuf.Internal.EnumLite {
	    	
	    	UNKNOWN(0),
	    	CONNECTED(1),
	    	CANCELED(2);
	    	
	    	private final int value;
	    	
	    	private InviteStatus(int value) {
	    		this.value = value;
	    	}
	    	
	    	@Override
			public int getNumber() {
				return value;
			}

			public static InviteStatus valueOf(int value) {
	    		for(InviteStatus s : InviteStatus.values()) {
	    			if(s.value == value) {
	    				return s;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    //==============================================================
	    //						Builder
	    //==============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteFinishRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object inviteId_;
	        private HangoutInviteFinishRequest.InviteStatus inviteStatus_;
	        private Data.StubbyInfo stubbyInfo_;


	        private Builder()
	        {
	            inviteId_ = "";
	            inviteStatus_ = HangoutInviteFinishRequest.InviteStatus.UNKNOWN;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public HangoutInviteFinishRequest.Builder clone()
	        {
	            return (new HangoutInviteFinishRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutInviteFinishRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    inviteId_ = codedinputstream.readBytes();
	                    break;
	
	                case 16: // '\020'
	                    HangoutInviteFinishRequest.InviteStatus invitestatus = HangoutInviteFinishRequest.InviteStatus.valueOf(codedinputstream.readEnum());
	                    if(invitestatus != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        inviteStatus_ = invitestatus;
	                    }
	                    break;
	
	                case 26: // '\032'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteFinishRequest build()
	        {
	            HangoutInviteFinishRequest hangoutinvitefinishrequest = buildPartial();
	            if(!hangoutinvitefinishrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinvitefinishrequest"));
	            else
	                return hangoutinvitefinishrequest;
	        }
	
	        public final HangoutInviteFinishRequest buildPartial()
	        {
	            HangoutInviteFinishRequest hangoutinvitefinishrequest = new HangoutInviteFinishRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinvitefinishrequest.inviteId_ = inviteId_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinvitefinishrequest.inviteStatus_ = inviteStatus_;
	            if((i & 4) == 4)
	                k |= 4;
	            hangoutinvitefinishrequest.stubbyInfo_ = stubbyInfo_;
	            hangoutinvitefinishrequest.bitField0_ = k;
	            return hangoutinvitefinishrequest;
	        }
	
	        public final HangoutInviteFinishRequest.Builder clear()
	        {
	            super.clear();
	            inviteId_ = "";
	            bitField0_ = -2 & bitField0_;
	            inviteStatus_ = HangoutInviteFinishRequest.InviteStatus.UNKNOWN;
	            bitField0_ = -3 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteFinishRequest.Builder clearInviteId()
	        {
	            bitField0_ = -2 & bitField0_;
	            inviteId_ = HangoutInviteFinishRequest.getDefaultInstance().getInviteId();
	            return this;
	        }
	
	        public final HangoutInviteFinishRequest.Builder clearInviteStatus()
	        {
	            bitField0_ = -3 & bitField0_;
	            inviteStatus_ = HangoutInviteFinishRequest.InviteStatus.UNKNOWN;
	            return this;
	        }
	
	        public final HangoutInviteFinishRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteFinishRequest getDefaultInstanceForType()
	        {
	            return HangoutInviteFinishRequest.getDefaultInstance();
	        }
	
	        public final String getInviteId()
	        {
	            Object obj = inviteId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviteId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final HangoutInviteFinishRequest.InviteStatus getInviteStatus()
	        {
	            return inviteStatus_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasInviteId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteStatus()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteFinishRequest)generatedmessagelite);
	        }
	
	        public final HangoutInviteFinishRequest.Builder mergeFrom(HangoutInviteFinishRequest hangoutinvitefinishrequest)
	        {
	            if(hangoutinvitefinishrequest == HangoutInviteFinishRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutinvitefinishrequest.hasInviteId())
	                setInviteId(hangoutinvitefinishrequest.getInviteId());
	            if(hangoutinvitefinishrequest.hasInviteStatus())
	                setInviteStatus(hangoutinvitefinishrequest.getInviteStatus());
	            if(hangoutinvitefinishrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = hangoutinvitefinishrequest.getStubbyInfo();
	                if((4 & bitField0_) == 4 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	            }
	            return this;
	        }
	
	        public final HangoutInviteFinishRequest.Builder setInviteId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                inviteId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteFinishRequest.Builder setInviteStatus(HangoutInviteFinishRequest.InviteStatus invitestatus)
	        {
	            if(invitestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                inviteStatus_ = invitestatus;
	                return this;
	            }
	        }
	
	        public final HangoutInviteFinishRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteFinishRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									HangoutInviteKeepAliveRequest
	//==================================================================================================
	public static interface HangoutInviteKeepAliveRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getInviteId();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasInviteId();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class HangoutInviteKeepAliveRequest extends GeneratedMessageLite implements HangoutInviteKeepAliveRequestOrBuilder {
	
		private static final HangoutInviteKeepAliveRequest defaultInstance;
	    private int bitField0_;
	    private Object inviteId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest = new HangoutInviteKeepAliveRequest();
	        defaultInstance = hangoutinvitekeepaliverequest;
	        hangoutinvitekeepaliverequest.inviteId_ = "";
	        hangoutinvitekeepaliverequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private HangoutInviteKeepAliveRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    HangoutInviteKeepAliveRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutInviteKeepAliveRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getInviteIdBytes()
	    {
	        Object obj = inviteId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviteId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest)
	    {
	        return new Builder().mergeFrom(hangoutinvitekeepaliverequest);
	    }
	
	    public final HangoutInviteKeepAliveRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getInviteId()
	    {
	        Object obj = inviteId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviteId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getInviteIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(2, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasInviteId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getInviteIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(2, stubbyInfo_);
	    }
	    
	    //===========================================================
	    //						Builder
	    //===========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteKeepAliveRequestOrBuilder {
	    	
	    	private int bitField0_;
	        private Object inviteId_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            inviteId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	
	        public HangoutInviteKeepAliveRequest.Builder clone()
	        {
	            return (new HangoutInviteKeepAliveRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutInviteKeepAliveRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    inviteId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteKeepAliveRequest build()
	        {
	            HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest = buildPartial();
	            if(!hangoutinvitekeepaliverequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinvitekeepaliverequest"));
	            else
	                return hangoutinvitekeepaliverequest;
	        }
	
	        public final HangoutInviteKeepAliveRequest buildPartial()
	        {
	            HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest = new HangoutInviteKeepAliveRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinvitekeepaliverequest.inviteId_ = inviteId_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinvitekeepaliverequest.stubbyInfo_ = stubbyInfo_;
	            hangoutinvitekeepaliverequest.bitField0_ = k;
	            return hangoutinvitekeepaliverequest;
	        }
	
	        public final HangoutInviteKeepAliveRequest.Builder clear()
	        {
	            super.clear();
	            inviteId_ = "";
	            bitField0_ = -2 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveRequest.Builder clearInviteId()
	        {
	            bitField0_ = -2 & bitField0_;
	            inviteId_ = HangoutInviteKeepAliveRequest.getDefaultInstance().getInviteId();
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveRequest getDefaultInstanceForType()
	        {
	            return HangoutInviteKeepAliveRequest.getDefaultInstance();
	        }
	
	        public final String getInviteId()
	        {
	            Object obj = inviteId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviteId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasInviteId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteKeepAliveRequest)generatedmessagelite);
	        }
	
	        public final HangoutInviteKeepAliveRequest.Builder mergeFrom(HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest)
	        {
	            if(hangoutinvitekeepaliverequest == HangoutInviteKeepAliveRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutinvitekeepaliverequest.hasInviteId())
	                setInviteId(hangoutinvitekeepaliverequest.getInviteId());
	            if(hangoutinvitekeepaliverequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = hangoutinvitekeepaliverequest.getStubbyInfo();
	                if((2 & bitField0_) == 2 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 2 | bitField0_;
	            }
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveRequest.Builder setInviteId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                inviteId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteKeepAliveRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteKeepAliveRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									HangoutInviteReplyRequest
	//==================================================================================================
	public static interface HangoutInviteReplyRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract long getInstanceId();
	
	    public abstract String getInviteId();
	
	    public abstract HangoutInviteReplyRequest.InviteeStatus getInviteeStatus();
	
	    public abstract String getInviterId();
	
	    public abstract String getPhoneNumber();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasInstanceId();
	
	    public abstract boolean hasInviteId();
	
	    public abstract boolean hasInviteeStatus();
	
	    public abstract boolean hasInviterId();
	
	    public abstract boolean hasPhoneNumber();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class HangoutInviteReplyRequest extends GeneratedMessageLite implements HangoutInviteReplyRequestOrBuilder {
	
		private static final HangoutInviteReplyRequest defaultInstance;
        private int bitField0_;
        private long instanceId_;
        private Object inviteId_;
        private InviteeStatus inviteeStatus_;
        private Object inviterId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object phoneNumber_;
        private Data.StubbyInfo stubbyInfo_;

        static 
        {
            HangoutInviteReplyRequest hangoutinvitereplyrequest = new HangoutInviteReplyRequest();
            defaultInstance = hangoutinvitereplyrequest;
            hangoutinvitereplyrequest.inviteId_ = "";
            hangoutinvitereplyrequest.inviteeStatus_ = InviteeStatus.UNKNOWN;
            hangoutinvitereplyrequest.phoneNumber_ = "";
            hangoutinvitereplyrequest.inviterId_ = "";
            hangoutinvitereplyrequest.instanceId_ = 0L;
            hangoutinvitereplyrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        }
        
        private HangoutInviteReplyRequest()
        {
            memoizedIsInitialized = -1;
            memoizedSerializedSize = -1;
        }

        HangoutInviteReplyRequest(Builder builder)
        {
            super();
            memoizedIsInitialized = -1;
            memoizedSerializedSize = -1;
        }
        
	    public static HangoutInviteReplyRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getInviteIdBytes()
	    {
	        Object obj = inviteId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviteId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getInviterIdBytes()
	    {
	        Object obj = inviterId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviterId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getPhoneNumberBytes()
	    {
	        Object obj = phoneNumber_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            phoneNumber_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteReplyRequest hangoutinvitereplyrequest)
	    {
	        return new Builder().mergeFrom(hangoutinvitereplyrequest);
	    }
	
	    public final HangoutInviteReplyRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final long getInstanceId()
	    {
	        return instanceId_;
	    }
	
	    public final String getInviteId()
	    {
	        Object obj = inviteId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviteId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final InviteeStatus getInviteeStatus()
	    {
	        return inviteeStatus_;
	    }
	
	    public final String getInviterId()
	    {
	        Object obj = inviterId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviterId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getPhoneNumber()
	    {
	        Object obj = phoneNumber_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                phoneNumber_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getInviteIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(2, inviteeStatus_.getNumber());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getPhoneNumberBytes());
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeMessageSize(4, stubbyInfo_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(5, getInviterIdBytes());
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeInt64Size(6, instanceId_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasInstanceId()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviteId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviteeStatus()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviterId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPhoneNumber()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getInviteIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(2, inviteeStatus_.getNumber());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getPhoneNumberBytes());
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeMessage(4, stubbyInfo_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(5, getInviterIdBytes());
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeInt64(6, instanceId_);
	    }
	    
	    //========================================================
	    //					InviteeStatus
	    //========================================================
	    public static enum InviteeStatus implements com.google.protobuf.Internal.EnumLite {
	    	
	    	UNKNOWN(0),
	    	CONNECTING(1),
	    	ACCEPTED(2),
	    	DECLINED(3);
	    	
	    	private int value;
	    	
	    	private InviteeStatus(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static InviteeStatus valueOf(int value) {
	    		for(InviteeStatus s : InviteeStatus.values()) {
	    			if(s.value == value) {
	    				return s;
	    			}
	    		}
	    		return null;
	    	}
	    }
        
	    //========================================================
	    //						Builder
	    //========================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteReplyRequestOrBuilder {
	
	    	private int bitField0_;
	        private long instanceId_;
	        private Object inviteId_;
	        private HangoutInviteReplyRequest.InviteeStatus inviteeStatus_;
	        private Object inviterId_;
	        private Object phoneNumber_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            inviteId_ = "";
	            inviteeStatus_ = HangoutInviteReplyRequest.InviteeStatus.UNKNOWN;
	            phoneNumber_ = "";
	            inviterId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public HangoutInviteReplyRequest.Builder clone()
	        {
	            return (new HangoutInviteReplyRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutInviteReplyRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    inviteId_ = codedinputstream.readBytes();
	                    break;
	
	                case 16: // '\020'
	                    HangoutInviteReplyRequest.InviteeStatus inviteestatus = HangoutInviteReplyRequest.InviteeStatus.valueOf(codedinputstream.readEnum());
	                    if(inviteestatus != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        inviteeStatus_ = inviteestatus;
	                    }
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    phoneNumber_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 8 | bitField0_;
	                    inviterId_ = codedinputstream.readBytes();
	                    break;
	
	                case 48: // '0'
	                    bitField0_ = 0x10 | bitField0_;
	                    instanceId_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteReplyRequest build()
	        {
	            HangoutInviteReplyRequest hangoutinvitereplyrequest = buildPartial();
	            if(!hangoutinvitereplyrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinvitereplyrequest"));
	            else
	                return hangoutinvitereplyrequest;
	        }
	
	        public final HangoutInviteReplyRequest buildPartial()
	        {
	            HangoutInviteReplyRequest hangoutinvitereplyrequest = new HangoutInviteReplyRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinvitereplyrequest.inviteId_ = inviteId_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinvitereplyrequest.inviteeStatus_ = inviteeStatus_;
	            if((i & 4) == 4)
	                k |= 4;
	            hangoutinvitereplyrequest.phoneNumber_ = phoneNumber_;
	            if((i & 8) == 8)
	                k |= 8;
	            hangoutinvitereplyrequest.inviterId_ = inviterId_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            hangoutinvitereplyrequest.instanceId_ = instanceId_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            hangoutinvitereplyrequest.stubbyInfo_ = stubbyInfo_;
	            hangoutinvitereplyrequest.bitField0_ = k;
	            return hangoutinvitereplyrequest;
	        }
	
	        public final HangoutInviteReplyRequest.Builder clear()
	        {
	            super.clear();
	            inviteId_ = "";
	            bitField0_ = -2 & bitField0_;
	            inviteeStatus_ = HangoutInviteReplyRequest.InviteeStatus.UNKNOWN;
	            bitField0_ = -3 & bitField0_;
	            phoneNumber_ = "";
	            bitField0_ = -5 & bitField0_;
	            inviterId_ = "";
	            bitField0_ = -9 & bitField0_;
	            instanceId_ = 0L;
	            bitField0_ = 0xffffffef & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder clearInstanceId()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            instanceId_ = 0L;
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder clearInviteId()
	        {
	            bitField0_ = -2 & bitField0_;
	            inviteId_ = HangoutInviteReplyRequest.getDefaultInstance().getInviteId();
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder clearInviteeStatus()
	        {
	            bitField0_ = -3 & bitField0_;
	            inviteeStatus_ = HangoutInviteReplyRequest.InviteeStatus.UNKNOWN;
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder clearInviterId()
	        {
	            bitField0_ = -9 & bitField0_;
	            inviterId_ = HangoutInviteReplyRequest.getDefaultInstance().getInviterId();
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder clearPhoneNumber()
	        {
	            bitField0_ = -5 & bitField0_;
	            phoneNumber_ = HangoutInviteReplyRequest.getDefaultInstance().getPhoneNumber();
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest getDefaultInstanceForType()
	        {
	            return HangoutInviteReplyRequest.getDefaultInstance();
	        }
	
	        public final long getInstanceId()
	        {
	            return instanceId_;
	        }
	
	        public final String getInviteId()
	        {
	            Object obj = inviteId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviteId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final HangoutInviteReplyRequest.InviteeStatus getInviteeStatus()
	        {
	            return inviteeStatus_;
	        }
	
	        public final String getInviterId()
	        {
	            Object obj = inviterId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviterId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getPhoneNumber()
	        {
	            Object obj = phoneNumber_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                phoneNumber_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasInstanceId()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteeStatus()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviterId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPhoneNumber()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteReplyRequest)generatedmessagelite);
	        }
	
	        public final HangoutInviteReplyRequest.Builder mergeFrom(HangoutInviteReplyRequest hangoutinvitereplyrequest)
	        {
	            if(hangoutinvitereplyrequest == HangoutInviteReplyRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutinvitereplyrequest.hasInviteId())
	                setInviteId(hangoutinvitereplyrequest.getInviteId());
	            if(hangoutinvitereplyrequest.hasInviteeStatus())
	                setInviteeStatus(hangoutinvitereplyrequest.getInviteeStatus());
	            if(hangoutinvitereplyrequest.hasPhoneNumber())
	                setPhoneNumber(hangoutinvitereplyrequest.getPhoneNumber());
	            if(hangoutinvitereplyrequest.hasInviterId())
	                setInviterId(hangoutinvitereplyrequest.getInviterId());
	            if(hangoutinvitereplyrequest.hasInstanceId())
	                setInstanceId(hangoutinvitereplyrequest.getInstanceId());
	            if(hangoutinvitereplyrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = hangoutinvitereplyrequest.getStubbyInfo();
	                if((0x20 & bitField0_) == 32 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder setInstanceId(long l)
	        {
	            bitField0_ = 0x10 | bitField0_;
	            instanceId_ = l;
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder setInviteId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                inviteId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteReplyRequest.Builder setInviteeStatus(HangoutInviteReplyRequest.InviteeStatus inviteestatus)
	        {
	            if(inviteestatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                inviteeStatus_ = inviteestatus;
	                return this;
	            }
	        }
	
	        public final HangoutInviteReplyRequest.Builder setInviterId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                inviterId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteReplyRequest.Builder setPhoneNumber(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                phoneNumber_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteReplyRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteReplyRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									HangoutInviteRequest
	//==================================================================================================
	public static interface HangoutInviteRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getInviteClientId();
	
	    public abstract String getInviterJid();
	
	    public abstract String getInviterMucJid();
	
	    public abstract String getParticipantId();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasInviteClientId();
	
	    public abstract boolean hasInviterJid();
	
	    public abstract boolean hasInviterMucJid();
	
	    public abstract boolean hasParticipantId();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class HangoutInviteRequest extends GeneratedMessageLite implements HangoutInviteRequestOrBuilder {
	
		private static final HangoutInviteRequest defaultInstance;
	    private int bitField0_;
	    private Object inviteClientId_;
	    private Object inviterJid_;
	    private Object inviterMucJid_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object participantId_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        HangoutInviteRequest hangoutinviterequest = new HangoutInviteRequest();
	        defaultInstance = hangoutinviterequest;
	        hangoutinviterequest.inviteClientId_ = "";
	        hangoutinviterequest.participantId_ = "";
	        hangoutinviterequest.inviterMucJid_ = "";
	        hangoutinviterequest.inviterJid_ = "";
	        hangoutinviterequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private HangoutInviteRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    HangoutInviteRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutInviteRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getInviteClientIdBytes()
	    {
	        Object obj = inviteClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviteClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getInviterJidBytes()
	    {
	        Object obj = inviterJid_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviterJid_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getInviterMucJidBytes()
	    {
	        Object obj = inviterMucJid_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            inviterMucJid_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getParticipantIdBytes()
	    {
	        Object obj = participantId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            participantId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutInviteRequest hangoutinviterequest)
	    {
	        return new Builder().mergeFrom(hangoutinviterequest);
	    }
	
	    public final HangoutInviteRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getInviteClientId()
	    {
	        Object obj = inviteClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviteClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getInviterJid()
	    {
	        Object obj = inviterJid_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviterJid_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getInviterMucJid()
	    {
	        Object obj = inviterMucJid_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                inviterMucJid_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getParticipantId()
	    {
	        Object obj = participantId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                participantId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getInviteClientIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getParticipantIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getInviterMucJidBytes());
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeMessageSize(4, stubbyInfo_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(5, getInviterJidBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasInviteClientId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviterJid()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviterMucJid()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasParticipantId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getInviteClientIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getParticipantIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getInviterMucJidBytes());
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(4, stubbyInfo_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(5, getInviterJidBytes());
	    }
	    
	    //=======================================================
	    //						Builder
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutInviteRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object inviteClientId_;
	        private Object inviterJid_;
	        private Object inviterMucJid_;
	        private Object participantId_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            inviteClientId_ = "";
	            participantId_ = "";
	            inviterMucJid_ = "";
	            inviterJid_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	    	public Builder clone()
	        {
	            return (new HangoutInviteRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	    	public HangoutInviteRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    inviteClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    participantId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    inviterMucJid_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    bitField0_ = 8 | bitField0_;
	                    inviterJid_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutInviteRequest build()
	        {
	            HangoutInviteRequest hangoutinviterequest = buildPartial();
	            if(!hangoutinviterequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutinviterequest"));
	            else
	                return hangoutinviterequest;
	        }
	
	        public final HangoutInviteRequest buildPartial()
	        {
	            HangoutInviteRequest hangoutinviterequest = new HangoutInviteRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutinviterequest.inviteClientId_ = inviteClientId_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutinviterequest.participantId_ = participantId_;
	            if((i & 4) == 4)
	                k |= 4;
	            hangoutinviterequest.inviterMucJid_ = inviterMucJid_;
	            if((i & 8) == 8)
	                k |= 8;
	            hangoutinviterequest.inviterJid_ = inviterJid_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            hangoutinviterequest.stubbyInfo_ = stubbyInfo_;
	            hangoutinviterequest.bitField0_ = k;
	            return hangoutinviterequest;
	        }
	
	        public final HangoutInviteRequest.Builder clear()
	        {
	            super.clear();
	            inviteClientId_ = "";
	            bitField0_ = -2 & bitField0_;
	            participantId_ = "";
	            bitField0_ = -3 & bitField0_;
	            inviterMucJid_ = "";
	            bitField0_ = -5 & bitField0_;
	            inviterJid_ = "";
	            bitField0_ = -9 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteRequest.Builder clearInviteClientId()
	        {
	            bitField0_ = -2 & bitField0_;
	            inviteClientId_ = HangoutInviteRequest.getDefaultInstance().getInviteClientId();
	            return this;
	        }
	
	        public final HangoutInviteRequest.Builder clearInviterJid()
	        {
	            bitField0_ = -9 & bitField0_;
	            inviterJid_ = HangoutInviteRequest.getDefaultInstance().getInviterJid();
	            return this;
	        }
	
	        public final HangoutInviteRequest.Builder clearInviterMucJid()
	        {
	            bitField0_ = -5 & bitField0_;
	            inviterMucJid_ = HangoutInviteRequest.getDefaultInstance().getInviterMucJid();
	            return this;
	        }
	
	        public final HangoutInviteRequest.Builder clearParticipantId()
	        {
	            bitField0_ = -3 & bitField0_;
	            participantId_ = HangoutInviteRequest.getDefaultInstance().getParticipantId();
	            return this;
	        }
	
	        public final HangoutInviteRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteRequest getDefaultInstanceForType()
	        {
	            return HangoutInviteRequest.getDefaultInstance();
	        }
	
	        public final String getInviteClientId()
	        {
	            Object obj = inviteClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviteClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getInviterJid()
	        {
	            Object obj = inviterJid_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviterJid_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getInviterMucJid()
	        {
	            Object obj = inviterMucJid_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                inviterMucJid_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getParticipantId()
	        {
	            Object obj = participantId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                participantId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasInviteClientId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviterJid()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviterMucJid()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasParticipantId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutInviteRequest)generatedmessagelite);
	        }
	
	        public final HangoutInviteRequest.Builder mergeFrom(HangoutInviteRequest hangoutinviterequest)
	        {
	            if(hangoutinviterequest == HangoutInviteRequest.getDefaultInstance()) {
	            	return this;
	            }

	            if(hangoutinviterequest.hasInviteClientId())
	                setInviteClientId(hangoutinviterequest.getInviteClientId());
	            if(hangoutinviterequest.hasParticipantId())
	                setParticipantId(hangoutinviterequest.getParticipantId());
	            if(hangoutinviterequest.hasInviterMucJid())
	                setInviterMucJid(hangoutinviterequest.getInviterMucJid());
	            if(hangoutinviterequest.hasInviterJid())
	                setInviterJid(hangoutinviterequest.getInviterJid());
	            if(hangoutinviterequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = hangoutinviterequest.getStubbyInfo();
	                if((0x10 & bitField0_) == 16 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            return this;
	        }
	
	        public final HangoutInviteRequest.Builder setInviteClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                inviteClientId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteRequest.Builder setInviterJid(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                inviterJid_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteRequest.Builder setInviterMucJid(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                inviterMucJid_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteRequest.Builder setParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                participantId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutInviteRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final HangoutInviteRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									HangoutRingFinishRequest
	//==================================================================================================
	public static interface HangoutRingFinishRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getHangoutId();
	
	    public abstract HangoutRingFinishRequest.RingStatus getRingStatus();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasHangoutId();
	
	    public abstract boolean hasRingStatus();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class HangoutRingFinishRequest extends GeneratedMessageLite implements HangoutRingFinishRequestOrBuilder {
	
		private static final HangoutRingFinishRequest defaultInstance;
	    private int bitField0_;
	    private Object hangoutId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private RingStatus ringStatus_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        HangoutRingFinishRequest hangoutringfinishrequest = new HangoutRingFinishRequest();
	        defaultInstance = hangoutringfinishrequest;
	        hangoutringfinishrequest.hangoutId_ = "";
	        hangoutringfinishrequest.ringStatus_ = RingStatus.TIMEOUT;
	        hangoutringfinishrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private HangoutRingFinishRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    HangoutRingFinishRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static HangoutRingFinishRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getHangoutIdBytes()
	    {
	        Object obj = hangoutId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            hangoutId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(HangoutRingFinishRequest hangoutringfinishrequest)
	    {
	        return new Builder().mergeFrom(hangoutringfinishrequest);
	    }
	
	    public final HangoutRingFinishRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getHangoutId()
	    {
	        Object obj = hangoutId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                hangoutId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final RingStatus getRingStatus()
	    {
	        return ringStatus_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getHangoutIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeEnumSize(2, ringStatus_.getNumber());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasHangoutId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRingStatus()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getHangoutIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeEnum(2, ringStatus_.getNumber());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, stubbyInfo_);
	    }
	    
	    //=====================================================
	    //
	    //=====================================================
	    public static enum RingStatus implements com.google.protobuf.Internal.EnumLite {
	    	
	    	TIMEOUT(0),
	    	ACCEPTED(1),
	    	DECLINED(2);
	    	
	    	private int value;
	    	
	    	private RingStatus(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static RingStatus valueOf(int value) {
	    		for(RingStatus s : RingStatus.values()) {
	    			if(s.value == value) {
	    				return s;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    //=====================================================
	    //					Builder
	    //=====================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements HangoutRingFinishRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object hangoutId_;
	        private HangoutRingFinishRequest.RingStatus ringStatus_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            hangoutId_ = "";
	            ringStatus_ = HangoutRingFinishRequest.RingStatus.TIMEOUT;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public HangoutRingFinishRequest.Builder clone()
	        {
	            return (new HangoutRingFinishRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public HangoutRingFinishRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    hangoutId_ = codedinputstream.readBytes();
	                    break;
	
	                case 16: // '\020'
	                    HangoutRingFinishRequest.RingStatus ringstatus = HangoutRingFinishRequest.RingStatus.valueOf(codedinputstream.readEnum());
	                    if(ringstatus != null)
	                    {
	                        bitField0_ = 2 | bitField0_;
	                        ringStatus_ = ringstatus;
	                    }
	                    break;
	
	                case 26: // '\032'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final HangoutRingFinishRequest build()
	        {
	            HangoutRingFinishRequest hangoutringfinishrequest = buildPartial();
	            if(!hangoutringfinishrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("hangoutringfinishrequest"));
	            else
	                return hangoutringfinishrequest;
	        }
	
	        public final HangoutRingFinishRequest buildPartial()
	        {
	            HangoutRingFinishRequest hangoutringfinishrequest = new HangoutRingFinishRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            hangoutringfinishrequest.hangoutId_ = hangoutId_;
	            if((i & 2) == 2)
	                k |= 2;
	            hangoutringfinishrequest.ringStatus_ = ringStatus_;
	            if((i & 4) == 4)
	                k |= 4;
	            hangoutringfinishrequest.stubbyInfo_ = stubbyInfo_;
	            hangoutringfinishrequest.bitField0_ = k;
	            return hangoutringfinishrequest;
	        }
	
	        public final HangoutRingFinishRequest.Builder clear()
	        {
	            super.clear();
	            hangoutId_ = "";
	            bitField0_ = -2 & bitField0_;
	            ringStatus_ = HangoutRingFinishRequest.RingStatus.TIMEOUT;
	            bitField0_ = -3 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final HangoutRingFinishRequest.Builder clearHangoutId()
	        {
	            bitField0_ = -2 & bitField0_;
	            hangoutId_ = HangoutRingFinishRequest.getDefaultInstance().getHangoutId();
	            return this;
	        }
	
	        public final HangoutRingFinishRequest.Builder clearRingStatus()
	        {
	            bitField0_ = -3 & bitField0_;
	            ringStatus_ = HangoutRingFinishRequest.RingStatus.TIMEOUT;
	            return this;
	        }
	
	        public final HangoutRingFinishRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final HangoutRingFinishRequest getDefaultInstanceForType()
	        {
	            return HangoutRingFinishRequest.getDefaultInstance();
	        }
	
	        public final String getHangoutId()
	        {
	            Object obj = hangoutId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                hangoutId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final HangoutRingFinishRequest.RingStatus getRingStatus()
	        {
	            return ringStatus_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasHangoutId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRingStatus()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((HangoutRingFinishRequest)generatedmessagelite);
	        }
	
	        public final HangoutRingFinishRequest.Builder mergeFrom(HangoutRingFinishRequest hangoutringfinishrequest)
	        {
	            if(hangoutringfinishrequest == HangoutRingFinishRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(hangoutringfinishrequest.hasHangoutId())
	                setHangoutId(hangoutringfinishrequest.getHangoutId());
	            if(hangoutringfinishrequest.hasRingStatus())
	                setRingStatus(hangoutringfinishrequest.getRingStatus());
	            if(hangoutringfinishrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = hangoutringfinishrequest.getStubbyInfo();
	                if((4 & bitField0_) == 4 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	            }
	            return this;
	        }
	
	        public final HangoutRingFinishRequest.Builder setHangoutId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                hangoutId_ = s;
	                return this;
	            }
	        }
	
	        public final HangoutRingFinishRequest.Builder setRingStatus(HangoutRingFinishRequest.RingStatus ringstatus)
	        {
	            if(ringstatus == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                ringStatus_ = ringstatus;
	                return this;
	            }
	        }
	
	        public final HangoutRingFinishRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final HangoutRingFinishRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									InvalidateLocalCache
	//==================================================================================================
	public static interface InvalidateLocalCacheOrBuilder extends MessageLiteOrBuilder {

	    public abstract int getVersion();
	
	    public abstract boolean hasVersion();
	}
	
	public static final class InvalidateLocalCache extends GeneratedMessageLite implements InvalidateLocalCacheOrBuilder {
	
		private static final InvalidateLocalCache defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private int version_;

	    static 
	    {
	        InvalidateLocalCache invalidatelocalcache = new InvalidateLocalCache();
	        defaultInstance = invalidatelocalcache;
	        invalidatelocalcache.version_ = 0;
	    }
	    
	    private InvalidateLocalCache()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    InvalidateLocalCache(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static InvalidateLocalCache getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(InvalidateLocalCache invalidatelocalcache)
	    {
	        return new Builder().mergeFrom(invalidatelocalcache);
	    }
	
	    public final InvalidateLocalCache getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeInt32Size(1, version_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final int getVersion()
	    {
	        return version_;
	    }
	
	    public final boolean hasVersion()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeInt32(1, version_);
	    }
	    
	    //==========================================
	    //					Builder
	    //==========================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements InvalidateLocalCacheOrBuilder {
	
	    	private int bitField0_;
	        private int version_;


	        private Builder()
	        {
	        }
	        
	        public InvalidateLocalCache.Builder clone()
	        {
	            return (new InvalidateLocalCache.Builder()).mergeFrom(buildPartial());
	        }
	
	        public InvalidateLocalCache.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    bitField0_ = 1 | bitField0_;
	                    version_ = codedinputstream.readInt32();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final InvalidateLocalCache build()
	        {
	            InvalidateLocalCache invalidatelocalcache = buildPartial();
	            if(!invalidatelocalcache.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("invalidatelocalcache"));
	            else
	                return invalidatelocalcache;
	        }
	
	        public final InvalidateLocalCache buildPartial()
	        {
	            InvalidateLocalCache invalidatelocalcache = new InvalidateLocalCache(this);
	            int i = 1 & bitField0_;
	            int j = 0;
	            if(i == 1)
	                j = 1;
	            invalidatelocalcache.version_ = version_;
	            invalidatelocalcache.bitField0_ = j;
	            return invalidatelocalcache;
	        }
	
	        public final InvalidateLocalCache.Builder clear()
	        {
	            super.clear();
	            version_ = 0;
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final InvalidateLocalCache.Builder clearVersion()
	        {
	            bitField0_ = -2 & bitField0_;
	            version_ = 0;
	            return this;
	        }
	
	        public final InvalidateLocalCache getDefaultInstanceForType()
	        {
	            return InvalidateLocalCache.getDefaultInstance();
	        }
	
	        public final int getVersion()
	        {
	            return version_;
	        }
	
	        public final boolean hasVersion()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((InvalidateLocalCache)generatedmessagelite);
	        }
	
	        public final InvalidateLocalCache.Builder mergeFrom(InvalidateLocalCache invalidatelocalcache)
	        {
	            if(invalidatelocalcache != InvalidateLocalCache.getDefaultInstance() && invalidatelocalcache.hasVersion())
	                setVersion(invalidatelocalcache.getVersion());
	            return this;
	        }
	
	        public final InvalidateLocalCache.Builder setVersion(int i)
	        {
	            bitField0_ = 1 | bitField0_;
	            version_ = i;
	            return this;
	        }
	    }
	}
	
	//==================================================================================================
	//									BunchCommand
	//==================================================================================================
	public static interface InviteRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract Data.Participant getParticipant(int i);
	
	    public abstract int getParticipantCount();
	
	    public abstract List getParticipantList();
	
	    public abstract String getSenderId();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class InviteRequest extends GeneratedMessageLite implements InviteRequestOrBuilder {
	
		private static final InviteRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private List participant_;
	    private Object senderId_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        InviteRequest inviterequest = new InviteRequest();
	        defaultInstance = inviterequest;
	        inviterequest.conversationId_ = "";
	        inviterequest.participant_ = Collections.emptyList();
	        inviterequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        inviterequest.senderId_ = "";
	    }

	    private InviteRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    InviteRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static InviteRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(InviteRequest inviterequest)
	    {
	        return new Builder().mergeFrom(inviterequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final InviteRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Data.Participant getParticipant(int i)
	    {
	        return (Data.Participant)participant_.get(i);
	    }
	
	    public final int getParticipantCount()
	    {
	        return participant_.size();
	    }
	
	    public final List getParticipantList()
	    {
	        return participant_;
	    }
	
	    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int i)
	    {
	        return (Data.ParticipantOrBuilder)participant_.get(i);
	    }
	
	    public final List getParticipantOrBuilderList()
	    {
	        return participant_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
	            for(int l = 0; l < participant_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(5, (MessageLite)participant_.get(l));
	
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(6, stubbyInfo_);
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(4, getSenderIdBytes());
	        for(int i = 0; i < participant_.size(); i++)
	            codedoutputstream.writeMessage(5, (MessageLite)participant_.get(i));
	
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(6, stubbyInfo_);
	    }
	    
	    //==================================================
	    //					Builder
	    //==================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements InviteRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private List participant_;
	        private Object senderId_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            conversationId_ = "";
	            participant_ = Collections.emptyList();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            senderId_ = "";
	        }
	        
	        public InviteRequest.Builder clone()
	        {
	            return (new InviteRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureParticipantIsMutable()
	        {
	            if((2 & bitField0_) != 2)
	            {
	                participant_ = new ArrayList(participant_);
	                bitField0_ = 2 | bitField0_;
	            }
	        }
	
	        public InviteRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 42: // '*'
	                    Data.Participant.Builder builder1 = Data.Participant.newBuilder();
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    addParticipant(builder1.buildPartial());
	                    break;
	
	                case 50: // '2'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final InviteRequest.Builder addAllParticipant(Iterable iterable)
	        {
	            ensureParticipantIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, participant_);
	            return this;
	        }
	
	        public final InviteRequest.Builder addParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(i, builder.build());
	            return this;
	        }
	
	        public final InviteRequest.Builder addParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(i, participant);
	                return this;
	            }
	        }
	
	        public final InviteRequest.Builder addParticipant(Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.add(builder.build());
	            return this;
	        }
	
	        public final InviteRequest.Builder addParticipant(Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.add(participant);
	                return this;
	            }
	        }
	
	        public final InviteRequest build()
	        {
	            InviteRequest inviterequest = buildPartial();
	            if(!inviterequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("inviterequest"));
	            else
	                return inviterequest;
	        }
	
	        public final InviteRequest buildPartial()
	        {
	            InviteRequest inviterequest = new InviteRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            inviterequest.conversationId_ = conversationId_;
	            if((2 & bitField0_) == 2)
	            {
	                participant_ = Collections.unmodifiableList(participant_);
	                bitField0_ = -3 & bitField0_;
	            }
	            inviterequest.participant_ = participant_;
	            if((i & 4) == 4)
	                k |= 2;
	            inviterequest.stubbyInfo_ = stubbyInfo_;
	            if((i & 8) == 8)
	                k |= 4;
	            inviterequest.senderId_ = senderId_;
	            inviterequest.bitField0_ = k;
	            return inviterequest;
	        }
	
	        public final InviteRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            participant_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final InviteRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = InviteRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final InviteRequest.Builder clearParticipant()
	        {
	            participant_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final InviteRequest.Builder clearSenderId()
	        {
	            bitField0_ = -9 & bitField0_;
	            senderId_ = InviteRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final InviteRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final InviteRequest getDefaultInstanceForType()
	        {
	            return InviteRequest.getDefaultInstance();
	        }
	
	        public final Data.Participant getParticipant(int i)
	        {
	            return (Data.Participant)participant_.get(i);
	        }
	
	        public final int getParticipantCount()
	        {
	            return participant_.size();
	        }
	
	        public final List getParticipantList()
	        {
	            return Collections.unmodifiableList(participant_);
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((InviteRequest)generatedmessagelite);
	        }
	
	        public final InviteRequest.Builder mergeFrom(InviteRequest inviterequest)
	        {
	            if(inviterequest == InviteRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(inviterequest.hasConversationId())
	                setConversationId(inviterequest.getConversationId());
	            if(!inviterequest.participant_.isEmpty())
	                if(participant_.isEmpty())
	                {
	                    participant_ = inviterequest.participant_;
	                    bitField0_ = -3 & bitField0_;
	                } else
	                {
	                    ensureParticipantIsMutable();
	                    participant_.addAll(inviterequest.participant_);
	                }
	            if(inviterequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = inviterequest.getStubbyInfo();
	                if((4 & bitField0_) == 4 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(inviterequest.hasSenderId())
	                setSenderId(inviterequest.getSenderId());
	            return this;
	        }
	
	        public final InviteRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final InviteRequest.Builder setParticipant(int i, Data.Participant.Builder builder)
	        {
	            ensureParticipantIsMutable();
	            participant_.set(i, builder.build());
	            return this;
	        }
	
	        public final InviteRequest.Builder setParticipant(int i, Data.Participant participant)
	        {
	            if(participant == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureParticipantIsMutable();
	                participant_.set(i, participant);
	                return this;
	            }
	        }
	
	        public final InviteRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final InviteRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final InviteRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									LeaveConversationRequest
	//=================================================================================================
	public static interface LeaveConversationRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract String getSenderId();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class LeaveConversationRequest extends GeneratedMessageLite implements LeaveConversationRequestOrBuilder {
	
		private static final LeaveConversationRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object senderId_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        LeaveConversationRequest leaveconversationrequest = new LeaveConversationRequest();
	        defaultInstance = leaveconversationrequest;
	        leaveconversationrequest.conversationId_ = "";
	        leaveconversationrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        leaveconversationrequest.senderId_ = "";
	    }

	    private LeaveConversationRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    LeaveConversationRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static LeaveConversationRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(LeaveConversationRequest leaveconversationrequest)
	    {
	        return new Builder().mergeFrom(leaveconversationrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final LeaveConversationRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 4 & bitField0_;
	            int k = 0;
	            if(j == 4)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getSenderIdBytes());
	            if((1 & bitField0_) == 1)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(3, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(1, getSenderIdBytes());
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(3, stubbyInfo_);
	    }
	    
	    //=======================================================
	    //						Builer
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements LeaveConversationRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object senderId_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            conversationId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            senderId_ = "";
	        }
	        
	        public LeaveConversationRequest.Builder clone()
	        {
	            return (new LeaveConversationRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public LeaveConversationRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 4 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final LeaveConversationRequest build()
	        {
	            LeaveConversationRequest leaveconversationrequest = buildPartial();
	            if(!leaveconversationrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("leaveconversationrequest"));
	            else
	                return leaveconversationrequest;
	        }
	
	        public final LeaveConversationRequest buildPartial()
	        {
	            LeaveConversationRequest leaveconversationrequest = new LeaveConversationRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            leaveconversationrequest.conversationId_ = conversationId_;
	            if((i & 2) == 2)
	                k |= 2;
	            leaveconversationrequest.stubbyInfo_ = stubbyInfo_;
	            if((i & 4) == 4)
	                k |= 4;
	            leaveconversationrequest.senderId_ = senderId_;
	            leaveconversationrequest.bitField0_ = k;
	            return leaveconversationrequest;
	        }
	
	        public final LeaveConversationRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final LeaveConversationRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = LeaveConversationRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final LeaveConversationRequest.Builder clearSenderId()
	        {
	            bitField0_ = -5 & bitField0_;
	            senderId_ = LeaveConversationRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final LeaveConversationRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final LeaveConversationRequest getDefaultInstanceForType()
	        {
	            return LeaveConversationRequest.getDefaultInstance();
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((LeaveConversationRequest)generatedmessagelite);
	        }
	
	        public final LeaveConversationRequest.Builder mergeFrom(LeaveConversationRequest leaveconversationrequest)
	        {
	            if(leaveconversationrequest == LeaveConversationRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(leaveconversationrequest.hasConversationId())
	                setConversationId(leaveconversationrequest.getConversationId());
	            if(leaveconversationrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = leaveconversationrequest.getStubbyInfo();
	                if((2 & bitField0_) == 2 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 2 | bitField0_;
	            }
	            if(leaveconversationrequest.hasSenderId())
	                setSenderId(leaveconversationrequest.getSenderId());
	            return this;
	        }
	
	        public final LeaveConversationRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final LeaveConversationRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final LeaveConversationRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final LeaveConversationRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									PingRequest
	//=================================================================================================
	public static interface PingRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getSenderId();
	
	    public abstract long getTimestamp();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasTimestamp();
	}
	
	public static final class PingRequest extends GeneratedMessageLite implements PingRequestOrBuilder {
	
		private static final PingRequest defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object senderId_;
	    private long timestamp_;

	    static 
	    {
	        PingRequest pingrequest = new PingRequest();
	        defaultInstance = pingrequest;
	        pingrequest.timestamp_ = 0L;
	        pingrequest.senderId_ = "";
	    }

	    private PingRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    private PingRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static PingRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(PingRequest pingrequest)
	    {
	        return new Builder().mergeFrom(pingrequest);
	    }
	
	    public final PingRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeInt64Size(1, timestamp_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeInt64(1, timestamp_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getSenderIdBytes());
	    }
	    
	    //===================================================
	    //					Builder
	    //===================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements PingRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object senderId_;
	        private long timestamp_;

	        private Builder()
	        {
	            senderId_ = "";
	        }
	        
	        public PingRequest.Builder clone()
	        {
	            return (new PingRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public PingRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    bitField0_ = 1 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final PingRequest build()
	        {
	            PingRequest pingrequest = buildPartial();
	            if(!pingrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("pingrequest"));
	            else
	                return pingrequest;
	        }
	
	        public final PingRequest buildPartial()
	        {
	            PingRequest pingrequest = new PingRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            pingrequest.timestamp_ = timestamp_;
	            if((i & 2) == 2)
	                k |= 2;
	            pingrequest.senderId_ = senderId_;
	            pingrequest.bitField0_ = k;
	            return pingrequest;
	        }
	
	        public final PingRequest.Builder clear()
	        {
	            super.clear();
	            timestamp_ = 0L;
	            bitField0_ = -2 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final PingRequest.Builder clearSenderId()
	        {
	            bitField0_ = -3 & bitField0_;
	            senderId_ = PingRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final PingRequest.Builder clearTimestamp()
	        {
	            bitField0_ = -2 & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final PingRequest getDefaultInstanceForType()
	        {
	            return PingRequest.getDefaultInstance();
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((PingRequest)generatedmessagelite);
	        }
	
	        public final PingRequest.Builder mergeFrom(PingRequest pingrequest)
	        {
	            if(pingrequest == PingRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(pingrequest.hasTimestamp())
	                setTimestamp(pingrequest.getTimestamp());
	            if(pingrequest.hasSenderId())
	                setSenderId(pingrequest.getSenderId());
	            return this;
	        }
	
	        public final PingRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final PingRequest.Builder setTimestamp(long l)
	        {
	            bitField0_ = 1 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	    }
	}
	
	//=================================================================================================
	//									Presence
	//=================================================================================================
	public static interface PresenceOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract boolean getReciprocate();
	
	    public abstract String getSenderId();
	
	    public abstract long getTimestamp();
	
	    public abstract Presence.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasReciprocate();
	
	    public abstract boolean hasSenderId();
	
	    public abstract boolean hasTimestamp();
	
	    public abstract boolean hasType();
	}
	
	public static final class Presence extends GeneratedMessageLite implements PresenceOrBuilder {
	
		private static final Presence defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private boolean reciprocate_;
	    private Object senderId_;
	    private long timestamp_;
	    private Type type_;

	    static 
	    {
	        Presence presence = new Presence();
	        defaultInstance = presence;
	        presence.type_ = Type.UNKNOWN;
	        presence.conversationId_ = "";
	        presence.senderId_ = "";
	        presence.reciprocate_ = false;
	        presence.timestamp_ = 0L;
	    }

	    private Presence()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    Presence(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Presence getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(Presence presence)
	    {
	        return new Builder().mergeFrom(presence);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final Presence getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final boolean getReciprocate()
	    {
	        return reciprocate_;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBytesSize(3, getSenderIdBytes());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBoolSize(4, reciprocate_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeInt64Size(5, timestamp_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final long getTimestamp()
	    {
	        return timestamp_;
	    }
	
	    public final Type getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReciprocate()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTimestamp()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBytes(3, getSenderIdBytes());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBool(4, reciprocate_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeInt64(5, timestamp_);
	    }
	    
	    //==================================================
	    //						Type
	    //==================================================
	    public static enum Type implements com.google.protobuf.Internal.EnumLite {
	    
	    	UNKNOWN(0),
	    	FOCUS(1),
	    	UNFOCUS(2);
	    	
	    	private int value;
	    	
	    	private Type(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static Type valueOf(int value) {
	    		for(Type t : Type.values()) {
	    			if(t.value == value) {
	    				return t;
	    			}
	    		}
	    		return null;
	    	}
	    }
	    //==================================================
	    //						Builder
	    //==================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements PresenceOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private boolean reciprocate_;
	        private Object senderId_;
	        private long timestamp_;
	        private Presence.Type type_;

	        private Builder()
	        {
	            type_ = Presence.Type.UNKNOWN;
	            conversationId_ = "";
	            senderId_ = "";
	        }
	        
	        public Presence.Builder clone()
	        {
	            return (new Presence.Builder()).mergeFrom(buildPartial());
	        }
	
	        public Presence.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Presence.Type type = Presence.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    bitField0_ = 4 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	
	                case 32: // ' '
	                    bitField0_ = 8 | bitField0_;
	                    reciprocate_ = codedinputstream.readBool();
	                    break;
	
	                case 40: // '('
	                    bitField0_ = 0x10 | bitField0_;
	                    timestamp_ = codedinputstream.readInt64();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final Presence build()
	        {
	            Presence presence = buildPartial();
	            if(!presence.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("presence"));
	            else
	                return presence;
	        }
	
	        public final Presence buildPartial()
	        {
	            Presence presence = new Presence(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            presence.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            presence.conversationId_ = conversationId_;
	            if((i & 4) == 4)
	                k |= 4;
	            presence.senderId_ = senderId_;
	            if((i & 8) == 8)
	                k |= 8;
	            presence.reciprocate_ = reciprocate_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            presence.timestamp_ = timestamp_;
	            presence.bitField0_ = k;
	            return presence;
	        }
	
	        public final Presence.Builder clear()
	        {
	            super.clear();
	            type_ = Presence.Type.UNKNOWN;
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -5 & bitField0_;
	            reciprocate_ = false;
	            bitField0_ = -9 & bitField0_;
	            timestamp_ = 0L;
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final Presence.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = Presence.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final Presence.Builder clearReciprocate()
	        {
	            bitField0_ = -9 & bitField0_;
	            reciprocate_ = false;
	            return this;
	        }
	
	        public final Presence.Builder clearSenderId()
	        {
	            bitField0_ = -5 & bitField0_;
	            senderId_ = Presence.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final Presence.Builder clearTimestamp()
	        {
	            bitField0_ = 0xffffffef & bitField0_;
	            timestamp_ = 0L;
	            return this;
	        }
	
	        public final Presence.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = Presence.Type.UNKNOWN;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final Presence getDefaultInstanceForType()
	        {
	            return Presence.getDefaultInstance();
	        }
	
	        public final boolean getReciprocate()
	        {
	            return reciprocate_;
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final long getTimestamp()
	        {
	            return timestamp_;
	        }
	
	        public final Presence.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReciprocate()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTimestamp()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((Presence)generatedmessagelite);
	        }
	
	        public final Presence.Builder mergeFrom(Presence presence)
	        {
	            if(presence == Presence.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(presence.hasType())
	                setType(presence.getType());
	            if(presence.hasConversationId())
	                setConversationId(presence.getConversationId());
	            if(presence.hasSenderId())
	                setSenderId(presence.getSenderId());
	            if(presence.hasReciprocate())
	                setReciprocate(presence.getReciprocate());
	            if(presence.hasTimestamp())
	                setTimestamp(presence.getTimestamp());
	            return this;
	        }
	
	        public final Presence.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final Presence.Builder setReciprocate(boolean flag)
	        {
	            bitField0_ = 8 | bitField0_;
	            reciprocate_ = flag;
	            return this;
	        }
	
	        public final Presence.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	
	        public final Presence.Builder setTimestamp(long l)
	        {
	            bitField0_ = 0x10 | bitField0_;
	            timestamp_ = l;
	            return this;
	        }
	
	        public final Presence.Builder setType(Presence.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	
	//=================================================================================================
	//									PresenceRequest
	//=================================================================================================
	public static interface PresenceRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract boolean getReciprocate();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract Presence.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasReciprocate();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasType();
	}
	
	public static final class PresenceRequest extends GeneratedMessageLite implements PresenceRequestOrBuilder {
	
		private static final PresenceRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private boolean reciprocate_;
	    private Data.StubbyInfo stubbyInfo_;
	    private Presence.Type type_;

	    static 
	    {
	        PresenceRequest presencerequest = new PresenceRequest();
	        defaultInstance = presencerequest;
	        presencerequest.type_ = Presence.Type.UNKNOWN;
	        presencerequest.conversationId_ = "";
	        presencerequest.reciprocate_ = false;
	        presencerequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private PresenceRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    PresenceRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static PresenceRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(PresenceRequest presencerequest)
	    {
	        return new Builder().mergeFrom(presencerequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final PresenceRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final boolean getReciprocate()
	    {
	        return reciprocate_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeBoolSize(3, reciprocate_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(4, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final Presence.Type getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReciprocate()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeBool(3, reciprocate_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(4, stubbyInfo_);
	    }
	    
	    //=======================================================
	    //					Builder
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements PresenceRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private boolean reciprocate_;
	        private Data.StubbyInfo stubbyInfo_;
	        private Presence.Type type_;


	        private Builder()
	        {
	            type_ = Presence.Type.UNKNOWN;
	            conversationId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public PresenceRequest.Builder clone()
	        {
	            return (new PresenceRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public PresenceRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Presence.Type type = Presence.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    bitField0_ = 4 | bitField0_;
	                    reciprocate_ = codedinputstream.readBool();
	                    break;
	
	                case 34: // '"'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final PresenceRequest build()
	        {
	            PresenceRequest presencerequest = buildPartial();
	            if(!presencerequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("presencerequest"));
	            else
	                return presencerequest;
	        }
	
	        public final PresenceRequest buildPartial()
	        {
	            PresenceRequest presencerequest = new PresenceRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            presencerequest.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            presencerequest.conversationId_ = conversationId_;
	            if((i & 4) == 4)
	                k |= 4;
	            presencerequest.reciprocate_ = reciprocate_;
	            if((i & 8) == 8)
	                k |= 8;
	            presencerequest.stubbyInfo_ = stubbyInfo_;
	            presencerequest.bitField0_ = k;
	            return presencerequest;
	        }
	
	        public final PresenceRequest.Builder clear()
	        {
	            super.clear();
	            type_ = Presence.Type.UNKNOWN;
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            reciprocate_ = false;
	            bitField0_ = -5 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final PresenceRequest.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = PresenceRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final PresenceRequest.Builder clearReciprocate()
	        {
	            bitField0_ = -5 & bitField0_;
	            reciprocate_ = false;
	            return this;
	        }
	
	        public final PresenceRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final PresenceRequest.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = Presence.Type.UNKNOWN;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final PresenceRequest getDefaultInstanceForType()
	        {
	            return PresenceRequest.getDefaultInstance();
	        }
	
	        public final boolean getReciprocate()
	        {
	            return reciprocate_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final Presence.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReciprocate()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((PresenceRequest)generatedmessagelite);
	        }
	
	        public final PresenceRequest.Builder mergeFrom(PresenceRequest presencerequest)
	        {
	            if(presencerequest == PresenceRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(presencerequest.hasType())
	                setType(presencerequest.getType());
	            if(presencerequest.hasConversationId())
	                setConversationId(presencerequest.getConversationId());
	            if(presencerequest.hasReciprocate())
	                setReciprocate(presencerequest.getReciprocate());
	            if(presencerequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = presencerequest.getStubbyInfo();
	                if((8 & bitField0_) == 8 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	            }
	            return this;
	        }
	
	        public final PresenceRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final PresenceRequest.Builder setReciprocate(boolean flag)
	        {
	            bitField0_ = 4 | bitField0_;
	            reciprocate_ = flag;
	            return this;
	        }
	
	        public final PresenceRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final PresenceRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final PresenceRequest.Builder setType(Presence.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									ReceiptRequest
	//=================================================================================================
	public static interface ReceiptRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract ReceiptRequest.ReceiptInfo getReceiptInfo(int i);
	
	    public abstract int getReceiptInfoCount();
	
	    public abstract List getReceiptInfoList();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class ReceiptRequest extends GeneratedMessageLite implements ReceiptRequestOrBuilder {
	
		private static final ReceiptRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private List receiptInfo_;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        ReceiptRequest receiptrequest = new ReceiptRequest();
	        defaultInstance = receiptrequest;
	        receiptrequest.conversationId_ = "";
	        receiptrequest.receiptInfo_ = Collections.emptyList();
	        receiptrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private ReceiptRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ReceiptRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ReceiptRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ReceiptRequest receiptrequest)
	    {
	        return new Builder().mergeFrom(receiptrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ReceiptRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final ReceiptInfo getReceiptInfo(int i)
	    {
	        return (ReceiptInfo)receiptInfo_.get(i);
	    }
	
	    public final int getReceiptInfoCount()
	    {
	        return receiptInfo_.size();
	    }
	
	    public final List getReceiptInfoList()
	    {
	        return receiptInfo_;
	    }
	
	    public final ReceiptInfoOrBuilder getReceiptInfoOrBuilder(int i)
	    {
	        return (ReceiptInfoOrBuilder)receiptInfo_.get(i);
	    }
	
	    public final List getReceiptInfoOrBuilderList()
	    {
	        return receiptInfo_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int i1;
	        if(i != -1)
	        {
	            i1 = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
	            for(int l = 0; l < receiptInfo_.size(); l++)
	                k += CodedOutputStream.computeMessageSize(2, (MessageLite)receiptInfo_.get(l));
	
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(3, stubbyInfo_);
	            memoizedSerializedSize = k;
	            i1 = k;
	        }
	        return i1;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getConversationIdBytes());
	        for(int i = 0; i < receiptInfo_.size(); i++)
	            codedoutputstream.writeMessage(2, (MessageLite)receiptInfo_.get(i));
	
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(3, stubbyInfo_);
	    }
	    
	    //=======================================================
	    //					
	    //=======================================================
	    public static interface ReceiptInfoOrBuilder extends MessageLiteOrBuilder {

	        public abstract long getEventTimestamp();
	
	        public abstract Receipt.Type getType();
	
	        public abstract boolean hasEventTimestamp();
	
	        public abstract boolean hasType();
	    }
	    
	    public static final class ReceiptInfo extends GeneratedMessageLite implements ReceiptRequest.ReceiptInfoOrBuilder {
	
	    	private static final ReceiptRequest.ReceiptInfo defaultInstance;
	        private int bitField0_;
	        private long eventTimestamp_;
	        private byte memoizedIsInitialized;
	        private int memoizedSerializedSize;
	        private Receipt.Type type_;

	        static 
	        {
	            ReceiptRequest.ReceiptInfo receiptinfo = new ReceiptRequest.ReceiptInfo();
	            defaultInstance = receiptinfo;
	            receiptinfo.type_ = Receipt.Type.UNKNOWN;
	            receiptinfo.eventTimestamp_ = 0L;
	        }

	        private ReceiptInfo()
	        {
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }

	        private ReceiptInfo(Builder builder)
	        {
	            super();
	            memoizedIsInitialized = -1;
	            memoizedSerializedSize = -1;
	        }
	        
	        public static ReceiptRequest.ReceiptInfo getDefaultInstance()
	        {
	            return defaultInstance;
	        }
	
	        public static Builder newBuilder()
	        {
	            return new Builder();
	        }
	
	        public final ReceiptRequest.ReceiptInfo getDefaultInstanceForType()
	        {
	            return defaultInstance;
	        }
	
	        public final long getEventTimestamp()
	        {
	            return eventTimestamp_;
	        }
	
	        public final int getSerializedSize()
	        {
	            int i = memoizedSerializedSize;
	            int l;
	            if(i != -1)
	            {
	                l = i;
	            } else
	            {
	                int j = 1 & bitField0_;
	                int k = 0;
	                if(j == 1)
	                    k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	                if((2 & bitField0_) == 2)
	                    k += CodedOutputStream.computeInt64Size(2, eventTimestamp_);
	                memoizedSerializedSize = k;
	                l = k;
	            }
	            return l;
	        }
	
	        public final Receipt.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasEventTimestamp()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            boolean flag = true;
	            byte byte0 = memoizedIsInitialized;
	            if(byte0 != -1)
	            {
	                if(byte0 != 1)
	                    flag = false;
	            } else
	            {
	                memoizedIsInitialized = 1;
	            }
	            return flag;
	        }
	
	        public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	        {
	            return new Builder();
	        }
	
	        public final com.google.protobuf.MessageLite.Builder toBuilder()
	        {
	            return new Builder().mergeFrom(this);
	        }
	
	        protected final Object writeReplace()
	            throws ObjectStreamException
	        {
	            return super.writeReplace();
	        }
	
	        public final void writeTo(CodedOutputStream codedoutputstream)
	            throws IOException
	        {
	            getSerializedSize();
	            if((1 & bitField0_) == 1)
	                codedoutputstream.writeEnum(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                codedoutputstream.writeInt64(2, eventTimestamp_);
	        }
	        
	        //=============================================
	        //					Builder
	        //=============================================
	        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ReceiptRequest.ReceiptInfoOrBuilder {
	        	
	        	private int bitField0_;
		        private long eventTimestamp_;
		        private Receipt.Type type_;

		        private Builder()
		        {
		            type_ = Receipt.Type.UNKNOWN;
		        }
	
		        public ReceiptRequest.ReceiptInfo.Builder clone()
		        {
		            return (new ReceiptRequest.ReceiptInfo.Builder()).mergeFrom(buildPartial());
		        }
	
		        public ReceiptRequest.ReceiptInfo.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
		            throws IOException
		        {
		            do
		            {
		                int i = codedinputstream.readTag();
		                switch(i)
		                {
		                default:
		                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
		                        continue;
		                    // fall through
	
		                case 0: // '\0'
		                    return this;
	
		                case 8: // '\b'
		                    Receipt.Type type = Receipt.Type.valueOf(codedinputstream.readEnum());
		                    if(type != null)
		                    {
		                        bitField0_ = 1 | bitField0_;
		                        type_ = type;
		                    }
		                    break;
	
		                case 16: // '\020'
		                    bitField0_ = 2 | bitField0_;
		                    eventTimestamp_ = codedinputstream.readInt64();
		                    break;
		                }
		            } while(true);
		        }
	
		        public final ReceiptRequest.ReceiptInfo build()
		        {
		            ReceiptRequest.ReceiptInfo receiptinfo = buildPartial();
		            if(!receiptinfo.isInitialized())
		                throw new UninitializedMessageException(Arrays.asList("receiptinfo"));
		            else
		                return receiptinfo;
		        }
	
		        public final ReceiptRequest.ReceiptInfo buildPartial()
		        {
		            ReceiptRequest.ReceiptInfo receiptinfo = new ReceiptRequest.ReceiptInfo(this);
		            int i = bitField0_;
		            int j = i & 1;
		            int k = 0;
		            if(j == 1)
		                k = 1;
		            receiptinfo.type_ = type_;
		            if((i & 2) == 2)
		                k |= 2;
		            receiptinfo.eventTimestamp_ = eventTimestamp_;
		            receiptinfo.bitField0_ = k;
		            return receiptinfo;
		        }
	
		        public final ReceiptRequest.ReceiptInfo.Builder clear()
		        {
		            super.clear();
		            type_ = Receipt.Type.UNKNOWN;
		            bitField0_ = -2 & bitField0_;
		            eventTimestamp_ = 0L;
		            bitField0_ = -3 & bitField0_;
		            return this;
		        }
	
		        public final ReceiptRequest.ReceiptInfo.Builder clearEventTimestamp()
		        {
		            bitField0_ = -3 & bitField0_;
		            eventTimestamp_ = 0L;
		            return this;
		        }
	
		        public final ReceiptRequest.ReceiptInfo.Builder clearType()
		        {
		            bitField0_ = -2 & bitField0_;
		            type_ = Receipt.Type.UNKNOWN;
		            return this;
		        }
	
		        public final ReceiptRequest.ReceiptInfo getDefaultInstanceForType()
		        {
		            return ReceiptRequest.ReceiptInfo.getDefaultInstance();
		        }
	
		        public final long getEventTimestamp()
		        {
		            return eventTimestamp_;
		        }
	
		        public final Receipt.Type getType()
		        {
		            return type_;
		        }
	
		        public final boolean hasEventTimestamp()
		        {
		            boolean flag;
		            if((2 & bitField0_) == 2)
		                flag = true;
		            else
		                flag = false;
		            return flag;
		        }
	
		        public final boolean hasType()
		        {
		            boolean flag = true;
		            if((1 & bitField0_) != 1)
		                flag = false;
		            return flag;
		        }
	
		        public final boolean isInitialized()
		        {
		            return true;
		        }
	
		        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
		        {
		            return mergeFrom((ReceiptRequest.ReceiptInfo)generatedmessagelite);
		        }
	
		        public final ReceiptRequest.ReceiptInfo.Builder mergeFrom(ReceiptRequest.ReceiptInfo receiptinfo)
		        {
		            if(receiptinfo == ReceiptRequest.ReceiptInfo.getDefaultInstance()) {
		            	return this;
		            }
		            
		            if(receiptinfo.hasType())
		                setType(receiptinfo.getType());
		            if(receiptinfo.hasEventTimestamp())
		                setEventTimestamp(receiptinfo.getEventTimestamp());
		            return this;
		        }
	
		        public final ReceiptRequest.ReceiptInfo.Builder setEventTimestamp(long l)
		        {
		            bitField0_ = 2 | bitField0_;
		            eventTimestamp_ = l;
		            return this;
		        }
	
		        public final ReceiptRequest.ReceiptInfo.Builder setType(Receipt.Type type)
		        {
		            if(type == null)
		            {
		                throw new NullPointerException();
		            } else
		            {
		                bitField0_ = 1 | bitField0_;
		                type_ = type;
		                return this;
		            }
		        }
		    }
	    }
	    
	    //=======================================================
	    //					
	    //=======================================================
	    
	    //=======================================================
	    //					Builder
	    //=======================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ReceiptRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private List receiptInfo_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            conversationId_ = "";
	            receiptInfo_ = Collections.emptyList();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public ReceiptRequest.Builder clone()
	        {
	            return (new ReceiptRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        private void ensureReceiptInfoIsMutable()
	        {
	            if((2 & bitField0_) != 2)
	            {
	                receiptInfo_ = new ArrayList(receiptInfo_);
	                bitField0_ = 2 | bitField0_;
	            }
	        }
	
	        public ReceiptRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    ReceiptRequest.ReceiptInfo.Builder builder1 = ReceiptRequest.ReceiptInfo.newBuilder();
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    addReceiptInfo(builder1.buildPartial());
	                    break;
	
	                case 26: // '\032'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ReceiptRequest.Builder addAllReceiptInfo(Iterable iterable)
	        {
	            ensureReceiptInfoIsMutable();
	            com.google.protobuf.GeneratedMessageLite.Builder.addAll(iterable, receiptInfo_);
	            return this;
	        }
	
	        public final ReceiptRequest.Builder addReceiptInfo(int i, ReceiptRequest.ReceiptInfo.Builder builder)
	        {
	            ensureReceiptInfoIsMutable();
	            receiptInfo_.add(i, builder.build());
	            return this;
	        }
	
	        public final ReceiptRequest.Builder addReceiptInfo(int i, ReceiptRequest.ReceiptInfo receiptinfo)
	        {
	            if(receiptinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureReceiptInfoIsMutable();
	                receiptInfo_.add(i, receiptinfo);
	                return this;
	            }
	        }
	
	        public final ReceiptRequest.Builder addReceiptInfo(ReceiptRequest.ReceiptInfo.Builder builder)
	        {
	            ensureReceiptInfoIsMutable();
	            receiptInfo_.add(builder.build());
	            return this;
	        }
	
	        public final ReceiptRequest.Builder addReceiptInfo(ReceiptRequest.ReceiptInfo receiptinfo)
	        {
	            if(receiptinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureReceiptInfoIsMutable();
	                receiptInfo_.add(receiptinfo);
	                return this;
	            }
	        }
	
	        public final ReceiptRequest build()
	        {
	            ReceiptRequest receiptrequest = buildPartial();
	            if(!receiptrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("receiptrequest"));
	            else
	                return receiptrequest;
	        }
	
	        public final ReceiptRequest buildPartial()
	        {
	            ReceiptRequest receiptrequest = new ReceiptRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            receiptrequest.conversationId_ = conversationId_;
	            if((2 & bitField0_) == 2)
	            {
	                receiptInfo_ = Collections.unmodifiableList(receiptInfo_);
	                bitField0_ = -3 & bitField0_;
	            }
	            receiptrequest.receiptInfo_ = receiptInfo_;
	            if((i & 4) == 4)
	                k |= 2;
	            receiptrequest.stubbyInfo_ = stubbyInfo_;
	            receiptrequest.bitField0_ = k;
	            return receiptrequest;
	        }
	
	        public final ReceiptRequest.Builder clear()
	        {
	            super.clear();
	            conversationId_ = "";
	            bitField0_ = -2 & bitField0_;
	            receiptInfo_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final ReceiptRequest.Builder clearConversationId()
	        {
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = ReceiptRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ReceiptRequest.Builder clearReceiptInfo()
	        {
	            receiptInfo_ = Collections.emptyList();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final ReceiptRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ReceiptRequest getDefaultInstanceForType()
	        {
	            return ReceiptRequest.getDefaultInstance();
	        }
	
	        public final ReceiptRequest.ReceiptInfo getReceiptInfo(int i)
	        {
	            return (ReceiptRequest.ReceiptInfo)receiptInfo_.get(i);
	        }
	
	        public final int getReceiptInfoCount()
	        {
	            return receiptInfo_.size();
	        }
	
	        public final List getReceiptInfoList()
	        {
	            return Collections.unmodifiableList(receiptInfo_);
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ReceiptRequest)generatedmessagelite);
	        }
	
	        public final ReceiptRequest.Builder mergeFrom(ReceiptRequest receiptrequest)
	        {
	            if(receiptrequest == ReceiptRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(receiptrequest.hasConversationId())
	                setConversationId(receiptrequest.getConversationId());
	            if(!receiptrequest.receiptInfo_.isEmpty())
	                if(receiptInfo_.isEmpty())
	                {
	                    receiptInfo_ = receiptrequest.receiptInfo_;
	                    bitField0_ = -3 & bitField0_;
	                } else
	                {
	                    ensureReceiptInfoIsMutable();
	                    receiptInfo_.addAll(receiptrequest.receiptInfo_);
	                }
	            if(receiptrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = receiptrequest.getStubbyInfo();
	                if((4 & bitField0_) == 4 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	            }
	            return this;
	        }
	
	        public final ReceiptRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ReceiptRequest.Builder setReceiptInfo(int i, ReceiptRequest.ReceiptInfo.Builder builder)
	        {
	            ensureReceiptInfoIsMutable();
	            receiptInfo_.set(i, builder.build());
	            return this;
	        }
	
	        public final ReceiptRequest.Builder setReceiptInfo(int i, ReceiptRequest.ReceiptInfo receiptinfo)
	        {
	            if(receiptinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                ensureReceiptInfoIsMutable();
	                receiptInfo_.set(i, receiptinfo);
	                return this;
	            }
	        }
	
	        public final ReceiptRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final ReceiptRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									ReplyToInviteRequest
	//=================================================================================================
	public static interface ReplyToInviteRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract ReplyToInviteRequest.Reply getReply();
	
	    public abstract String getReplyToId();
	
	    public abstract String getSenderId();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasReply();
	
	    public abstract boolean hasReplyToId();
	
	    public abstract boolean hasSenderId();
	}
	
	public static final class ReplyToInviteRequest extends GeneratedMessageLite implements ReplyToInviteRequestOrBuilder {
	
		private static final ReplyToInviteRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object replyToId_;
	    private Reply reply_;
	    private Object senderId_;

	    static 
	    {
	        ReplyToInviteRequest replytoinviterequest = new ReplyToInviteRequest();
	        defaultInstance = replytoinviterequest;
	        replytoinviterequest.replyToId_ = "";
	        replytoinviterequest.conversationId_ = "";
	        replytoinviterequest.reply_ = Reply.ACCEPT;
	        replytoinviterequest.senderId_ = "";
	    }

	    private ReplyToInviteRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    ReplyToInviteRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static ReplyToInviteRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getReplyToIdBytes()
	    {
	        Object obj = replyToId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            replyToId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    private ByteString getSenderIdBytes()
	    {
	        Object obj = senderId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            senderId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(ReplyToInviteRequest replytoinviterequest)
	    {
	        return new Builder().mergeFrom(replytoinviterequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final ReplyToInviteRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final Reply getReply()
	    {
	        return reply_;
	    }
	
	    public final String getReplyToId()
	    {
	        Object obj = replyToId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                replyToId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final String getSenderId()
	    {
	        Object obj = senderId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                senderId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getReplyToIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeEnumSize(3, reply_.getNumber());
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReply()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReplyToId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSenderId()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getReplyToIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeEnum(3, reply_.getNumber());
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeBytes(4, getSenderIdBytes());
	    }
	    
	    //===============================================
	    //					Reply
	    //===============================================
	    public static enum Reply implements com.google.protobuf.Internal.EnumLite {
	    	
	    	ACCEPT(1);
	    	
	    	private int value;
	    	
	    	private Reply(int value) {
	    		this.value = value;
	    	}
	    	
	    	public final int getNumber()
	        {
	            return value;
	        }
	    	
	    	public static Reply valueOf(int value) {
	    		for(Reply r : Reply.values()) {
	    			if(r.value == value) {
	    				return r;
	    			}
	    		}
	    		return null;
	    	}
	    }
        
	    //===============================================
	    //					Builder
	    //===============================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements ReplyToInviteRequestOrBuilder
	    {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Object replyToId_;
	        private ReplyToInviteRequest.Reply reply_;
	        private Object senderId_;

	        private Builder()
	        {
	            replyToId_ = "";
	            conversationId_ = "";
	            reply_ = ReplyToInviteRequest.Reply.ACCEPT;
	            senderId_ = "";
	        }
	        
	        public ReplyToInviteRequest.Builder clone()
	        {
	            return (new ReplyToInviteRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public ReplyToInviteRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    replyToId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 24: // '\030'
	                    ReplyToInviteRequest.Reply reply = ReplyToInviteRequest.Reply.valueOf(codedinputstream.readEnum());
	                    if(reply != null)
	                    {
	                        bitField0_ = 4 | bitField0_;
	                        reply_ = reply;
	                    }
	                    break;
	
	                case 34: // '"'
	                    bitField0_ = 8 | bitField0_;
	                    senderId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final ReplyToInviteRequest build()
	        {
	            ReplyToInviteRequest replytoinviterequest = buildPartial();
	            if(!replytoinviterequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("replytoinviterequest"));
	            else
	                return replytoinviterequest;
	        }
	
	        public final ReplyToInviteRequest buildPartial()
	        {
	            ReplyToInviteRequest replytoinviterequest = new ReplyToInviteRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            replytoinviterequest.replyToId_ = replyToId_;
	            if((i & 2) == 2)
	                k |= 2;
	            replytoinviterequest.conversationId_ = conversationId_;
	            if((i & 4) == 4)
	                k |= 4;
	            replytoinviterequest.reply_ = reply_;
	            if((i & 8) == 8)
	                k |= 8;
	            replytoinviterequest.senderId_ = senderId_;
	            replytoinviterequest.bitField0_ = k;
	            return replytoinviterequest;
	        }
	
	        public final ReplyToInviteRequest.Builder clear()
	        {
	            super.clear();
	            replyToId_ = "";
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            reply_ = ReplyToInviteRequest.Reply.ACCEPT;
	            bitField0_ = -5 & bitField0_;
	            senderId_ = "";
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final ReplyToInviteRequest.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = ReplyToInviteRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final ReplyToInviteRequest.Builder clearReply()
	        {
	            bitField0_ = -5 & bitField0_;
	            reply_ = ReplyToInviteRequest.Reply.ACCEPT;
	            return this;
	        }
	
	        public final ReplyToInviteRequest.Builder clearReplyToId()
	        {
	            bitField0_ = -2 & bitField0_;
	            replyToId_ = ReplyToInviteRequest.getDefaultInstance().getReplyToId();
	            return this;
	        }
	
	        public final ReplyToInviteRequest.Builder clearSenderId()
	        {
	            bitField0_ = -9 & bitField0_;
	            senderId_ = ReplyToInviteRequest.getDefaultInstance().getSenderId();
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final ReplyToInviteRequest getDefaultInstanceForType()
	        {
	            return ReplyToInviteRequest.getDefaultInstance();
	        }
	
	        public final ReplyToInviteRequest.Reply getReply()
	        {
	            return reply_;
	        }
	
	        public final String getReplyToId()
	        {
	            Object obj = replyToId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                replyToId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final String getSenderId()
	        {
	            Object obj = senderId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                senderId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReply()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReplyToId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSenderId()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((ReplyToInviteRequest)generatedmessagelite);
	        }
	
	        public final ReplyToInviteRequest.Builder mergeFrom(ReplyToInviteRequest replytoinviterequest)
	        {
	            if(replytoinviterequest == ReplyToInviteRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(replytoinviterequest.hasReplyToId())
	                setReplyToId(replytoinviterequest.getReplyToId());
	            if(replytoinviterequest.hasConversationId())
	                setConversationId(replytoinviterequest.getConversationId());
	            if(replytoinviterequest.hasReply())
	                setReply(replytoinviterequest.getReply());
	            if(replytoinviterequest.hasSenderId())
	                setSenderId(replytoinviterequest.getSenderId());
	            return this;
	        }
	
	        public final ReplyToInviteRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final ReplyToInviteRequest.Builder setReply(ReplyToInviteRequest.Reply reply)
	        {
	            if(reply == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 4 | bitField0_;
	                reply_ = reply;
	                return this;
	            }
	        }
	
	        public final ReplyToInviteRequest.Builder setReplyToId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                replyToId_ = s;
	                return this;
	            }
	        }
	
	        public final ReplyToInviteRequest.Builder setSenderId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 8 | bitField0_;
	                senderId_ = s;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									BunchCommand
	//=================================================================================================
	public static interface TypingRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getConversationId();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract Typing.Type getType();
	
	    public abstract boolean hasConversationId();
	
	    public abstract boolean hasStubbyInfo();
	
	    public abstract boolean hasType();
	}
	
	public static final class TypingRequest extends GeneratedMessageLite implements TypingRequestOrBuilder {
	
		private static final TypingRequest defaultInstance;
	    private int bitField0_;
	    private Object conversationId_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;
	    private Typing.Type type_;

	    static 
	    {
	        TypingRequest typingrequest = new TypingRequest();
	        defaultInstance = typingrequest;
	        typingrequest.type_ = Typing.Type.UNKNOWN;
	        typingrequest.conversationId_ = "";
	        typingrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private TypingRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    TypingRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    private ByteString getConversationIdBytes()
	    {
	        Object obj = conversationId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            conversationId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static TypingRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(TypingRequest typingrequest)
	    {
	        return new Builder().mergeFrom(typingrequest);
	    }
	
	    public final String getConversationId()
	    {
	        Object obj = conversationId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                conversationId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final TypingRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeEnumSize(1, type_.getNumber());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final Typing.Type getType()
	    {
	        return type_;
	    }
	
	    public final boolean hasConversationId()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasType()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeEnum(1, type_.getNumber());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeBytes(2, getConversationIdBytes());
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, stubbyInfo_);
	    }
	    
	    //=============================================
	    //					Builder
	    //=============================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements TypingRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object conversationId_;
	        private Data.StubbyInfo stubbyInfo_;
	        private Typing.Type type_;

	        private Builder()
	        {
	            type_ = Typing.Type.UNKNOWN;
	            conversationId_ = "";
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public TypingRequest.Builder clone()
	        {
	            return (new TypingRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public TypingRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 8: // '\b'
	                    Typing.Type type = Typing.Type.valueOf(codedinputstream.readEnum());
	                    if(type != null)
	                    {
	                        bitField0_ = 1 | bitField0_;
	                        type_ = type;
	                    }
	                    break;
	
	                case 18: // '\022'
	                    bitField0_ = 2 | bitField0_;
	                    conversationId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final TypingRequest build()
	        {
	            TypingRequest typingrequest = buildPartial();
	            if(!typingrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("typingrequest"));
	            else
	                return typingrequest;
	        }
	
	        public final TypingRequest buildPartial()
	        {
	            TypingRequest typingrequest = new TypingRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            typingrequest.type_ = type_;
	            if((i & 2) == 2)
	                k |= 2;
	            typingrequest.conversationId_ = conversationId_;
	            if((i & 4) == 4)
	                k |= 4;
	            typingrequest.stubbyInfo_ = stubbyInfo_;
	            typingrequest.bitField0_ = k;
	            return typingrequest;
	        }
	
	        public final TypingRequest.Builder clear()
	        {
	            super.clear();
	            type_ = Typing.Type.UNKNOWN;
	            bitField0_ = -2 & bitField0_;
	            conversationId_ = "";
	            bitField0_ = -3 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final TypingRequest.Builder clearConversationId()
	        {
	            bitField0_ = -3 & bitField0_;
	            conversationId_ = TypingRequest.getDefaultInstance().getConversationId();
	            return this;
	        }
	
	        public final TypingRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final TypingRequest.Builder clearType()
	        {
	            bitField0_ = -2 & bitField0_;
	            type_ = Typing.Type.UNKNOWN;
	            return this;
	        }
	
	        public final String getConversationId()
	        {
	            Object obj = conversationId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                conversationId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final TypingRequest getDefaultInstanceForType()
	        {
	            return TypingRequest.getDefaultInstance();
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final Typing.Type getType()
	        {
	            return type_;
	        }
	
	        public final boolean hasConversationId()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasType()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((TypingRequest)generatedmessagelite);
	        }
	
	        public final TypingRequest.Builder mergeFrom(TypingRequest typingrequest)
	        {
	            if(typingrequest == TypingRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(typingrequest.hasType())
	                setType(typingrequest.getType());
	            if(typingrequest.hasConversationId())
	                setConversationId(typingrequest.getConversationId());
	            if(typingrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = typingrequest.getStubbyInfo();
	                if((4 & bitField0_) == 4 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	            }
	            return this;
	        }
	
	        public final TypingRequest.Builder setConversationId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 2 | bitField0_;
	                conversationId_ = s;
	                return this;
	            }
	        }
	
	        public final TypingRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final TypingRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final TypingRequest.Builder setType(Typing.Type type)
	        {
	            if(type == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                type_ = type;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									UserCreationRequest
	//=================================================================================================
	public static interface UserCreationRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract DeviceRegistrationRequest getDeviceRegistration();
	
	    public abstract Data.StubbyInfo getStubbyInfo();
	
	    public abstract boolean hasDeviceRegistration();
	
	    public abstract boolean hasStubbyInfo();
	}
	
	public static final class UserCreationRequest extends GeneratedMessageLite implements UserCreationRequestOrBuilder {
	
		private static final UserCreationRequest defaultInstance;
	    private int bitField0_;
	    private DeviceRegistrationRequest deviceRegistration_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Data.StubbyInfo stubbyInfo_;

	    static 
	    {
	        UserCreationRequest usercreationrequest = new UserCreationRequest();
	        defaultInstance = usercreationrequest;
	        usercreationrequest.deviceRegistration_ = DeviceRegistrationRequest.getDefaultInstance();
	        usercreationrequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	    }

	    private UserCreationRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    UserCreationRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static UserCreationRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(UserCreationRequest usercreationrequest)
	    {
	        return new Builder().mergeFrom(usercreationrequest);
	    }
	
	    public final UserCreationRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final DeviceRegistrationRequest getDeviceRegistration()
	    {
	        return deviceRegistration_;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeMessageSize(1, deviceRegistration_);
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(2, stubbyInfo_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final Data.StubbyInfo getStubbyInfo()
	    {
	        return stubbyInfo_;
	    }
	
	    public final boolean hasDeviceRegistration()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasStubbyInfo()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeMessage(1, deviceRegistration_);
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(2, stubbyInfo_);
	    }
	    
	    //====================================================
	    //					Builder
	    //====================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements UserCreationRequestOrBuilder {
	
	    	private int bitField0_;
	        private DeviceRegistrationRequest deviceRegistration_;
	        private Data.StubbyInfo stubbyInfo_;

	        private Builder()
	        {
	            deviceRegistration_ = DeviceRegistrationRequest.getDefaultInstance();
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	        }
	        
	        public Builder clone()
	        {
	            return (new UserCreationRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public UserCreationRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    DeviceRegistrationRequest.Builder builder1 = DeviceRegistrationRequest.newBuilder();
	                    if(hasDeviceRegistration())
	                        builder1.mergeFrom(getDeviceRegistration());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setDeviceRegistration(builder1.buildPartial());
	                    break;
	
	                case 18: // '\022'
	                    Data.StubbyInfo.Builder builder = Data.StubbyInfo.newBuilder();
	                    if(hasStubbyInfo())
	                        builder.mergeFrom(getStubbyInfo());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setStubbyInfo(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final UserCreationRequest build()
	        {
	            UserCreationRequest usercreationrequest = buildPartial();
	            if(!usercreationrequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("usercreationrequest"));
	            else
	                return usercreationrequest;
	        }
	
	        public final UserCreationRequest buildPartial()
	        {
	            UserCreationRequest usercreationrequest = new UserCreationRequest(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            usercreationrequest.deviceRegistration_ = deviceRegistration_;
	            if((i & 2) == 2)
	                k |= 2;
	            usercreationrequest.stubbyInfo_ = stubbyInfo_;
	            usercreationrequest.bitField0_ = k;
	            return usercreationrequest;
	        }
	
	        public final UserCreationRequest.Builder clear()
	        {
	            super.clear();
	            deviceRegistration_ = DeviceRegistrationRequest.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final UserCreationRequest.Builder clearDeviceRegistration()
	        {
	            deviceRegistration_ = DeviceRegistrationRequest.getDefaultInstance();
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final UserCreationRequest.Builder clearStubbyInfo()
	        {
	            stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final UserCreationRequest getDefaultInstanceForType()
	        {
	            return UserCreationRequest.getDefaultInstance();
	        }
	
	        public final DeviceRegistrationRequest getDeviceRegistration()
	        {
	            return deviceRegistration_;
	        }
	
	        public final Data.StubbyInfo getStubbyInfo()
	        {
	            return stubbyInfo_;
	        }
	
	        public final boolean hasDeviceRegistration()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasStubbyInfo()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((UserCreationRequest)generatedmessagelite);
	        }
	
	        public final UserCreationRequest.Builder mergeFrom(UserCreationRequest usercreationrequest)
	        {
	            if(usercreationrequest == UserCreationRequest.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(usercreationrequest.hasDeviceRegistration())
	            {
	                DeviceRegistrationRequest deviceregistrationrequest = usercreationrequest.getDeviceRegistration();
	                if((1 & bitField0_) == 1 && deviceRegistration_ != DeviceRegistrationRequest.getDefaultInstance())
	                    deviceRegistration_ = DeviceRegistrationRequest.newBuilder(deviceRegistration_).mergeFrom(deviceregistrationrequest).buildPartial();
	                else
	                    deviceRegistration_ = deviceregistrationrequest;
	                bitField0_ = 1 | bitField0_;
	            }
	            if(usercreationrequest.hasStubbyInfo())
	            {
	                Data.StubbyInfo stubbyinfo = usercreationrequest.getStubbyInfo();
	                if((2 & bitField0_) == 2 && stubbyInfo_ != Data.StubbyInfo.getDefaultInstance())
	                    stubbyInfo_ = Data.StubbyInfo.newBuilder(stubbyInfo_).mergeFrom(stubbyinfo).buildPartial();
	                else
	                    stubbyInfo_ = stubbyinfo;
	                bitField0_ = 2 | bitField0_;
	            }
	            return this;
	        }
	
	        public final UserCreationRequest.Builder setDeviceRegistration(DeviceRegistrationRequest.Builder builder)
	        {
	            deviceRegistration_ = builder.build();
	            bitField0_ = 1 | bitField0_;
	            return this;
	        }
	
	        public final UserCreationRequest.Builder setDeviceRegistration(DeviceRegistrationRequest deviceregistrationrequest)
	        {
	            if(deviceregistrationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                deviceRegistration_ = deviceregistrationrequest;
	                bitField0_ = 1 | bitField0_;
	                return this;
	            }
	        }
	
	        public final UserCreationRequest.Builder setStubbyInfo(Data.StubbyInfo.Builder builder)
	        {
	            stubbyInfo_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final UserCreationRequest.Builder setStubbyInfo(Data.StubbyInfo stubbyinfo)
	        {
	            if(stubbyinfo == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                stubbyInfo_ = stubbyinfo;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									UserInfoRequest
	//=================================================================================================
	public static interface UserInfoRequestOrBuilder extends MessageLiteOrBuilder {

	    public abstract String getParticipantId();
	
	    public abstract boolean hasParticipantId();
	}
	
	public static final class UserInfoRequest extends GeneratedMessageLite implements UserInfoRequestOrBuilder {
	
		private static final UserInfoRequest defaultInstance;
	    private int bitField0_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Object participantId_;

	    static 
	    {
	        UserInfoRequest userinforequest = new UserInfoRequest();
	        defaultInstance = userinforequest;
	        userinforequest.participantId_ = "";
	    }

	    private UserInfoRequest()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    UserInfoRequest(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static UserInfoRequest getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getParticipantIdBytes()
	    {
	        Object obj = participantId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            participantId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(UserInfoRequest userinforequest)
	    {
	        return new Builder().mergeFrom(userinforequest);
	    }
	
	    public final UserInfoRequest getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final String getParticipantId()
	    {
	        Object obj = participantId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                participantId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getParticipantIdBytes());
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final boolean hasParticipantId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getParticipantIdBytes());
	    }
	    
	    //======================================
	    //				Builder
	    //======================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements UserInfoRequestOrBuilder {
	
	    	private int bitField0_;
	        private Object participantId_;

	        private Builder()
	        {
	            participantId_ = "";
	        }
	        
	        public UserInfoRequest.Builder clone()
	        {
	            return (new UserInfoRequest.Builder()).mergeFrom(buildPartial());
	        }
	
	        public UserInfoRequest.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    participantId_ = codedinputstream.readBytes();
	                    break;
	                }
	            } while(true);
	        }
	
	        public final UserInfoRequest build()
	        {
	            UserInfoRequest userinforequest = buildPartial();
	            if(!userinforequest.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("userinforequest"));
	            else
	                return userinforequest;
	        }
	
	        public final UserInfoRequest buildPartial()
	        {
	            UserInfoRequest userinforequest = new UserInfoRequest(this);
	            int i = 1 & bitField0_;
	            int j = 0;
	            if(i == 1)
	                j = 1;
	            userinforequest.participantId_ = participantId_;
	            userinforequest.bitField0_ = j;
	            return userinforequest;
	        }
	
	        public final UserInfoRequest.Builder clear()
	        {
	            super.clear();
	            participantId_ = "";
	            bitField0_ = -2 & bitField0_;
	            return this;
	        }
	
	        public final UserInfoRequest.Builder clearParticipantId()
	        {
	            bitField0_ = -2 & bitField0_;
	            participantId_ = UserInfoRequest.getDefaultInstance().getParticipantId();
	            return this;
	        }
	
	        public final UserInfoRequest getDefaultInstanceForType()
	        {
	            return UserInfoRequest.getDefaultInstance();
	        }
	
	        public final String getParticipantId()
	        {
	            Object obj = participantId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                participantId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final boolean hasParticipantId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((UserInfoRequest)generatedmessagelite);
	        }
	
	        public final UserInfoRequest.Builder mergeFrom(UserInfoRequest userinforequest)
	        {
	            if(userinforequest != UserInfoRequest.getDefaultInstance() && userinforequest.hasParticipantId())
	                setParticipantId(userinforequest.getParticipantId());
	            return this;
	        }
	
	        public final UserInfoRequest.Builder setParticipantId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                participantId_ = s;
	                return this;
	            }
	        }
	    }
	}
	//==================================================================================================
	//									BunchCommand
	//=================================================================================================
	
	//==================================================================================================
	//									BunchCommand
	//==================================================================================================
	public static interface BunchCommandOrBuilder extends MessageLiteOrBuilder {
	
	    public abstract ChatMessage getChatMessage();
	
	    public abstract ChatMessageRequest getChatMessageRequest();
	
	    public abstract ChatMessageResponse getChatMessageResponse();
	
	    public abstract ConversationJoinRequest getConversationJoinRequest();
	
	    public abstract ConversationJoinResponse getConversationJoinResponse();
	
	    public abstract ConversationListRequest getConversationListRequest();
	
	    public abstract ConversationListResponse getConversationListResponse();
	
	    public abstract ConversationPreferenceRequest getConversationPreferenceRequest();
	
	    public abstract ConversationPreferenceResponse getConversationPreferenceResponse();
	
	    public abstract ConversationRenameRequest getConversationRenameRequest();
	
	    public abstract ConversationRenameResponse getConversationRenameResponse();
	
	    public abstract NewConversationRequest getConversationRequest();
	
	    public abstract NewConversationResponse getConversationResponse();
	
	    public abstract ConversationSearchRequest getConversationSearchRequest();
	
	    public abstract ConversationSearchResponse getConversationSearchResponse();
	
	    public abstract DeviceRegistrationRequest getDeviceRegistrationRequest();
	
	    public abstract DeviceRegistrationResponse getDeviceRegistrationResponse();
	
	    public abstract Error getError();
	
	    public abstract EventSearchRequest getEventSearchRequest();
	
	    public abstract EventSearchResponse getEventSearchResponse();
	
	    public abstract EventStreamResponse getEventSteamResponse();
	
	    public abstract EventStreamRequest getEventStreamRequest();
	
	    public abstract GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest();
	
	    public abstract GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse();
	
	    public abstract GroupConversationRename getGroupConversationRename();
	
	    public abstract HangoutInviteFinishRequest getHangoutInviteFinishRequest();
	
	    public abstract HangoutInviteFinishResponse getHangoutInviteFinishResponse();
	
	    public abstract HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest();
	
	    public abstract HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse();
	
	    public abstract HangoutInviteReplyRequest getHangoutInviteReplyRequest();
	
	    public abstract HangoutInviteReplyResponse getHangoutInviteReplyResponse();
	
	    public abstract HangoutInviteRequest getHangoutInviteRequest();
	
	    public abstract HangoutInviteResponse getHangoutInviteResponse();
	
	    public abstract HangoutRingFinishRequest getHangoutRingFinishRequest();
	
	    public abstract HangoutRingFinishResponse getHangoutRingFinishResponse();
	
	    public abstract InvalidateLocalCache getInvalidateLocalCache();
	
	    public abstract InviteRequest getInviteRequest();
	
	    public abstract InviteResponse getInviteResponse();
	
	    public abstract LeaveConversationRequest getLeaveConversationRequest();
	
	    public abstract LeaveConversationResponse getLeaveConversationResponse();
	
	    public abstract MembershipChange getMembershipChange();
	
	    public abstract Migration getMigration();
	
	    public abstract PingRequest getPingRequest();
	
	    public abstract PingResponse getPingResponse();
	
	    public abstract Presence getPresence();
	
	    public abstract PresenceRequest getPresenceRequest();
	
	    public abstract PresenceResponse getPresenceResponse();
	
	    public abstract Receipt getReceipt();
	
	    public abstract ReceiptRequest getReceiptRequest();
	
	    public abstract ReceiptResponse getReceiptResponse();
	
	    public abstract ReplyToInviteRequest getReplyToInviteRequest();
	
	    public abstract ReplyToInviteResponse getReplyToInviteResponse();
	
	    public abstract String getRequestClientId();
	
	    public abstract SetAclsRequest getSetAclsRequest();
	
	    public abstract SetAclsResponse getSetAclsResponse();
	
	    public abstract SuggestionsRequest getSuggestionsRequest();
	
	    public abstract SuggestionsResponse getSuggestionsResponse();
	
	    public abstract TileEvent getTileEvent();
	
	    public abstract TileEventRequest getTileEventRequest();
	
	    public abstract TileEventResponse getTileEventResponse();
	
	    public abstract Typing getTyping();
	
	    public abstract TypingRequest getTypingRequest();
	
	    public abstract TypingResponse getTypingResponse();
	
	    public abstract UserCreationRequest getUserCreationRequest();
	
	    public abstract UserCreationResponse getUserCreationResponse();
	
	    public abstract UserInfoRequest getUserInfoRequest();
	
	    public abstract UserInfoResponse getUserInfoResponse();
	
	    public abstract boolean hasChatMessage();
	
	    public abstract boolean hasChatMessageRequest();
	
	    public abstract boolean hasChatMessageResponse();
	
	    public abstract boolean hasConversationJoinRequest();
	
	    public abstract boolean hasConversationJoinResponse();
	
	    public abstract boolean hasConversationListRequest();
	
	    public abstract boolean hasConversationListResponse();
	
	    public abstract boolean hasConversationPreferenceRequest();
	
	    public abstract boolean hasConversationPreferenceResponse();
	
	    public abstract boolean hasConversationRenameRequest();
	
	    public abstract boolean hasConversationRenameResponse();
	
	    public abstract boolean hasConversationRequest();
	
	    public abstract boolean hasConversationResponse();
	
	    public abstract boolean hasConversationSearchRequest();
	
	    public abstract boolean hasConversationSearchResponse();
	
	    public abstract boolean hasDeviceRegistrationRequest();
	
	    public abstract boolean hasDeviceRegistrationResponse();
	
	    public abstract boolean hasError();
	
	    public abstract boolean hasEventSearchRequest();
	
	    public abstract boolean hasEventSearchResponse();
	
	    public abstract boolean hasEventSteamResponse();
	
	    public abstract boolean hasEventStreamRequest();
	
	    public abstract boolean hasGlobalConversationPreferencesRequest();
	
	    public abstract boolean hasGlobalConversationPreferencesResponse();
	
	    public abstract boolean hasGroupConversationRename();
	
	    public abstract boolean hasHangoutInviteFinishRequest();
	
	    public abstract boolean hasHangoutInviteFinishResponse();
	
	    public abstract boolean hasHangoutInviteKeepAliveRequest();
	
	    public abstract boolean hasHangoutInviteKeepAliveResponse();
	
	    public abstract boolean hasHangoutInviteReplyRequest();
	
	    public abstract boolean hasHangoutInviteReplyResponse();
	
	    public abstract boolean hasHangoutInviteRequest();
	
	    public abstract boolean hasHangoutInviteResponse();
	
	    public abstract boolean hasHangoutRingFinishRequest();
	
	    public abstract boolean hasHangoutRingFinishResponse();
	
	    public abstract boolean hasInvalidateLocalCache();
	
	    public abstract boolean hasInviteRequest();
	
	    public abstract boolean hasInviteResponse();
	
	    public abstract boolean hasLeaveConversationRequest();
	
	    public abstract boolean hasLeaveConversationResponse();
	
	    public abstract boolean hasMembershipChange();
	
	    public abstract boolean hasMigration();
	
	    public abstract boolean hasPingRequest();
	
	    public abstract boolean hasPingResponse();
	
	    public abstract boolean hasPresence();
	
	    public abstract boolean hasPresenceRequest();
	
	    public abstract boolean hasPresenceResponse();
	
	    public abstract boolean hasReceipt();
	
	    public abstract boolean hasReceiptRequest();
	
	    public abstract boolean hasReceiptResponse();
	
	    public abstract boolean hasReplyToInviteRequest();
	
	    public abstract boolean hasReplyToInviteResponse();
	
	    public abstract boolean hasRequestClientId();
	
	    public abstract boolean hasSetAclsRequest();
	
	    public abstract boolean hasSetAclsResponse();
	
	    public abstract boolean hasSuggestionsRequest();
	
	    public abstract boolean hasSuggestionsResponse();
	
	    public abstract boolean hasTileEvent();
	
	    public abstract boolean hasTileEventRequest();
	
	    public abstract boolean hasTileEventResponse();
	
	    public abstract boolean hasTyping();
	
	    public abstract boolean hasTypingRequest();
	
	    public abstract boolean hasTypingResponse();
	
	    public abstract boolean hasUserCreationRequest();
	
	    public abstract boolean hasUserCreationResponse();
	
	    public abstract boolean hasUserInfoRequest();
	
	    public abstract boolean hasUserInfoResponse();
	}
	
	public static final class BunchCommand extends GeneratedMessageLite implements BunchCommandOrBuilder {
	
		private static final BunchCommand defaultInstance;
	    private int bitField0_;
	    private int bitField1_;
	    private int bitField2_;
	    private ChatMessageRequest chatMessageRequest_;
	    private ChatMessageResponse chatMessageResponse_;
	    private ChatMessage chatMessage_;
	    private ConversationJoinRequest conversationJoinRequest_;
	    private ConversationJoinResponse conversationJoinResponse_;
	    private ConversationListRequest conversationListRequest_;
	    private ConversationListResponse conversationListResponse_;
	    private ConversationPreferenceRequest conversationPreferenceRequest_;
	    private ConversationPreferenceResponse conversationPreferenceResponse_;
	    private ConversationRenameRequest conversationRenameRequest_;
	    private ConversationRenameResponse conversationRenameResponse_;
	    private NewConversationRequest conversationRequest_;
	    private NewConversationResponse conversationResponse_;
	    private ConversationSearchRequest conversationSearchRequest_;
	    private ConversationSearchResponse conversationSearchResponse_;
	    private DeviceRegistrationRequest deviceRegistrationRequest_;
	    private DeviceRegistrationResponse deviceRegistrationResponse_;
	    private Error error_;
	    private EventSearchRequest eventSearchRequest_;
	    private EventSearchResponse eventSearchResponse_;
	    private EventStreamResponse eventSteamResponse_;
	    private EventStreamRequest eventStreamRequest_;
	    private GlobalConversationPreferencesRequest globalConversationPreferencesRequest_;
	    private GlobalConversationPreferencesResponse globalConversationPreferencesResponse_;
	    private GroupConversationRename groupConversationRename_;
	    private HangoutInviteFinishRequest hangoutInviteFinishRequest_;
	    private HangoutInviteFinishResponse hangoutInviteFinishResponse_;
	    private HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_;
	    private HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_;
	    private HangoutInviteReplyRequest hangoutInviteReplyRequest_;
	    private HangoutInviteReplyResponse hangoutInviteReplyResponse_;
	    private HangoutInviteRequest hangoutInviteRequest_;
	    private HangoutInviteResponse hangoutInviteResponse_;
	    private HangoutRingFinishRequest hangoutRingFinishRequest_;
	    private HangoutRingFinishResponse hangoutRingFinishResponse_;
	    private InvalidateLocalCache invalidateLocalCache_;
	    private InviteRequest inviteRequest_;
	    private InviteResponse inviteResponse_;
	    private LeaveConversationRequest leaveConversationRequest_;
	    private LeaveConversationResponse leaveConversationResponse_;
	    private MembershipChange membershipChange_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private Migration migration_;
	    private PingRequest pingRequest_;
	    private PingResponse pingResponse_;
	    private PresenceRequest presenceRequest_;
	    private PresenceResponse presenceResponse_;
	    private Presence presence_;
	    private ReceiptRequest receiptRequest_;
	    private ReceiptResponse receiptResponse_;
	    private Receipt receipt_;
	    private ReplyToInviteRequest replyToInviteRequest_;
	    private ReplyToInviteResponse replyToInviteResponse_;
	    private Object requestClientId_;
	    private SetAclsRequest setAclsRequest_;
	    private SetAclsResponse setAclsResponse_;
	    private SuggestionsRequest suggestionsRequest_;
	    private SuggestionsResponse suggestionsResponse_;
	    private TileEventRequest tileEventRequest_;
	    private TileEventResponse tileEventResponse_;
	    private TileEvent tileEvent_;
	    private TypingRequest typingRequest_;
	    private TypingResponse typingResponse_;
	    private Typing typing_;
	    private UserCreationRequest userCreationRequest_;
	    private UserCreationResponse userCreationResponse_;
	    private UserInfoRequest userInfoRequest_;
	    private UserInfoResponse userInfoResponse_;

	    static 
	    {
	        BunchCommand bunchcommand = new BunchCommand();
	        defaultInstance = bunchcommand;
	        bunchcommand.requestClientId_ = "";
	        bunchcommand.chatMessage_ = ChatMessage.getDefaultInstance();
	        bunchcommand.chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
	        bunchcommand.chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	        bunchcommand.presenceRequest_ = PresenceRequest.getDefaultInstance();
	        bunchcommand.presenceResponse_ = PresenceResponse.getDefaultInstance();
	        bunchcommand.presence_ = Presence.getDefaultInstance();
	        bunchcommand.typingRequest_ = TypingRequest.getDefaultInstance();
	        bunchcommand.typingResponse_ = TypingResponse.getDefaultInstance();
	        bunchcommand.typing_ = Typing.getDefaultInstance();
	        bunchcommand.receipt_ = Receipt.getDefaultInstance();
	        bunchcommand.receiptRequest_ = ReceiptRequest.getDefaultInstance();
	        bunchcommand.receiptResponse_ = ReceiptResponse.getDefaultInstance();
	        bunchcommand.membershipChange_ = MembershipChange.getDefaultInstance();
	        bunchcommand.conversationRequest_ = NewConversationRequest.getDefaultInstance();
	        bunchcommand.conversationResponse_ = NewConversationResponse.getDefaultInstance();
	        bunchcommand.eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
	        bunchcommand.eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	        bunchcommand.deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
	        bunchcommand.deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	        bunchcommand.pingRequest_ = PingRequest.getDefaultInstance();
	        bunchcommand.pingResponse_ = PingResponse.getDefaultInstance();
	        bunchcommand.conversationListRequest_ = ConversationListRequest.getDefaultInstance();
	        bunchcommand.conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	        bunchcommand.userCreationRequest_ = UserCreationRequest.getDefaultInstance();
	        bunchcommand.userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	        bunchcommand.error_ = Error.getDefaultInstance();
	        bunchcommand.inviteRequest_ = InviteRequest.getDefaultInstance();
	        bunchcommand.leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
	        bunchcommand.leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	        bunchcommand.conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
	        bunchcommand.conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	        bunchcommand.groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	        bunchcommand.tileEventRequest_ = TileEventRequest.getDefaultInstance();
	        bunchcommand.tileEventResponse_ = TileEventResponse.getDefaultInstance();
	        bunchcommand.tileEvent_ = TileEvent.getDefaultInstance();
	        bunchcommand.migration_ = Migration.getDefaultInstance();
	        bunchcommand.conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
	        bunchcommand.conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	        bunchcommand.replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
	        bunchcommand.setAclsRequest_ = SetAclsRequest.getDefaultInstance();
	        bunchcommand.invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	        bunchcommand.inviteResponse_ = InviteResponse.getDefaultInstance();
	        bunchcommand.replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	        bunchcommand.setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	        bunchcommand.userInfoRequest_ = UserInfoRequest.getDefaultInstance();
	        bunchcommand.userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	        bunchcommand.conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
	        bunchcommand.conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	        bunchcommand.eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
	        bunchcommand.eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	        bunchcommand.suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
	        bunchcommand.suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	        bunchcommand.globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
	        bunchcommand.globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	        bunchcommand.conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
	        bunchcommand.conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	        bunchcommand.hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
	        bunchcommand.hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	        bunchcommand.hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
	        bunchcommand.hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	        bunchcommand.hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
	        bunchcommand.hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	        bunchcommand.hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
	        bunchcommand.hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	        bunchcommand.hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
	        bunchcommand.hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	    }

	    private BunchCommand()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }

	    BunchCommand(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	    
	    public static BunchCommand getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestClientIdBytes()
	    {
	        Object obj = requestClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public static Builder newBuilder(BunchCommand bunchcommand)
	    {
	        return new Builder().mergeFrom(bunchcommand);
	    }
	
	    public final ChatMessage getChatMessage()
	    {
	        return chatMessage_;
	    }
	
	    public final ChatMessageRequest getChatMessageRequest()
	    {
	        return chatMessageRequest_;
	    }
	
	    public final ChatMessageResponse getChatMessageResponse()
	    {
	        return chatMessageResponse_;
	    }
	
	    public final ConversationJoinRequest getConversationJoinRequest()
	    {
	        return conversationJoinRequest_;
	    }
	
	    public final ConversationJoinResponse getConversationJoinResponse()
	    {
	        return conversationJoinResponse_;
	    }
	
	    public final ConversationListRequest getConversationListRequest()
	    {
	        return conversationListRequest_;
	    }
	
	    public final ConversationListResponse getConversationListResponse()
	    {
	        return conversationListResponse_;
	    }
	
	    public final ConversationPreferenceRequest getConversationPreferenceRequest()
	    {
	        return conversationPreferenceRequest_;
	    }
	
	    public final ConversationPreferenceResponse getConversationPreferenceResponse()
	    {
	        return conversationPreferenceResponse_;
	    }
	
	    public final ConversationRenameRequest getConversationRenameRequest()
	    {
	        return conversationRenameRequest_;
	    }
	
	    public final ConversationRenameResponse getConversationRenameResponse()
	    {
	        return conversationRenameResponse_;
	    }
	
	    public final NewConversationRequest getConversationRequest()
	    {
	        return conversationRequest_;
	    }
	
	    public final NewConversationResponse getConversationResponse()
	    {
	        return conversationResponse_;
	    }
	
	    public final ConversationSearchRequest getConversationSearchRequest()
	    {
	        return conversationSearchRequest_;
	    }
	
	    public final ConversationSearchResponse getConversationSearchResponse()
	    {
	        return conversationSearchResponse_;
	    }
	
	    public final BunchCommand getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final DeviceRegistrationRequest getDeviceRegistrationRequest()
	    {
	        return deviceRegistrationRequest_;
	    }
	
	    public final DeviceRegistrationResponse getDeviceRegistrationResponse()
	    {
	        return deviceRegistrationResponse_;
	    }
	
	    public final Error getError()
	    {
	        return error_;
	    }
	
	    public final EventSearchRequest getEventSearchRequest()
	    {
	        return eventSearchRequest_;
	    }
	
	    public final EventSearchResponse getEventSearchResponse()
	    {
	        return eventSearchResponse_;
	    }
	
	    public final EventStreamResponse getEventSteamResponse()
	    {
	        return eventSteamResponse_;
	    }
	
	    public final EventStreamRequest getEventStreamRequest()
	    {
	        return eventStreamRequest_;
	    }
	
	    public final GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
	    {
	        return globalConversationPreferencesRequest_;
	    }
	
	    public final GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
	    {
	        return globalConversationPreferencesResponse_;
	    }
	
	    public final GroupConversationRename getGroupConversationRename()
	    {
	        return groupConversationRename_;
	    }
	
	    public final HangoutInviteFinishRequest getHangoutInviteFinishRequest()
	    {
	        return hangoutInviteFinishRequest_;
	    }
	
	    public final HangoutInviteFinishResponse getHangoutInviteFinishResponse()
	    {
	        return hangoutInviteFinishResponse_;
	    }
	
	    public final HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
	    {
	        return hangoutInviteKeepAliveRequest_;
	    }
	
	    public final HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
	    {
	        return hangoutInviteKeepAliveResponse_;
	    }
	
	    public final HangoutInviteReplyRequest getHangoutInviteReplyRequest()
	    {
	        return hangoutInviteReplyRequest_;
	    }
	
	    public final HangoutInviteReplyResponse getHangoutInviteReplyResponse()
	    {
	        return hangoutInviteReplyResponse_;
	    }
	
	    public final HangoutInviteRequest getHangoutInviteRequest()
	    {
	        return hangoutInviteRequest_;
	    }
	
	    public final HangoutInviteResponse getHangoutInviteResponse()
	    {
	        return hangoutInviteResponse_;
	    }
	
	    public final HangoutRingFinishRequest getHangoutRingFinishRequest()
	    {
	        return hangoutRingFinishRequest_;
	    }
	
	    public final HangoutRingFinishResponse getHangoutRingFinishResponse()
	    {
	        return hangoutRingFinishResponse_;
	    }
	
	    public final InvalidateLocalCache getInvalidateLocalCache()
	    {
	        return invalidateLocalCache_;
	    }
	
	    public final InviteRequest getInviteRequest()
	    {
	        return inviteRequest_;
	    }
	
	    public final InviteResponse getInviteResponse()
	    {
	        return inviteResponse_;
	    }
	
	    public final LeaveConversationRequest getLeaveConversationRequest()
	    {
	        return leaveConversationRequest_;
	    }
	
	    public final LeaveConversationResponse getLeaveConversationResponse()
	    {
	        return leaveConversationResponse_;
	    }
	
	    public final MembershipChange getMembershipChange()
	    {
	        return membershipChange_;
	    }
	
	    public final Migration getMigration()
	    {
	        return migration_;
	    }
	
	    public final PingRequest getPingRequest()
	    {
	        return pingRequest_;
	    }
	
	    public final PingResponse getPingResponse()
	    {
	        return pingResponse_;
	    }
	
	    public final Presence getPresence()
	    {
	        return presence_;
	    }
	
	    public final PresenceRequest getPresenceRequest()
	    {
	        return presenceRequest_;
	    }
	
	    public final PresenceResponse getPresenceResponse()
	    {
	        return presenceResponse_;
	    }
	
	    public final Receipt getReceipt()
	    {
	        return receipt_;
	    }
	
	    public final ReceiptRequest getReceiptRequest()
	    {
	        return receiptRequest_;
	    }
	
	    public final ReceiptResponse getReceiptResponse()
	    {
	        return receiptResponse_;
	    }
	
	    public final ReplyToInviteRequest getReplyToInviteRequest()
	    {
	        return replyToInviteRequest_;
	    }
	
	    public final ReplyToInviteResponse getReplyToInviteResponse()
	    {
	        return replyToInviteResponse_;
	    }
	
	    public final String getRequestClientId()
	    {
	        Object obj = requestClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(2, getRequestClientIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(3, chatMessage_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeMessageSize(4, presenceRequest_);
	            if((0x80 & bitField0_) == 128)
	                k += CodedOutputStream.computeMessageSize(5, typingRequest_);
	            if((0x400 & bitField0_) == 1024)
	                k += CodedOutputStream.computeMessageSize(6, receipt_);
	            if((0x2000 & bitField0_) == 8192)
	                k += CodedOutputStream.computeMessageSize(7, membershipChange_);
	            if((0x4000 & bitField0_) == 16384)
	                k += CodedOutputStream.computeMessageSize(8, conversationRequest_);
	            if((0x8000 & bitField0_) == 32768)
	                k += CodedOutputStream.computeMessageSize(9, conversationResponse_);
	            if((0x10000 & bitField0_) == 0x10000)
	                k += CodedOutputStream.computeMessageSize(10, eventStreamRequest_);
	            if((0x20000 & bitField0_) == 0x20000)
	                k += CodedOutputStream.computeMessageSize(11, eventSteamResponse_);
	            if((0x40000 & bitField0_) == 0x40000)
	                k += CodedOutputStream.computeMessageSize(12, deviceRegistrationRequest_);
	            if((0x80000 & bitField0_) == 0x80000)
	                k += CodedOutputStream.computeMessageSize(13, deviceRegistrationResponse_);
	            if((0x100000 & bitField0_) == 0x100000)
	                k += CodedOutputStream.computeMessageSize(14, pingRequest_);
	            if((0x200000 & bitField0_) == 0x200000)
	                k += CodedOutputStream.computeMessageSize(15, pingResponse_);
	            if((0x400000 & bitField0_) == 0x400000)
	                k += CodedOutputStream.computeMessageSize(16, conversationListRequest_);
	            if((0x800000 & bitField0_) == 0x800000)
	                k += CodedOutputStream.computeMessageSize(17, conversationListResponse_);
	            if((0x1000000 & bitField0_) == 0x1000000)
	                k += CodedOutputStream.computeMessageSize(18, userCreationRequest_);
	            if((0x2000000 & bitField0_) == 0x2000000)
	                k += CodedOutputStream.computeMessageSize(19, userCreationResponse_);
	            if((0x4000000 & bitField0_) == 0x4000000)
	                k += CodedOutputStream.computeMessageSize(20, error_);
	            if((0x8000000 & bitField0_) == 0x8000000)
	                k += CodedOutputStream.computeMessageSize(21, inviteRequest_);
	            if((0x10000000 & bitField0_) == 0x10000000)
	                k += CodedOutputStream.computeMessageSize(22, leaveConversationRequest_);
	            if((0x20000000 & bitField0_) == 0x20000000)
	                k += CodedOutputStream.computeMessageSize(23, leaveConversationResponse_);
	            if((1 & bitField1_) == 1)
	                k += CodedOutputStream.computeMessageSize(24, groupConversationRename_);
	            if((0x10 & bitField1_) == 16)
	                k += CodedOutputStream.computeMessageSize(25, migration_);
	            if((0x20 & bitField1_) == 32)
	                k += CodedOutputStream.computeMessageSize(26, conversationPreferenceRequest_);
	            if((0x40 & bitField1_) == 64)
	                k += CodedOutputStream.computeMessageSize(27, conversationPreferenceResponse_);
	            if((0x80 & bitField1_) == 128)
	                k += CodedOutputStream.computeMessageSize(28, replyToInviteRequest_);
	            if((0x100 & bitField1_) == 256)
	                k += CodedOutputStream.computeMessageSize(29, setAclsRequest_);
	            if((0x200 & bitField1_) == 512)
	                k += CodedOutputStream.computeMessageSize(30, invalidateLocalCache_);
	            if((0x400 & bitField1_) == 1024)
	                k += CodedOutputStream.computeMessageSize(31, inviteResponse_);
	            if((0x800 & bitField1_) == 2048)
	                k += CodedOutputStream.computeMessageSize(33, replyToInviteResponse_);
	            if((0x1000 & bitField1_) == 4096)
	                k += CodedOutputStream.computeMessageSize(34, setAclsResponse_);
	            if((0x2000 & bitField1_) == 8192)
	                k += CodedOutputStream.computeMessageSize(35, userInfoRequest_);
	            if((0x4000 & bitField1_) == 16384)
	                k += CodedOutputStream.computeMessageSize(36, userInfoResponse_);
	            if((0x8000 & bitField1_) == 32768)
	                k += CodedOutputStream.computeMessageSize(37, conversationSearchRequest_);
	            if((0x10000 & bitField1_) == 0x10000)
	                k += CodedOutputStream.computeMessageSize(38, conversationSearchResponse_);
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeMessageSize(39, presenceResponse_);
	            if((0x40 & bitField0_) == 64)
	                k += CodedOutputStream.computeMessageSize(40, presence_);
	            if((0x100 & bitField0_) == 256)
	                k += CodedOutputStream.computeMessageSize(41, typingResponse_);
	            if((0x200 & bitField0_) == 512)
	                k += CodedOutputStream.computeMessageSize(42, typing_);
	            if((0x20000 & bitField1_) == 0x20000)
	                k += CodedOutputStream.computeMessageSize(43, eventSearchRequest_);
	            if((0x40000 & bitField1_) == 0x40000)
	                k += CodedOutputStream.computeMessageSize(44, eventSearchResponse_);
	            if((0x40000000 & bitField0_) == 0x40000000)
	                k += CodedOutputStream.computeMessageSize(45, conversationRenameRequest_);
	            if((0x80000000 & bitField0_) == 0x80000000)
	                k += CodedOutputStream.computeMessageSize(46, conversationRenameResponse_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(47, chatMessageRequest_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(48, chatMessageResponse_);
	            if((0x800 & bitField0_) == 2048)
	                k += CodedOutputStream.computeMessageSize(49, receiptRequest_);
	            if((0x1000 & bitField0_) == 4096)
	                k += CodedOutputStream.computeMessageSize(50, receiptResponse_);
	            if((0x80000 & bitField1_) == 0x80000)
	                k += CodedOutputStream.computeMessageSize(51, suggestionsRequest_);
	            if((0x100000 & bitField1_) == 0x100000)
	                k += CodedOutputStream.computeMessageSize(52, suggestionsResponse_);
	            if((2 & bitField1_) == 2)
	                k += CodedOutputStream.computeMessageSize(53, tileEventRequest_);
	            if((4 & bitField1_) == 4)
	                k += CodedOutputStream.computeMessageSize(54, tileEventResponse_);
	            if((8 & bitField1_) == 8)
	                k += CodedOutputStream.computeMessageSize(55, tileEvent_);
	            if((0x200000 & bitField1_) == 0x200000)
	                k += CodedOutputStream.computeMessageSize(56, globalConversationPreferencesRequest_);
	            if((0x400000 & bitField1_) == 0x400000)
	                k += CodedOutputStream.computeMessageSize(57, globalConversationPreferencesResponse_);
	            if((0x800000 & bitField1_) == 0x800000)
	                k += CodedOutputStream.computeMessageSize(58, conversationJoinRequest_);
	            if((0x1000000 & bitField1_) == 0x1000000)
	                k += CodedOutputStream.computeMessageSize(59, conversationJoinResponse_);
	            if((0x2000000 & bitField1_) == 0x2000000)
	                k += CodedOutputStream.computeMessageSize(60, hangoutInviteRequest_);
	            if((0x4000000 & bitField1_) == 0x4000000)
	                k += CodedOutputStream.computeMessageSize(61, hangoutInviteResponse_);
	            if((0x8000000 & bitField1_) == 0x8000000)
	                k += CodedOutputStream.computeMessageSize(62, hangoutInviteKeepAliveRequest_);
	            if((0x10000000 & bitField1_) == 0x10000000)
	                k += CodedOutputStream.computeMessageSize(63, hangoutInviteKeepAliveResponse_);
	            if((0x20000000 & bitField1_) == 0x20000000)
	                k += CodedOutputStream.computeMessageSize(64, hangoutInviteReplyRequest_);
	            if((0x40000000 & bitField1_) == 0x40000000)
	                k += CodedOutputStream.computeMessageSize(65, hangoutInviteReplyResponse_);
	            if((0x80000000 & bitField1_) == 0x80000000)
	                k += CodedOutputStream.computeMessageSize(66, hangoutInviteFinishRequest_);
	            if((1 & bitField2_) == 1)
	                k += CodedOutputStream.computeMessageSize(67, hangoutInviteFinishResponse_);
	            if((2 & bitField2_) == 2)
	                k += CodedOutputStream.computeMessageSize(68, hangoutRingFinishRequest_);
	            if((4 & bitField2_) == 4)
	                k += CodedOutputStream.computeMessageSize(69, hangoutRingFinishResponse_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final SetAclsRequest getSetAclsRequest()
	    {
	        return setAclsRequest_;
	    }
	
	    public final SetAclsResponse getSetAclsResponse()
	    {
	        return setAclsResponse_;
	    }
	
	    public final SuggestionsRequest getSuggestionsRequest()
	    {
	        return suggestionsRequest_;
	    }
	
	    public final SuggestionsResponse getSuggestionsResponse()
	    {
	        return suggestionsResponse_;
	    }
	
	    public final TileEvent getTileEvent()
	    {
	        return tileEvent_;
	    }
	
	    public final TileEventRequest getTileEventRequest()
	    {
	        return tileEventRequest_;
	    }
	
	    public final TileEventResponse getTileEventResponse()
	    {
	        return tileEventResponse_;
	    }
	
	    public final Typing getTyping()
	    {
	        return typing_;
	    }
	
	    public final TypingRequest getTypingRequest()
	    {
	        return typingRequest_;
	    }
	
	    public final TypingResponse getTypingResponse()
	    {
	        return typingResponse_;
	    }
	
	    public final UserCreationRequest getUserCreationRequest()
	    {
	        return userCreationRequest_;
	    }
	
	    public final UserCreationResponse getUserCreationResponse()
	    {
	        return userCreationResponse_;
	    }
	
	    public final UserInfoRequest getUserInfoRequest()
	    {
	        return userInfoRequest_;
	    }
	
	    public final UserInfoResponse getUserInfoResponse()
	    {
	        return userInfoResponse_;
	    }
	
	    public final boolean hasChatMessage()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasChatMessageRequest()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasChatMessageResponse()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationJoinRequest()
	    {
	        boolean flag;
	        if((0x800000 & bitField1_) == 0x800000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationJoinResponse()
	    {
	        boolean flag;
	        if((0x1000000 & bitField1_) == 0x1000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationListRequest()
	    {
	        boolean flag;
	        if((0x400000 & bitField0_) == 0x400000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationListResponse()
	    {
	        boolean flag;
	        if((0x800000 & bitField0_) == 0x800000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationPreferenceRequest()
	    {
	        boolean flag;
	        if((0x20 & bitField1_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationPreferenceResponse()
	    {
	        boolean flag;
	        if((0x40 & bitField1_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationRenameRequest()
	    {
	        boolean flag;
	        if((0x40000000 & bitField0_) == 0x40000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationRenameResponse()
	    {
	        boolean flag;
	        if((0x80000000 & bitField0_) == 0x80000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationRequest()
	    {
	        boolean flag;
	        if((0x4000 & bitField0_) == 16384)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationResponse()
	    {
	        boolean flag;
	        if((0x8000 & bitField0_) == 32768)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationSearchRequest()
	    {
	        boolean flag;
	        if((0x8000 & bitField1_) == 32768)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationSearchResponse()
	    {
	        boolean flag;
	        if((0x10000 & bitField1_) == 0x10000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasDeviceRegistrationRequest()
	    {
	        boolean flag;
	        if((0x40000 & bitField0_) == 0x40000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasDeviceRegistrationResponse()
	    {
	        boolean flag;
	        if((0x80000 & bitField0_) == 0x80000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasError()
	    {
	        boolean flag;
	        if((0x4000000 & bitField0_) == 0x4000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventSearchRequest()
	    {
	        boolean flag;
	        if((0x20000 & bitField1_) == 0x20000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventSearchResponse()
	    {
	        boolean flag;
	        if((0x40000 & bitField1_) == 0x40000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventSteamResponse()
	    {
	        boolean flag;
	        if((0x20000 & bitField0_) == 0x20000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventStreamRequest()
	    {
	        boolean flag;
	        if((0x10000 & bitField0_) == 0x10000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasGlobalConversationPreferencesRequest()
	    {
	        boolean flag;
	        if((0x200000 & bitField1_) == 0x200000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasGlobalConversationPreferencesResponse()
	    {
	        boolean flag;
	        if((0x400000 & bitField1_) == 0x400000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasGroupConversationRename()
	    {
	        boolean flag = true;
	        if((1 & bitField1_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteFinishRequest()
	    {
	        boolean flag;
	        if((0x80000000 & bitField1_) == 0x80000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteFinishResponse()
	    {
	        boolean flag = true;
	        if((1 & bitField2_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteKeepAliveRequest()
	    {
	        boolean flag;
	        if((0x8000000 & bitField1_) == 0x8000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteKeepAliveResponse()
	    {
	        boolean flag;
	        if((0x10000000 & bitField1_) == 0x10000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteReplyRequest()
	    {
	        boolean flag;
	        if((0x20000000 & bitField1_) == 0x20000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteReplyResponse()
	    {
	        boolean flag;
	        if((0x40000000 & bitField1_) == 0x40000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteRequest()
	    {
	        boolean flag;
	        if((0x2000000 & bitField1_) == 0x2000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteResponse()
	    {
	        boolean flag;
	        if((0x4000000 & bitField1_) == 0x4000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutRingFinishRequest()
	    {
	        boolean flag;
	        if((2 & bitField2_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutRingFinishResponse()
	    {
	        boolean flag;
	        if((4 & bitField2_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInvalidateLocalCache()
	    {
	        boolean flag;
	        if((0x200 & bitField1_) == 512)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviteRequest()
	    {
	        boolean flag;
	        if((0x8000000 & bitField0_) == 0x8000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviteResponse()
	    {
	        boolean flag;
	        if((0x400 & bitField1_) == 1024)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLeaveConversationRequest()
	    {
	        boolean flag;
	        if((0x10000000 & bitField0_) == 0x10000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLeaveConversationResponse()
	    {
	        boolean flag;
	        if((0x20000000 & bitField0_) == 0x20000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMembershipChange()
	    {
	        boolean flag;
	        if((0x2000 & bitField0_) == 8192)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasMigration()
	    {
	        boolean flag;
	        if((0x10 & bitField1_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPingRequest()
	    {
	        boolean flag;
	        if((0x100000 & bitField0_) == 0x100000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPingResponse()
	    {
	        boolean flag;
	        if((0x200000 & bitField0_) == 0x200000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPresence()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPresenceRequest()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPresenceResponse()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReceipt()
	    {
	        boolean flag;
	        if((0x400 & bitField0_) == 1024)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReceiptRequest()
	    {
	        boolean flag;
	        if((0x800 & bitField0_) == 2048)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReceiptResponse()
	    {
	        boolean flag;
	        if((0x1000 & bitField0_) == 4096)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReplyToInviteRequest()
	    {
	        boolean flag;
	        if((0x80 & bitField1_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReplyToInviteResponse()
	    {
	        boolean flag;
	        if((0x800 & bitField1_) == 2048)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRequestClientId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSetAclsRequest()
	    {
	        boolean flag;
	        if((0x100 & bitField1_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSetAclsResponse()
	    {
	        boolean flag;
	        if((0x1000 & bitField1_) == 4096)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSuggestionsRequest()
	    {
	        boolean flag;
	        if((0x80000 & bitField1_) == 0x80000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSuggestionsResponse()
	    {
	        boolean flag;
	        if((0x100000 & bitField1_) == 0x100000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileEvent()
	    {
	        boolean flag;
	        if((8 & bitField1_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileEventRequest()
	    {
	        boolean flag;
	        if((2 & bitField1_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileEventResponse()
	    {
	        boolean flag;
	        if((4 & bitField1_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTyping()
	    {
	        boolean flag;
	        if((0x200 & bitField0_) == 512)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTypingRequest()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTypingResponse()
	    {
	        boolean flag;
	        if((0x100 & bitField0_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUserCreationRequest()
	    {
	        boolean flag;
	        if((0x1000000 & bitField0_) == 0x1000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUserCreationResponse()
	    {
	        boolean flag;
	        if((0x2000000 & bitField0_) == 0x2000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUserInfoRequest()
	    {
	        boolean flag;
	        if((0x2000 & bitField1_) == 8192)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUserInfoResponse()
	    {
	        boolean flag;
	        if((0x4000 & bitField1_) == 16384)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(2, getRequestClientIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(3, chatMessage_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(4, presenceRequest_);
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeMessage(5, typingRequest_);
	        if((0x400 & bitField0_) == 1024)
	            codedoutputstream.writeMessage(6, receipt_);
	        if((0x2000 & bitField0_) == 8192)
	            codedoutputstream.writeMessage(7, membershipChange_);
	        if((0x4000 & bitField0_) == 16384)
	            codedoutputstream.writeMessage(8, conversationRequest_);
	        if((0x8000 & bitField0_) == 32768)
	            codedoutputstream.writeMessage(9, conversationResponse_);
	        if((0x10000 & bitField0_) == 0x10000)
	            codedoutputstream.writeMessage(10, eventStreamRequest_);
	        if((0x20000 & bitField0_) == 0x20000)
	            codedoutputstream.writeMessage(11, eventSteamResponse_);
	        if((0x40000 & bitField0_) == 0x40000)
	            codedoutputstream.writeMessage(12, deviceRegistrationRequest_);
	        if((0x80000 & bitField0_) == 0x80000)
	            codedoutputstream.writeMessage(13, deviceRegistrationResponse_);
	        if((0x100000 & bitField0_) == 0x100000)
	            codedoutputstream.writeMessage(14, pingRequest_);
	        if((0x200000 & bitField0_) == 0x200000)
	            codedoutputstream.writeMessage(15, pingResponse_);
	        if((0x400000 & bitField0_) == 0x400000)
	            codedoutputstream.writeMessage(16, conversationListRequest_);
	        if((0x800000 & bitField0_) == 0x800000)
	            codedoutputstream.writeMessage(17, conversationListResponse_);
	        if((0x1000000 & bitField0_) == 0x1000000)
	            codedoutputstream.writeMessage(18, userCreationRequest_);
	        if((0x2000000 & bitField0_) == 0x2000000)
	            codedoutputstream.writeMessage(19, userCreationResponse_);
	        if((0x4000000 & bitField0_) == 0x4000000)
	            codedoutputstream.writeMessage(20, error_);
	        if((0x8000000 & bitField0_) == 0x8000000)
	            codedoutputstream.writeMessage(21, inviteRequest_);
	        if((0x10000000 & bitField0_) == 0x10000000)
	            codedoutputstream.writeMessage(22, leaveConversationRequest_);
	        if((0x20000000 & bitField0_) == 0x20000000)
	            codedoutputstream.writeMessage(23, leaveConversationResponse_);
	        if((1 & bitField1_) == 1)
	            codedoutputstream.writeMessage(24, groupConversationRename_);
	        if((0x10 & bitField1_) == 16)
	            codedoutputstream.writeMessage(25, migration_);
	        if((0x20 & bitField1_) == 32)
	            codedoutputstream.writeMessage(26, conversationPreferenceRequest_);
	        if((0x40 & bitField1_) == 64)
	            codedoutputstream.writeMessage(27, conversationPreferenceResponse_);
	        if((0x80 & bitField1_) == 128)
	            codedoutputstream.writeMessage(28, replyToInviteRequest_);
	        if((0x100 & bitField1_) == 256)
	            codedoutputstream.writeMessage(29, setAclsRequest_);
	        if((0x200 & bitField1_) == 512)
	            codedoutputstream.writeMessage(30, invalidateLocalCache_);
	        if((0x400 & bitField1_) == 1024)
	            codedoutputstream.writeMessage(31, inviteResponse_);
	        if((0x800 & bitField1_) == 2048)
	            codedoutputstream.writeMessage(33, replyToInviteResponse_);
	        if((0x1000 & bitField1_) == 4096)
	            codedoutputstream.writeMessage(34, setAclsResponse_);
	        if((0x2000 & bitField1_) == 8192)
	            codedoutputstream.writeMessage(35, userInfoRequest_);
	        if((0x4000 & bitField1_) == 16384)
	            codedoutputstream.writeMessage(36, userInfoResponse_);
	        if((0x8000 & bitField1_) == 32768)
	            codedoutputstream.writeMessage(37, conversationSearchRequest_);
	        if((0x10000 & bitField1_) == 0x10000)
	            codedoutputstream.writeMessage(38, conversationSearchResponse_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeMessage(39, presenceResponse_);
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeMessage(40, presence_);
	        if((0x100 & bitField0_) == 256)
	            codedoutputstream.writeMessage(41, typingResponse_);
	        if((0x200 & bitField0_) == 512)
	            codedoutputstream.writeMessage(42, typing_);
	        if((0x20000 & bitField1_) == 0x20000)
	            codedoutputstream.writeMessage(43, eventSearchRequest_);
	        if((0x40000 & bitField1_) == 0x40000)
	            codedoutputstream.writeMessage(44, eventSearchResponse_);
	        if((0x40000000 & bitField0_) == 0x40000000)
	            codedoutputstream.writeMessage(45, conversationRenameRequest_);
	        if((0x80000000 & bitField0_) == 0x80000000)
	            codedoutputstream.writeMessage(46, conversationRenameResponse_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(47, chatMessageRequest_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(48, chatMessageResponse_);
	        if((0x800 & bitField0_) == 2048)
	            codedoutputstream.writeMessage(49, receiptRequest_);
	        if((0x1000 & bitField0_) == 4096)
	            codedoutputstream.writeMessage(50, receiptResponse_);
	        if((0x80000 & bitField1_) == 0x80000)
	            codedoutputstream.writeMessage(51, suggestionsRequest_);
	        if((0x100000 & bitField1_) == 0x100000)
	            codedoutputstream.writeMessage(52, suggestionsResponse_);
	        if((2 & bitField1_) == 2)
	            codedoutputstream.writeMessage(53, tileEventRequest_);
	        if((4 & bitField1_) == 4)
	            codedoutputstream.writeMessage(54, tileEventResponse_);
	        if((8 & bitField1_) == 8)
	            codedoutputstream.writeMessage(55, tileEvent_);
	        if((0x200000 & bitField1_) == 0x200000)
	            codedoutputstream.writeMessage(56, globalConversationPreferencesRequest_);
	        if((0x400000 & bitField1_) == 0x400000)
	            codedoutputstream.writeMessage(57, globalConversationPreferencesResponse_);
	        if((0x800000 & bitField1_) == 0x800000)
	            codedoutputstream.writeMessage(58, conversationJoinRequest_);
	        if((0x1000000 & bitField1_) == 0x1000000)
	            codedoutputstream.writeMessage(59, conversationJoinResponse_);
	        if((0x2000000 & bitField1_) == 0x2000000)
	            codedoutputstream.writeMessage(60, hangoutInviteRequest_);
	        if((0x4000000 & bitField1_) == 0x4000000)
	            codedoutputstream.writeMessage(61, hangoutInviteResponse_);
	        if((0x8000000 & bitField1_) == 0x8000000)
	            codedoutputstream.writeMessage(62, hangoutInviteKeepAliveRequest_);
	        if((0x10000000 & bitField1_) == 0x10000000)
	            codedoutputstream.writeMessage(63, hangoutInviteKeepAliveResponse_);
	        if((0x20000000 & bitField1_) == 0x20000000)
	            codedoutputstream.writeMessage(64, hangoutInviteReplyRequest_);
	        if((0x40000000 & bitField1_) == 0x40000000)
	            codedoutputstream.writeMessage(65, hangoutInviteReplyResponse_);
	        if((0x80000000 & bitField1_) == 0x80000000)
	            codedoutputstream.writeMessage(66, hangoutInviteFinishRequest_);
	        if((1 & bitField2_) == 1)
	            codedoutputstream.writeMessage(67, hangoutInviteFinishResponse_);
	        if((2 & bitField2_) == 2)
	            codedoutputstream.writeMessage(68, hangoutRingFinishRequest_);
	        if((4 & bitField2_) == 4)
	            codedoutputstream.writeMessage(69, hangoutRingFinishResponse_);
	    }
	    
	    
	    //==============================================================
	    //						Builder
	    //==============================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements BunchCommandOrBuilder {
	
	    	private int bitField0_;
	        private int bitField1_;
	        private int bitField2_;
	        private ChatMessageRequest chatMessageRequest_;
	        private ChatMessageResponse chatMessageResponse_;
	        private ChatMessage chatMessage_;
	        private ConversationJoinRequest conversationJoinRequest_;
	        private ConversationJoinResponse conversationJoinResponse_;
	        private ConversationListRequest conversationListRequest_;
	        private ConversationListResponse conversationListResponse_;
	        private ConversationPreferenceRequest conversationPreferenceRequest_;
	        private ConversationPreferenceResponse conversationPreferenceResponse_;
	        private ConversationRenameRequest conversationRenameRequest_;
	        private ConversationRenameResponse conversationRenameResponse_;
	        private NewConversationRequest conversationRequest_;
	        private NewConversationResponse conversationResponse_;
	        private ConversationSearchRequest conversationSearchRequest_;
	        private ConversationSearchResponse conversationSearchResponse_;
	        private DeviceRegistrationRequest deviceRegistrationRequest_;
	        private DeviceRegistrationResponse deviceRegistrationResponse_;
	        private Error error_;
	        private EventSearchRequest eventSearchRequest_;
	        private EventSearchResponse eventSearchResponse_;
	        private EventStreamResponse eventSteamResponse_;
	        private EventStreamRequest eventStreamRequest_;
	        private GlobalConversationPreferencesRequest globalConversationPreferencesRequest_;
	        private GlobalConversationPreferencesResponse globalConversationPreferencesResponse_;
	        private GroupConversationRename groupConversationRename_;
	        private HangoutInviteFinishRequest hangoutInviteFinishRequest_;
	        private HangoutInviteFinishResponse hangoutInviteFinishResponse_;
	        private HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_;
	        private HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_;
	        private HangoutInviteReplyRequest hangoutInviteReplyRequest_;
	        private HangoutInviteReplyResponse hangoutInviteReplyResponse_;
	        private HangoutInviteRequest hangoutInviteRequest_;
	        private HangoutInviteResponse hangoutInviteResponse_;
	        private HangoutRingFinishRequest hangoutRingFinishRequest_;
	        private HangoutRingFinishResponse hangoutRingFinishResponse_;
	        private InvalidateLocalCache invalidateLocalCache_;
	        private InviteRequest inviteRequest_;
	        private InviteResponse inviteResponse_;
	        private LeaveConversationRequest leaveConversationRequest_;
	        private LeaveConversationResponse leaveConversationResponse_;
	        private MembershipChange membershipChange_;
	        private Migration migration_;
	        private PingRequest pingRequest_;
	        private PingResponse pingResponse_;
	        private PresenceRequest presenceRequest_;
	        private PresenceResponse presenceResponse_;
	        private Presence presence_;
	        private ReceiptRequest receiptRequest_;
	        private ReceiptResponse receiptResponse_;
	        private Receipt receipt_;
	        private ReplyToInviteRequest replyToInviteRequest_;
	        private ReplyToInviteResponse replyToInviteResponse_;
	        private Object requestClientId_;
	        private SetAclsRequest setAclsRequest_;
	        private SetAclsResponse setAclsResponse_;
	        private SuggestionsRequest suggestionsRequest_;
	        private SuggestionsResponse suggestionsResponse_;
	        private TileEventRequest tileEventRequest_;
	        private TileEventResponse tileEventResponse_;
	        private TileEvent tileEvent_;
	        private TypingRequest typingRequest_;
	        private TypingResponse typingResponse_;
	        private Typing typing_;
	        private UserCreationRequest userCreationRequest_;
	        private UserCreationResponse userCreationResponse_;
	        private UserInfoRequest userInfoRequest_;
	        private UserInfoResponse userInfoResponse_;

	        private Builder()
	        {
	            requestClientId_ = "";
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
	            chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	            presenceRequest_ = PresenceRequest.getDefaultInstance();
	            presenceResponse_ = PresenceResponse.getDefaultInstance();
	            presence_ = Presence.getDefaultInstance();
	            typingRequest_ = TypingRequest.getDefaultInstance();
	            typingResponse_ = TypingResponse.getDefaultInstance();
	            typing_ = Typing.getDefaultInstance();
	            receipt_ = Receipt.getDefaultInstance();
	            receiptRequest_ = ReceiptRequest.getDefaultInstance();
	            receiptResponse_ = ReceiptResponse.getDefaultInstance();
	            membershipChange_ = MembershipChange.getDefaultInstance();
	            conversationRequest_ = NewConversationRequest.getDefaultInstance();
	            conversationResponse_ = NewConversationResponse.getDefaultInstance();
	            eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
	            eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	            deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
	            deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	            pingRequest_ = PingRequest.getDefaultInstance();
	            pingResponse_ = PingResponse.getDefaultInstance();
	            conversationListRequest_ = ConversationListRequest.getDefaultInstance();
	            conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	            userCreationRequest_ = UserCreationRequest.getDefaultInstance();
	            userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	            error_ = Error.getDefaultInstance();
	            inviteRequest_ = InviteRequest.getDefaultInstance();
	            leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
	            leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	            conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
	            conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	            tileEventRequest_ = TileEventRequest.getDefaultInstance();
	            tileEventResponse_ = TileEventResponse.getDefaultInstance();
	            tileEvent_ = TileEvent.getDefaultInstance();
	            migration_ = Migration.getDefaultInstance();
	            conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
	            conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	            replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
	            setAclsRequest_ = SetAclsRequest.getDefaultInstance();
	            invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	            inviteResponse_ = InviteResponse.getDefaultInstance();
	            replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	            setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	            userInfoRequest_ = UserInfoRequest.getDefaultInstance();
	            userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	            conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
	            conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	            eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
	            eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	            suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
	            suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	            globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
	            globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	            conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
	            conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	            hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
	            hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	            hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
	            hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	            hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
	            hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	            hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
	            hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	            hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
	            hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	        }
	        
	        public BunchCommand.Builder clone()
	        {
	            return (new BunchCommand.Builder()).mergeFrom(buildPartial());
	        }
	
	        public BunchCommand.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite)
	            throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 18: // '\022'
	                    bitField0_ = 1 | bitField0_;
	                    requestClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 26: // '\032'
	                    ChatMessage.Builder builder65 = ChatMessage.newBuilder();
	                    if(hasChatMessage())
	                        builder65.mergeFrom(getChatMessage());
	                    codedinputstream.readMessage(builder65, extensionregistrylite);
	                    setChatMessage(builder65.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    PresenceRequest.Builder builder64 = PresenceRequest.newBuilder();
	                    if(hasPresenceRequest())
	                        builder64.mergeFrom(getPresenceRequest());
	                    codedinputstream.readMessage(builder64, extensionregistrylite);
	                    setPresenceRequest(builder64.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    TypingRequest.Builder builder63 = TypingRequest.newBuilder();
	                    if(hasTypingRequest())
	                        builder63.mergeFrom(getTypingRequest());
	                    codedinputstream.readMessage(builder63, extensionregistrylite);
	                    setTypingRequest(builder63.buildPartial());
	                    break;
	
	                case 50: // '2'
	                    Receipt.Builder builder62 = Receipt.newBuilder();
	                    if(hasReceipt())
	                        builder62.mergeFrom(getReceipt());
	                    codedinputstream.readMessage(builder62, extensionregistrylite);
	                    setReceipt(builder62.buildPartial());
	                    break;
	
	                case 58: // ':'
	                    MembershipChange.Builder builder61 = MembershipChange.newBuilder();
	                    if(hasMembershipChange())
	                        builder61.mergeFrom(getMembershipChange());
	                    codedinputstream.readMessage(builder61, extensionregistrylite);
	                    setMembershipChange(builder61.buildPartial());
	                    break;
	
	                case 66: // 'B'
	                    NewConversationRequest.Builder builder60 = NewConversationRequest.newBuilder();
	                    if(hasConversationRequest())
	                        builder60.mergeFrom(getConversationRequest());
	                    codedinputstream.readMessage(builder60, extensionregistrylite);
	                    setConversationRequest(builder60.buildPartial());
	                    break;
	
	                case 74: // 'J'
	                    NewConversationResponse.Builder builder59 = NewConversationResponse.newBuilder();
	                    if(hasConversationResponse())
	                        builder59.mergeFrom(getConversationResponse());
	                    codedinputstream.readMessage(builder59, extensionregistrylite);
	                    setConversationResponse(builder59.buildPartial());
	                    break;
	
	                case 82: // 'R'
	                    EventStreamRequest.Builder builder58 = EventStreamRequest.newBuilder();
	                    if(hasEventStreamRequest())
	                        builder58.mergeFrom(getEventStreamRequest());
	                    codedinputstream.readMessage(builder58, extensionregistrylite);
	                    setEventStreamRequest(builder58.buildPartial());
	                    break;
	
	                case 90: // 'Z'
	                    EventStreamResponse.Builder builder57 = EventStreamResponse.newBuilder();
	                    if(hasEventSteamResponse())
	                        builder57.mergeFrom(getEventSteamResponse());
	                    codedinputstream.readMessage(builder57, extensionregistrylite);
	                    setEventSteamResponse(builder57.buildPartial());
	                    break;
	
	                case 98: // 'b'
	                    DeviceRegistrationRequest.Builder builder56 = DeviceRegistrationRequest.newBuilder();
	                    if(hasDeviceRegistrationRequest())
	                        builder56.mergeFrom(getDeviceRegistrationRequest());
	                    codedinputstream.readMessage(builder56, extensionregistrylite);
	                    setDeviceRegistrationRequest(builder56.buildPartial());
	                    break;
	
	                case 106: // 'j'
	                    DeviceRegistrationResponse.Builder builder55 = DeviceRegistrationResponse.newBuilder();
	                    if(hasDeviceRegistrationResponse())
	                        builder55.mergeFrom(getDeviceRegistrationResponse());
	                    codedinputstream.readMessage(builder55, extensionregistrylite);
	                    setDeviceRegistrationResponse(builder55.buildPartial());
	                    break;
	
	                case 114: // 'r'
	                    PingRequest.Builder builder54 = PingRequest.newBuilder();
	                    if(hasPingRequest())
	                        builder54.mergeFrom(getPingRequest());
	                    codedinputstream.readMessage(builder54, extensionregistrylite);
	                    setPingRequest(builder54.buildPartial());
	                    break;
	
	                case 122: // 'z'
	                    PingResponse.Builder builder53 = PingResponse.newBuilder();
	                    if(hasPingResponse())
	                        builder53.mergeFrom(getPingResponse());
	                    codedinputstream.readMessage(builder53, extensionregistrylite);
	                    setPingResponse(builder53.buildPartial());
	                    break;
	
	                case 130: 
	                    ConversationListRequest.Builder builder52 = ConversationListRequest.newBuilder();
	                    if(hasConversationListRequest())
	                        builder52.mergeFrom(getConversationListRequest());
	                    codedinputstream.readMessage(builder52, extensionregistrylite);
	                    setConversationListRequest(builder52.buildPartial());
	                    break;
	
	                case 138: 
	                    ConversationListResponse.Builder builder51 = ConversationListResponse.newBuilder();
	                    if(hasConversationListResponse())
	                        builder51.mergeFrom(getConversationListResponse());
	                    codedinputstream.readMessage(builder51, extensionregistrylite);
	                    setConversationListResponse(builder51.buildPartial());
	                    break;
	
	                case 146: 
	                    UserCreationRequest.Builder builder50 = UserCreationRequest.newBuilder();
	                    if(hasUserCreationRequest())
	                        builder50.mergeFrom(getUserCreationRequest());
	                    codedinputstream.readMessage(builder50, extensionregistrylite);
	                    setUserCreationRequest(builder50.buildPartial());
	                    break;
	
	                case 154: 
	                    UserCreationResponse.Builder builder49 = UserCreationResponse.newBuilder();
	                    if(hasUserCreationResponse())
	                        builder49.mergeFrom(getUserCreationResponse());
	                    codedinputstream.readMessage(builder49, extensionregistrylite);
	                    setUserCreationResponse(builder49.buildPartial());
	                    break;
	
	                case 162: 
	                    Error.Builder builder48 = Error.newBuilder();
	                    if(hasError())
	                        builder48.mergeFrom(getError());
	                    codedinputstream.readMessage(builder48, extensionregistrylite);
	                    setError(builder48.buildPartial());
	                    break;
	
	                case 170: 
	                    InviteRequest.Builder builder47 = InviteRequest.newBuilder();
	                    if(hasInviteRequest())
	                        builder47.mergeFrom(getInviteRequest());
	                    codedinputstream.readMessage(builder47, extensionregistrylite);
	                    setInviteRequest(builder47.buildPartial());
	                    break;
	
	                case 178: 
	                    LeaveConversationRequest.Builder builder46 = LeaveConversationRequest.newBuilder();
	                    if(hasLeaveConversationRequest())
	                        builder46.mergeFrom(getLeaveConversationRequest());
	                    codedinputstream.readMessage(builder46, extensionregistrylite);
	                    setLeaveConversationRequest(builder46.buildPartial());
	                    break;
	
	                case 186: 
	                    LeaveConversationResponse.Builder builder45 = LeaveConversationResponse.newBuilder();
	                    if(hasLeaveConversationResponse())
	                        builder45.mergeFrom(getLeaveConversationResponse());
	                    codedinputstream.readMessage(builder45, extensionregistrylite);
	                    setLeaveConversationResponse(builder45.buildPartial());
	                    break;
	
	                case 194: 
	                    GroupConversationRename.Builder builder44 = GroupConversationRename.newBuilder();
	                    if(hasGroupConversationRename())
	                        builder44.mergeFrom(getGroupConversationRename());
	                    codedinputstream.readMessage(builder44, extensionregistrylite);
	                    setGroupConversationRename(builder44.buildPartial());
	                    break;
	
	                case 202: 
	                    Migration.Builder builder43 = Migration.newBuilder();
	                    if(hasMigration())
	                        builder43.mergeFrom(getMigration());
	                    codedinputstream.readMessage(builder43, extensionregistrylite);
	                    setMigration(builder43.buildPartial());
	                    break;
	
	                case 210: 
	                    ConversationPreferenceRequest.Builder builder42 = ConversationPreferenceRequest.newBuilder();
	                    if(hasConversationPreferenceRequest())
	                        builder42.mergeFrom(getConversationPreferenceRequest());
	                    codedinputstream.readMessage(builder42, extensionregistrylite);
	                    setConversationPreferenceRequest(builder42.buildPartial());
	                    break;
	
	                case 218: 
	                    ConversationPreferenceResponse.Builder builder41 = ConversationPreferenceResponse.newBuilder();
	                    if(hasConversationPreferenceResponse())
	                        builder41.mergeFrom(getConversationPreferenceResponse());
	                    codedinputstream.readMessage(builder41, extensionregistrylite);
	                    setConversationPreferenceResponse(builder41.buildPartial());
	                    break;
	
	                case 226: 
	                    ReplyToInviteRequest.Builder builder40 = ReplyToInviteRequest.newBuilder();
	                    if(hasReplyToInviteRequest())
	                        builder40.mergeFrom(getReplyToInviteRequest());
	                    codedinputstream.readMessage(builder40, extensionregistrylite);
	                    setReplyToInviteRequest(builder40.buildPartial());
	                    break;
	
	                case 234: 
	                    SetAclsRequest.Builder builder39 = SetAclsRequest.newBuilder();
	                    if(hasSetAclsRequest())
	                        builder39.mergeFrom(getSetAclsRequest());
	                    codedinputstream.readMessage(builder39, extensionregistrylite);
	                    setSetAclsRequest(builder39.buildPartial());
	                    break;
	
	                case 242: 
	                    InvalidateLocalCache.Builder builder38 = InvalidateLocalCache.newBuilder();
	                    if(hasInvalidateLocalCache())
	                        builder38.mergeFrom(getInvalidateLocalCache());
	                    codedinputstream.readMessage(builder38, extensionregistrylite);
	                    setInvalidateLocalCache(builder38.buildPartial());
	                    break;
	
	                case 250: 
	                    InviteResponse.Builder builder37 = InviteResponse.newBuilder();
	                    if(hasInviteResponse())
	                        builder37.mergeFrom(getInviteResponse());
	                    codedinputstream.readMessage(builder37, extensionregistrylite);
	                    setInviteResponse(builder37.buildPartial());
	                    break;
	
	                case 266: 
	                    ReplyToInviteResponse.Builder builder36 = ReplyToInviteResponse.newBuilder();
	                    if(hasReplyToInviteResponse())
	                        builder36.mergeFrom(getReplyToInviteResponse());
	                    codedinputstream.readMessage(builder36, extensionregistrylite);
	                    setReplyToInviteResponse(builder36.buildPartial());
	                    break;
	
	                case 274: 
	                    SetAclsResponse.Builder builder35 = SetAclsResponse.newBuilder();
	                    if(hasSetAclsResponse())
	                        builder35.mergeFrom(getSetAclsResponse());
	                    codedinputstream.readMessage(builder35, extensionregistrylite);
	                    setSetAclsResponse(builder35.buildPartial());
	                    break;
	
	                case 282: 
	                    UserInfoRequest.Builder builder34 = UserInfoRequest.newBuilder();
	                    if(hasUserInfoRequest())
	                        builder34.mergeFrom(getUserInfoRequest());
	                    codedinputstream.readMessage(builder34, extensionregistrylite);
	                    setUserInfoRequest(builder34.buildPartial());
	                    break;
	
	                case 290: 
	                    UserInfoResponse.Builder builder33 = UserInfoResponse.newBuilder();
	                    if(hasUserInfoResponse())
	                        builder33.mergeFrom(getUserInfoResponse());
	                    codedinputstream.readMessage(builder33, extensionregistrylite);
	                    setUserInfoResponse(builder33.buildPartial());
	                    break;
	
	                case 298: 
	                    ConversationSearchRequest.Builder builder32 = ConversationSearchRequest.newBuilder();
	                    if(hasConversationSearchRequest())
	                        builder32.mergeFrom(getConversationSearchRequest());
	                    codedinputstream.readMessage(builder32, extensionregistrylite);
	                    setConversationSearchRequest(builder32.buildPartial());
	                    break;
	
	                case 306: 
	                    ConversationSearchResponse.Builder builder31 = ConversationSearchResponse.newBuilder();
	                    if(hasConversationSearchResponse())
	                        builder31.mergeFrom(getConversationSearchResponse());
	                    codedinputstream.readMessage(builder31, extensionregistrylite);
	                    setConversationSearchResponse(builder31.buildPartial());
	                    break;
	
	                case 314: 
	                    PresenceResponse.Builder builder30 = PresenceResponse.newBuilder();
	                    if(hasPresenceResponse())
	                        builder30.mergeFrom(getPresenceResponse());
	                    codedinputstream.readMessage(builder30, extensionregistrylite);
	                    setPresenceResponse(builder30.buildPartial());
	                    break;
	
	                case 322: 
	                    Presence.Builder builder29 = Presence.newBuilder();
	                    if(hasPresence())
	                        builder29.mergeFrom(getPresence());
	                    codedinputstream.readMessage(builder29, extensionregistrylite);
	                    setPresence(builder29.buildPartial());
	                    break;
	
	                case 330: 
	                    TypingResponse.Builder builder28 = TypingResponse.newBuilder();
	                    if(hasTypingResponse())
	                        builder28.mergeFrom(getTypingResponse());
	                    codedinputstream.readMessage(builder28, extensionregistrylite);
	                    setTypingResponse(builder28.buildPartial());
	                    break;
	
	                case 338: 
	                    Typing.Builder builder27 = Typing.newBuilder();
	                    if(hasTyping())
	                        builder27.mergeFrom(getTyping());
	                    codedinputstream.readMessage(builder27, extensionregistrylite);
	                    setTyping(builder27.buildPartial());
	                    break;
	
	                case 346: 
	                    EventSearchRequest.Builder builder26 = EventSearchRequest.newBuilder();
	                    if(hasEventSearchRequest())
	                        builder26.mergeFrom(getEventSearchRequest());
	                    codedinputstream.readMessage(builder26, extensionregistrylite);
	                    setEventSearchRequest(builder26.buildPartial());
	                    break;
	
	                case 354: 
	                    EventSearchResponse.Builder builder25 = EventSearchResponse.newBuilder();
	                    if(hasEventSearchResponse())
	                        builder25.mergeFrom(getEventSearchResponse());
	                    codedinputstream.readMessage(builder25, extensionregistrylite);
	                    setEventSearchResponse(builder25.buildPartial());
	                    break;
	
	                case 362: 
	                    ConversationRenameRequest.Builder builder24 = ConversationRenameRequest.newBuilder();
	                    if(hasConversationRenameRequest())
	                        builder24.mergeFrom(getConversationRenameRequest());
	                    codedinputstream.readMessage(builder24, extensionregistrylite);
	                    setConversationRenameRequest(builder24.buildPartial());
	                    break;
	
	                case 370: 
	                    ConversationRenameResponse.Builder builder23 = ConversationRenameResponse.newBuilder();
	                    if(hasConversationRenameResponse())
	                        builder23.mergeFrom(getConversationRenameResponse());
	                    codedinputstream.readMessage(builder23, extensionregistrylite);
	                    setConversationRenameResponse(builder23.buildPartial());
	                    break;
	
	                case 378: 
	                    ChatMessageRequest.Builder builder22 = ChatMessageRequest.newBuilder();
	                    if(hasChatMessageRequest())
	                        builder22.mergeFrom(getChatMessageRequest());
	                    codedinputstream.readMessage(builder22, extensionregistrylite);
	                    setChatMessageRequest(builder22.buildPartial());
	                    break;
	
	                case 386: 
	                    ChatMessageResponse.Builder builder21 = ChatMessageResponse.newBuilder();
	                    if(hasChatMessageResponse())
	                        builder21.mergeFrom(getChatMessageResponse());
	                    codedinputstream.readMessage(builder21, extensionregistrylite);
	                    setChatMessageResponse(builder21.buildPartial());
	                    break;
	
	                case 394: 
	                    ReceiptRequest.Builder builder20 = ReceiptRequest.newBuilder();
	                    if(hasReceiptRequest())
	                        builder20.mergeFrom(getReceiptRequest());
	                    codedinputstream.readMessage(builder20, extensionregistrylite);
	                    setReceiptRequest(builder20.buildPartial());
	                    break;
	
	                case 402: 
	                    ReceiptResponse.Builder builder19 = ReceiptResponse.newBuilder();
	                    if(hasReceiptResponse())
	                        builder19.mergeFrom(getReceiptResponse());
	                    codedinputstream.readMessage(builder19, extensionregistrylite);
	                    setReceiptResponse(builder19.buildPartial());
	                    break;
	
	                case 410: 
	                    SuggestionsRequest.Builder builder18 = SuggestionsRequest.newBuilder();
	                    if(hasSuggestionsRequest())
	                        builder18.mergeFrom(getSuggestionsRequest());
	                    codedinputstream.readMessage(builder18, extensionregistrylite);
	                    setSuggestionsRequest(builder18.buildPartial());
	                    break;
	
	                case 418: 
	                    SuggestionsResponse.Builder builder17 = SuggestionsResponse.newBuilder();
	                    if(hasSuggestionsResponse())
	                        builder17.mergeFrom(getSuggestionsResponse());
	                    codedinputstream.readMessage(builder17, extensionregistrylite);
	                    setSuggestionsResponse(builder17.buildPartial());
	                    break;
	
	                case 426: 
	                    TileEventRequest.Builder builder16 = TileEventRequest.newBuilder();
	                    if(hasTileEventRequest())
	                        builder16.mergeFrom(getTileEventRequest());
	                    codedinputstream.readMessage(builder16, extensionregistrylite);
	                    setTileEventRequest(builder16.buildPartial());
	                    break;
	
	                case 434: 
	                    TileEventResponse.Builder builder15 = TileEventResponse.newBuilder();
	                    if(hasTileEventResponse())
	                        builder15.mergeFrom(getTileEventResponse());
	                    codedinputstream.readMessage(builder15, extensionregistrylite);
	                    setTileEventResponse(builder15.buildPartial());
	                    break;
	
	                case 442: 
	                    TileEvent.Builder builder14 = TileEvent.newBuilder();
	                    if(hasTileEvent())
	                        builder14.mergeFrom(getTileEvent());
	                    codedinputstream.readMessage(builder14, extensionregistrylite);
	                    setTileEvent(builder14.buildPartial());
	                    break;
	
	                case 450: 
	                    GlobalConversationPreferencesRequest.Builder builder13 = GlobalConversationPreferencesRequest.newBuilder();
	                    if(hasGlobalConversationPreferencesRequest())
	                        builder13.mergeFrom(getGlobalConversationPreferencesRequest());
	                    codedinputstream.readMessage(builder13, extensionregistrylite);
	                    setGlobalConversationPreferencesRequest(builder13.buildPartial());
	                    break;
	
	                case 458: 
	                    GlobalConversationPreferencesResponse.Builder builder12 = GlobalConversationPreferencesResponse.newBuilder();
	                    if(hasGlobalConversationPreferencesResponse())
	                        builder12.mergeFrom(getGlobalConversationPreferencesResponse());
	                    codedinputstream.readMessage(builder12, extensionregistrylite);
	                    setGlobalConversationPreferencesResponse(builder12.buildPartial());
	                    break;
	
	                case 466: 
	                    ConversationJoinRequest.Builder builder11 = ConversationJoinRequest.newBuilder();
	                    if(hasConversationJoinRequest())
	                        builder11.mergeFrom(getConversationJoinRequest());
	                    codedinputstream.readMessage(builder11, extensionregistrylite);
	                    setConversationJoinRequest(builder11.buildPartial());
	                    break;
	
	                case 474: 
	                    ConversationJoinResponse.Builder builder10 = ConversationJoinResponse.newBuilder();
	                    if(hasConversationJoinResponse())
	                        builder10.mergeFrom(getConversationJoinResponse());
	                    codedinputstream.readMessage(builder10, extensionregistrylite);
	                    setConversationJoinResponse(builder10.buildPartial());
	                    break;
	
	                case 482: 
	                    HangoutInviteRequest.Builder builder9 = HangoutInviteRequest.newBuilder();
	                    if(hasHangoutInviteRequest())
	                        builder9.mergeFrom(getHangoutInviteRequest());
	                    codedinputstream.readMessage(builder9, extensionregistrylite);
	                    setHangoutInviteRequest(builder9.buildPartial());
	                    break;
	
	                case 490: 
	                    HangoutInviteResponse.Builder builder8 = HangoutInviteResponse.newBuilder();
	                    if(hasHangoutInviteResponse())
	                        builder8.mergeFrom(getHangoutInviteResponse());
	                    codedinputstream.readMessage(builder8, extensionregistrylite);
	                    setHangoutInviteResponse(builder8.buildPartial());
	                    break;
	
	                case 498: 
	                    HangoutInviteKeepAliveRequest.Builder builder7 = HangoutInviteKeepAliveRequest.newBuilder();
	                    if(hasHangoutInviteKeepAliveRequest())
	                        builder7.mergeFrom(getHangoutInviteKeepAliveRequest());
	                    codedinputstream.readMessage(builder7, extensionregistrylite);
	                    setHangoutInviteKeepAliveRequest(builder7.buildPartial());
	                    break;
	
	                case 506: 
	                    HangoutInviteKeepAliveResponse.Builder builder6 = HangoutInviteKeepAliveResponse.newBuilder();
	                    if(hasHangoutInviteKeepAliveResponse())
	                        builder6.mergeFrom(getHangoutInviteKeepAliveResponse());
	                    codedinputstream.readMessage(builder6, extensionregistrylite);
	                    setHangoutInviteKeepAliveResponse(builder6.buildPartial());
	                    break;
	
	                case 514: 
	                    HangoutInviteReplyRequest.Builder builder5 = HangoutInviteReplyRequest.newBuilder();
	                    if(hasHangoutInviteReplyRequest())
	                        builder5.mergeFrom(getHangoutInviteReplyRequest());
	                    codedinputstream.readMessage(builder5, extensionregistrylite);
	                    setHangoutInviteReplyRequest(builder5.buildPartial());
	                    break;
	
	                case 522: 
	                    HangoutInviteReplyResponse.Builder builder4 = HangoutInviteReplyResponse.newBuilder();
	                    if(hasHangoutInviteReplyResponse())
	                        builder4.mergeFrom(getHangoutInviteReplyResponse());
	                    codedinputstream.readMessage(builder4, extensionregistrylite);
	                    setHangoutInviteReplyResponse(builder4.buildPartial());
	                    break;
	
	                case 530: 
	                    HangoutInviteFinishRequest.Builder builder3 = HangoutInviteFinishRequest.newBuilder();
	                    if(hasHangoutInviteFinishRequest())
	                        builder3.mergeFrom(getHangoutInviteFinishRequest());
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    setHangoutInviteFinishRequest(builder3.buildPartial());
	                    break;
	
	                case 538: 
	                    HangoutInviteFinishResponse.Builder builder2 = HangoutInviteFinishResponse.newBuilder();
	                    if(hasHangoutInviteFinishResponse())
	                        builder2.mergeFrom(getHangoutInviteFinishResponse());
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    setHangoutInviteFinishResponse(builder2.buildPartial());
	                    break;
	
	                case 546: 
	                    HangoutRingFinishRequest.Builder builder1 = HangoutRingFinishRequest.newBuilder();
	                    if(hasHangoutRingFinishRequest())
	                        builder1.mergeFrom(getHangoutRingFinishRequest());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setHangoutRingFinishRequest(builder1.buildPartial());
	                    break;
	
	                case 554: 
	                    HangoutRingFinishResponse.Builder builder = HangoutRingFinishResponse.newBuilder();
	                    if(hasHangoutRingFinishResponse())
	                        builder.mergeFrom(getHangoutRingFinishResponse());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setHangoutRingFinishResponse(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final BunchCommand build()
	        {
	            BunchCommand bunchcommand = buildPartial();
	            if(!bunchcommand.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("bunchcommand"));
	            else
	                return bunchcommand;
	        }
	
	        public final BunchCommand buildPartial()
	        {
	            BunchCommand bunchcommand = new BunchCommand(this);
	            int i = bitField0_;
	            int j = bitField1_;
	            int k = bitField2_;
	            int l = i & 1;
	            int i1 = 0;
	            if(l == 1)
	                i1 = 1;
	            bunchcommand.requestClientId_ = requestClientId_;
	            if((i & 2) == 2)
	                i1 |= 2;
	            bunchcommand.chatMessage_ = chatMessage_;
	            if((i & 4) == 4)
	                i1 |= 4;
	            bunchcommand.chatMessageRequest_ = chatMessageRequest_;
	            if((i & 8) == 8)
	                i1 |= 8;
	            bunchcommand.chatMessageResponse_ = chatMessageResponse_;
	            if((i & 0x10) == 16)
	                i1 |= 0x10;
	            bunchcommand.presenceRequest_ = presenceRequest_;
	            if((i & 0x20) == 32)
	                i1 |= 0x20;
	            bunchcommand.presenceResponse_ = presenceResponse_;
	            if((i & 0x40) == 64)
	                i1 |= 0x40;
	            bunchcommand.presence_ = presence_;
	            if((i & 0x80) == 128)
	                i1 |= 0x80;
	            bunchcommand.typingRequest_ = typingRequest_;
	            if((i & 0x100) == 256)
	                i1 |= 0x100;
	            bunchcommand.typingResponse_ = typingResponse_;
	            if((i & 0x200) == 512)
	                i1 |= 0x200;
	            bunchcommand.typing_ = typing_;
	            if((i & 0x400) == 1024)
	                i1 |= 0x400;
	            bunchcommand.receipt_ = receipt_;
	            if((i & 0x800) == 2048)
	                i1 |= 0x800;
	            bunchcommand.receiptRequest_ = receiptRequest_;
	            if((i & 0x1000) == 4096)
	                i1 |= 0x1000;
	            bunchcommand.receiptResponse_ = receiptResponse_;
	            if((i & 0x2000) == 8192)
	                i1 |= 0x2000;
	            bunchcommand.membershipChange_ = membershipChange_;
	            if((i & 0x4000) == 16384)
	                i1 |= 0x4000;
	            bunchcommand.conversationRequest_ = conversationRequest_;
	            if((i & 0x8000) == 32768)
	                i1 |= 0x8000;
	            bunchcommand.conversationResponse_ = conversationResponse_;
	            if((i & 0x10000) == 0x10000)
	                i1 |= 0x10000;
	            bunchcommand.eventStreamRequest_ = eventStreamRequest_;
	            if((i & 0x20000) == 0x20000)
	                i1 |= 0x20000;
	            bunchcommand.eventSteamResponse_ = eventSteamResponse_;
	            if((i & 0x40000) == 0x40000)
	                i1 |= 0x40000;
	            bunchcommand.deviceRegistrationRequest_ = deviceRegistrationRequest_;
	            if((0x80000 & i) == 0x80000)
	                i1 |= 0x80000;
	            bunchcommand.deviceRegistrationResponse_ = deviceRegistrationResponse_;
	            if((0x100000 & i) == 0x100000)
	                i1 |= 0x100000;
	            bunchcommand.pingRequest_ = pingRequest_;
	            if((0x200000 & i) == 0x200000)
	                i1 |= 0x200000;
	            bunchcommand.pingResponse_ = pingResponse_;
	            if((0x400000 & i) == 0x400000)
	                i1 |= 0x400000;
	            bunchcommand.conversationListRequest_ = conversationListRequest_;
	            if((0x800000 & i) == 0x800000)
	                i1 |= 0x800000;
	            bunchcommand.conversationListResponse_ = conversationListResponse_;
	            if((0x1000000 & i) == 0x1000000)
	                i1 |= 0x1000000;
	            bunchcommand.userCreationRequest_ = userCreationRequest_;
	            if((0x2000000 & i) == 0x2000000)
	                i1 |= 0x2000000;
	            bunchcommand.userCreationResponse_ = userCreationResponse_;
	            if((0x4000000 & i) == 0x4000000)
	                i1 |= 0x4000000;
	            bunchcommand.error_ = error_;
	            if((0x8000000 & i) == 0x8000000)
	                i1 |= 0x8000000;
	            bunchcommand.inviteRequest_ = inviteRequest_;
	            if((0x10000000 & i) == 0x10000000)
	                i1 |= 0x10000000;
	            bunchcommand.leaveConversationRequest_ = leaveConversationRequest_;
	            if((0x20000000 & i) == 0x20000000)
	                i1 |= 0x20000000;
	            bunchcommand.leaveConversationResponse_ = leaveConversationResponse_;
	            if((0x40000000 & i) == 0x40000000)
	                i1 |= 0x40000000;
	            bunchcommand.conversationRenameRequest_ = conversationRenameRequest_;
	            if((i & 0x80000000) == 0x80000000)
	                i1 |= 0x80000000;
	            bunchcommand.conversationRenameResponse_ = conversationRenameResponse_;
	            int j1 = j & 1;
	            int k1 = 0;
	            if(j1 == 1)
	                k1 = 1;
	            bunchcommand.groupConversationRename_ = groupConversationRename_;
	            if((j & 2) == 2)
	                k1 |= 2;
	            bunchcommand.tileEventRequest_ = tileEventRequest_;
	            if((j & 4) == 4)
	                k1 |= 4;
	            bunchcommand.tileEventResponse_ = tileEventResponse_;
	            if((j & 8) == 8)
	                k1 |= 8;
	            bunchcommand.tileEvent_ = tileEvent_;
	            if((j & 0x10) == 16)
	                k1 |= 0x10;
	            bunchcommand.migration_ = migration_;
	            if((j & 0x20) == 32)
	                k1 |= 0x20;
	            bunchcommand.conversationPreferenceRequest_ = conversationPreferenceRequest_;
	            if((j & 0x40) == 64)
	                k1 |= 0x40;
	            bunchcommand.conversationPreferenceResponse_ = conversationPreferenceResponse_;
	            if((j & 0x80) == 128)
	                k1 |= 0x80;
	            bunchcommand.replyToInviteRequest_ = replyToInviteRequest_;
	            if((j & 0x100) == 256)
	                k1 |= 0x100;
	            bunchcommand.setAclsRequest_ = setAclsRequest_;
	            if((j & 0x200) == 512)
	                k1 |= 0x200;
	            bunchcommand.invalidateLocalCache_ = invalidateLocalCache_;
	            if((j & 0x400) == 1024)
	                k1 |= 0x400;
	            bunchcommand.inviteResponse_ = inviteResponse_;
	            if((j & 0x800) == 2048)
	                k1 |= 0x800;
	            bunchcommand.replyToInviteResponse_ = replyToInviteResponse_;
	            if((j & 0x1000) == 4096)
	                k1 |= 0x1000;
	            bunchcommand.setAclsResponse_ = setAclsResponse_;
	            if((j & 0x2000) == 8192)
	                k1 |= 0x2000;
	            bunchcommand.userInfoRequest_ = userInfoRequest_;
	            if((j & 0x4000) == 16384)
	                k1 |= 0x4000;
	            bunchcommand.userInfoResponse_ = userInfoResponse_;
	            if((j & 0x8000) == 32768)
	                k1 |= 0x8000;
	            bunchcommand.conversationSearchRequest_ = conversationSearchRequest_;
	            if((j & 0x10000) == 0x10000)
	                k1 |= 0x10000;
	            bunchcommand.conversationSearchResponse_ = conversationSearchResponse_;
	            if((j & 0x20000) == 0x20000)
	                k1 |= 0x20000;
	            bunchcommand.eventSearchRequest_ = eventSearchRequest_;
	            if((j & 0x40000) == 0x40000)
	                k1 |= 0x40000;
	            bunchcommand.eventSearchResponse_ = eventSearchResponse_;
	            if((0x80000 & j) == 0x80000)
	                k1 |= 0x80000;
	            bunchcommand.suggestionsRequest_ = suggestionsRequest_;
	            if((0x100000 & j) == 0x100000)
	                k1 |= 0x100000;
	            bunchcommand.suggestionsResponse_ = suggestionsResponse_;
	            if((0x200000 & j) == 0x200000)
	                k1 |= 0x200000;
	            bunchcommand.globalConversationPreferencesRequest_ = globalConversationPreferencesRequest_;
	            if((0x400000 & j) == 0x400000)
	                k1 |= 0x400000;
	            bunchcommand.globalConversationPreferencesResponse_ = globalConversationPreferencesResponse_;
	            if((0x800000 & j) == 0x800000)
	                k1 |= 0x800000;
	            bunchcommand.conversationJoinRequest_ = conversationJoinRequest_;
	            if((0x1000000 & j) == 0x1000000)
	                k1 |= 0x1000000;
	            bunchcommand.conversationJoinResponse_ = conversationJoinResponse_;
	            if((0x2000000 & j) == 0x2000000)
	                k1 |= 0x2000000;
	            bunchcommand.hangoutInviteRequest_ = hangoutInviteRequest_;
	            if((0x4000000 & j) == 0x4000000)
	                k1 |= 0x4000000;
	            bunchcommand.hangoutInviteResponse_ = hangoutInviteResponse_;
	            if((0x8000000 & j) == 0x8000000)
	                k1 |= 0x8000000;
	            bunchcommand.hangoutInviteKeepAliveRequest_ = hangoutInviteKeepAliveRequest_;
	            if((0x10000000 & j) == 0x10000000)
	                k1 |= 0x10000000;
	            bunchcommand.hangoutInviteKeepAliveResponse_ = hangoutInviteKeepAliveResponse_;
	            if((0x20000000 & j) == 0x20000000)
	                k1 |= 0x20000000;
	            bunchcommand.hangoutInviteReplyRequest_ = hangoutInviteReplyRequest_;
	            if((0x40000000 & j) == 0x40000000)
	                k1 |= 0x40000000;
	            bunchcommand.hangoutInviteReplyResponse_ = hangoutInviteReplyResponse_;
	            if((j & 0x80000000) == 0x80000000)
	                k1 |= 0x80000000;
	            bunchcommand.hangoutInviteFinishRequest_ = hangoutInviteFinishRequest_;
	            int l1 = k & 1;
	            int i2 = 0;
	            if(l1 == 1)
	                i2 = 1;
	            bunchcommand.hangoutInviteFinishResponse_ = hangoutInviteFinishResponse_;
	            if((k & 2) == 2)
	                i2 |= 2;
	            bunchcommand.hangoutRingFinishRequest_ = hangoutRingFinishRequest_;
	            if((k & 4) == 4)
	                i2 |= 4;
	            bunchcommand.hangoutRingFinishResponse_ = hangoutRingFinishResponse_;
	            bunchcommand.bitField0_ = i1;
	            bunchcommand.bitField1_ = k1;
	            bunchcommand.bitField2_ = i2;
	            return bunchcommand;
	        }
	
	        public final BunchCommand.Builder clear()
	        {
	            super.clear();
	            requestClientId_ = "";
	            bitField0_ = -2 & bitField0_;
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            presenceRequest_ = PresenceRequest.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            presenceResponse_ = PresenceResponse.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            presence_ = Presence.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            typingRequest_ = TypingRequest.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            typingResponse_ = TypingResponse.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            typing_ = Typing.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            receipt_ = Receipt.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            receiptRequest_ = ReceiptRequest.getDefaultInstance();
	            bitField0_ = 0xfffff7ff & bitField0_;
	            receiptResponse_ = ReceiptResponse.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            membershipChange_ = MembershipChange.getDefaultInstance();
	            bitField0_ = 0xffffdfff & bitField0_;
	            conversationRequest_ = NewConversationRequest.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            conversationResponse_ = NewConversationResponse.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
	            bitField0_ = 0xfffeffff & bitField0_;
	            eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
	            bitField0_ = 0xfffbffff & bitField0_;
	            deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	            bitField0_ = 0xfff7ffff & bitField0_;
	            pingRequest_ = PingRequest.getDefaultInstance();
	            bitField0_ = 0xffefffff & bitField0_;
	            pingResponse_ = PingResponse.getDefaultInstance();
	            bitField0_ = 0xffdfffff & bitField0_;
	            conversationListRequest_ = ConversationListRequest.getDefaultInstance();
	            bitField0_ = 0xffbfffff & bitField0_;
	            conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	            bitField0_ = 0xff7fffff & bitField0_;
	            userCreationRequest_ = UserCreationRequest.getDefaultInstance();
	            bitField0_ = 0xfeffffff & bitField0_;
	            userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	            bitField0_ = 0xfdffffff & bitField0_;
	            error_ = Error.getDefaultInstance();
	            bitField0_ = 0xfbffffff & bitField0_;
	            inviteRequest_ = InviteRequest.getDefaultInstance();
	            bitField0_ = 0xf7ffffff & bitField0_;
	            leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
	            bitField0_ = 0xefffffff & bitField0_;
	            leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	            bitField0_ = 0xdfffffff & bitField0_;
	            conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
	            bitField0_ = 0xbfffffff & bitField0_;
	            conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	            bitField0_ = 0x7fffffff & bitField0_;
	            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	            bitField1_ = -2 & bitField1_;
	            tileEventRequest_ = TileEventRequest.getDefaultInstance();
	            bitField1_ = -3 & bitField1_;
	            tileEventResponse_ = TileEventResponse.getDefaultInstance();
	            bitField1_ = -5 & bitField1_;
	            tileEvent_ = TileEvent.getDefaultInstance();
	            bitField1_ = -9 & bitField1_;
	            migration_ = Migration.getDefaultInstance();
	            bitField1_ = 0xffffffef & bitField1_;
	            conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
	            bitField1_ = 0xffffffdf & bitField1_;
	            conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	            bitField1_ = 0xffffffbf & bitField1_;
	            replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
	            bitField1_ = 0xffffff7f & bitField1_;
	            setAclsRequest_ = SetAclsRequest.getDefaultInstance();
	            bitField1_ = 0xfffffeff & bitField1_;
	            invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	            bitField1_ = 0xfffffdff & bitField1_;
	            inviteResponse_ = InviteResponse.getDefaultInstance();
	            bitField1_ = 0xfffffbff & bitField1_;
	            replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	            bitField1_ = 0xfffff7ff & bitField1_;
	            setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	            bitField1_ = 0xffffefff & bitField1_;
	            userInfoRequest_ = UserInfoRequest.getDefaultInstance();
	            bitField1_ = 0xffffdfff & bitField1_;
	            userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	            bitField1_ = 0xffffbfff & bitField1_;
	            conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
	            bitField1_ = 0xffff7fff & bitField1_;
	            conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	            bitField1_ = 0xfffeffff & bitField1_;
	            eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
	            bitField1_ = 0xfffdffff & bitField1_;
	            eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	            bitField1_ = 0xfffbffff & bitField1_;
	            suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
	            bitField1_ = 0xfff7ffff & bitField1_;
	            suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	            bitField1_ = 0xffefffff & bitField1_;
	            globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
	            bitField1_ = 0xffdfffff & bitField1_;
	            globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	            bitField1_ = 0xffbfffff & bitField1_;
	            conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
	            bitField1_ = 0xff7fffff & bitField1_;
	            conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	            bitField1_ = 0xfeffffff & bitField1_;
	            hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
	            bitField1_ = 0xfdffffff & bitField1_;
	            hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	            bitField1_ = 0xfbffffff & bitField1_;
	            hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
	            bitField1_ = 0xf7ffffff & bitField1_;
	            hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	            bitField1_ = 0xefffffff & bitField1_;
	            hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
	            bitField1_ = 0xdfffffff & bitField1_;
	            hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	            bitField1_ = 0xbfffffff & bitField1_;
	            hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
	            bitField1_ = 0x7fffffff & bitField1_;
	            hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	            bitField2_ = -2 & bitField2_;
	            hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
	            bitField2_ = -3 & bitField2_;
	            hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	            bitField2_ = -5 & bitField2_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearChatMessage()
	        {
	            chatMessage_ = ChatMessage.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearChatMessageRequest()
	        {
	            chatMessageRequest_ = ChatMessageRequest.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearChatMessageResponse()
	        {
	            chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationJoinRequest()
	        {
	            conversationJoinRequest_ = ConversationJoinRequest.getDefaultInstance();
	            bitField1_ = 0xff7fffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationJoinResponse()
	        {
	            conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	            bitField1_ = 0xfeffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationListRequest()
	        {
	            conversationListRequest_ = ConversationListRequest.getDefaultInstance();
	            bitField0_ = 0xffbfffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationListResponse()
	        {
	            conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	            bitField0_ = 0xff7fffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationPreferenceRequest()
	        {
	            conversationPreferenceRequest_ = ConversationPreferenceRequest.getDefaultInstance();
	            bitField1_ = 0xffffffdf & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationPreferenceResponse()
	        {
	            conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	            bitField1_ = 0xffffffbf & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationRenameRequest()
	        {
	            conversationRenameRequest_ = ConversationRenameRequest.getDefaultInstance();
	            bitField0_ = 0xbfffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationRenameResponse()
	        {
	            conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	            bitField0_ = 0x7fffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationRequest()
	        {
	            conversationRequest_ = NewConversationRequest.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationResponse()
	        {
	            conversationResponse_ = NewConversationResponse.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationSearchRequest()
	        {
	            conversationSearchRequest_ = ConversationSearchRequest.getDefaultInstance();
	            bitField1_ = 0xffff7fff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearConversationSearchResponse()
	        {
	            conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	            bitField1_ = 0xfffeffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearDeviceRegistrationRequest()
	        {
	            deviceRegistrationRequest_ = DeviceRegistrationRequest.getDefaultInstance();
	            bitField0_ = 0xfffbffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearDeviceRegistrationResponse()
	        {
	            deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	            bitField0_ = 0xfff7ffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearError()
	        {
	            error_ = Error.getDefaultInstance();
	            bitField0_ = 0xfbffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearEventSearchRequest()
	        {
	            eventSearchRequest_ = EventSearchRequest.getDefaultInstance();
	            bitField1_ = 0xfffdffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearEventSearchResponse()
	        {
	            eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	            bitField1_ = 0xfffbffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearEventSteamResponse()
	        {
	            eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearEventStreamRequest()
	        {
	            eventStreamRequest_ = EventStreamRequest.getDefaultInstance();
	            bitField0_ = 0xfffeffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearGlobalConversationPreferencesRequest()
	        {
	            globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.getDefaultInstance();
	            bitField1_ = 0xffdfffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearGlobalConversationPreferencesResponse()
	        {
	            globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	            bitField1_ = 0xffbfffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearGroupConversationRename()
	        {
	            groupConversationRename_ = GroupConversationRename.getDefaultInstance();
	            bitField1_ = -2 & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteFinishRequest()
	        {
	            hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.getDefaultInstance();
	            bitField1_ = 0x7fffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteFinishResponse()
	        {
	            hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	            bitField2_ = -2 & bitField2_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteKeepAliveRequest()
	        {
	            hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.getDefaultInstance();
	            bitField1_ = 0xf7ffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteKeepAliveResponse()
	        {
	            hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	            bitField1_ = 0xefffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteReplyRequest()
	        {
	            hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.getDefaultInstance();
	            bitField1_ = 0xdfffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteReplyResponse()
	        {
	            hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	            bitField1_ = 0xbfffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteRequest()
	        {
	            hangoutInviteRequest_ = HangoutInviteRequest.getDefaultInstance();
	            bitField1_ = 0xfdffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutInviteResponse()
	        {
	            hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	            bitField1_ = 0xfbffffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutRingFinishRequest()
	        {
	            hangoutRingFinishRequest_ = HangoutRingFinishRequest.getDefaultInstance();
	            bitField2_ = -3 & bitField2_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearHangoutRingFinishResponse()
	        {
	            hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	            bitField2_ = -5 & bitField2_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearInvalidateLocalCache()
	        {
	            invalidateLocalCache_ = InvalidateLocalCache.getDefaultInstance();
	            bitField1_ = 0xfffffdff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearInviteRequest()
	        {
	            inviteRequest_ = InviteRequest.getDefaultInstance();
	            bitField0_ = 0xf7ffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearInviteResponse()
	        {
	            inviteResponse_ = InviteResponse.getDefaultInstance();
	            bitField1_ = 0xfffffbff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearLeaveConversationRequest()
	        {
	            leaveConversationRequest_ = LeaveConversationRequest.getDefaultInstance();
	            bitField0_ = 0xefffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearLeaveConversationResponse()
	        {
	            leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	            bitField0_ = 0xdfffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearMembershipChange()
	        {
	            membershipChange_ = MembershipChange.getDefaultInstance();
	            bitField0_ = 0xffffdfff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearMigration()
	        {
	            migration_ = Migration.getDefaultInstance();
	            bitField1_ = 0xffffffef & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearPingRequest()
	        {
	            pingRequest_ = PingRequest.getDefaultInstance();
	            bitField0_ = 0xffefffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearPingResponse()
	        {
	            pingResponse_ = PingResponse.getDefaultInstance();
	            bitField0_ = 0xffdfffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearPresence()
	        {
	            presence_ = Presence.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearPresenceRequest()
	        {
	            presenceRequest_ = PresenceRequest.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearPresenceResponse()
	        {
	            presenceResponse_ = PresenceResponse.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearReceipt()
	        {
	            receipt_ = Receipt.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearReceiptRequest()
	        {
	            receiptRequest_ = ReceiptRequest.getDefaultInstance();
	            bitField0_ = 0xfffff7ff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearReceiptResponse()
	        {
	            receiptResponse_ = ReceiptResponse.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearReplyToInviteRequest()
	        {
	            replyToInviteRequest_ = ReplyToInviteRequest.getDefaultInstance();
	            bitField1_ = 0xffffff7f & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearReplyToInviteResponse()
	        {
	            replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	            bitField1_ = 0xfffff7ff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearRequestClientId()
	        {
	            bitField0_ = -2 & bitField0_;
	            requestClientId_ = BunchCommand.getDefaultInstance().getRequestClientId();
	            return this;
	        }
	
	        public final BunchCommand.Builder clearSetAclsRequest()
	        {
	            setAclsRequest_ = SetAclsRequest.getDefaultInstance();
	            bitField1_ = 0xfffffeff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearSetAclsResponse()
	        {
	            setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	            bitField1_ = 0xffffefff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearSuggestionsRequest()
	        {
	            suggestionsRequest_ = SuggestionsRequest.getDefaultInstance();
	            bitField1_ = 0xfff7ffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearSuggestionsResponse()
	        {
	            suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	            bitField1_ = 0xffefffff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearTileEvent()
	        {
	            tileEvent_ = TileEvent.getDefaultInstance();
	            bitField1_ = -9 & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearTileEventRequest()
	        {
	            tileEventRequest_ = TileEventRequest.getDefaultInstance();
	            bitField1_ = -3 & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearTileEventResponse()
	        {
	            tileEventResponse_ = TileEventResponse.getDefaultInstance();
	            bitField1_ = -5 & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearTyping()
	        {
	            typing_ = Typing.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearTypingRequest()
	        {
	            typingRequest_ = TypingRequest.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearTypingResponse()
	        {
	            typingResponse_ = TypingResponse.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearUserCreationRequest()
	        {
	            userCreationRequest_ = UserCreationRequest.getDefaultInstance();
	            bitField0_ = 0xfeffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearUserCreationResponse()
	        {
	            userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	            bitField0_ = 0xfdffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearUserInfoRequest()
	        {
	            userInfoRequest_ = UserInfoRequest.getDefaultInstance();
	            bitField1_ = 0xffffdfff & bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder clearUserInfoResponse()
	        {
	            userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	            bitField1_ = 0xffffbfff & bitField1_;
	            return this;
	        }
	
	        public final ChatMessage getChatMessage()
	        {
	            return chatMessage_;
	        }
	
	        public final ChatMessageRequest getChatMessageRequest()
	        {
	            return chatMessageRequest_;
	        }
	
	        public final ChatMessageResponse getChatMessageResponse()
	        {
	            return chatMessageResponse_;
	        }
	
	        public final ConversationJoinRequest getConversationJoinRequest()
	        {
	            return conversationJoinRequest_;
	        }
	
	        public final ConversationJoinResponse getConversationJoinResponse()
	        {
	            return conversationJoinResponse_;
	        }
	
	        public final ConversationListRequest getConversationListRequest()
	        {
	            return conversationListRequest_;
	        }
	
	        public final ConversationListResponse getConversationListResponse()
	        {
	            return conversationListResponse_;
	        }
	
	        public final ConversationPreferenceRequest getConversationPreferenceRequest()
	        {
	            return conversationPreferenceRequest_;
	        }
	
	        public final ConversationPreferenceResponse getConversationPreferenceResponse()
	        {
	            return conversationPreferenceResponse_;
	        }
	
	        public final ConversationRenameRequest getConversationRenameRequest()
	        {
	            return conversationRenameRequest_;
	        }
	
	        public final ConversationRenameResponse getConversationRenameResponse()
	        {
	            return conversationRenameResponse_;
	        }
	
	        public final NewConversationRequest getConversationRequest()
	        {
	            return conversationRequest_;
	        }
	
	        public final NewConversationResponse getConversationResponse()
	        {
	            return conversationResponse_;
	        }
	
	        public final ConversationSearchRequest getConversationSearchRequest()
	        {
	            return conversationSearchRequest_;
	        }
	
	        public final ConversationSearchResponse getConversationSearchResponse()
	        {
	            return conversationSearchResponse_;
	        }
	
	        public final BunchCommand getDefaultInstanceForType()
	        {
	            return BunchCommand.getDefaultInstance();
	        }
	
	        public final DeviceRegistrationRequest getDeviceRegistrationRequest()
	        {
	            return deviceRegistrationRequest_;
	        }
	
	        public final DeviceRegistrationResponse getDeviceRegistrationResponse()
	        {
	            return deviceRegistrationResponse_;
	        }
	
	        public final Error getError()
	        {
	            return error_;
	        }
	
	        public final EventSearchRequest getEventSearchRequest()
	        {
	            return eventSearchRequest_;
	        }
	
	        public final EventSearchResponse getEventSearchResponse()
	        {
	            return eventSearchResponse_;
	        }
	
	        public final EventStreamResponse getEventSteamResponse()
	        {
	            return eventSteamResponse_;
	        }
	
	        public final EventStreamRequest getEventStreamRequest()
	        {
	            return eventStreamRequest_;
	        }
	
	        public final GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
	        {
	            return globalConversationPreferencesRequest_;
	        }
	
	        public final GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
	        {
	            return globalConversationPreferencesResponse_;
	        }
	
	        public final GroupConversationRename getGroupConversationRename()
	        {
	            return groupConversationRename_;
	        }
	
	        public final HangoutInviteFinishRequest getHangoutInviteFinishRequest()
	        {
	            return hangoutInviteFinishRequest_;
	        }
	
	        public final HangoutInviteFinishResponse getHangoutInviteFinishResponse()
	        {
	            return hangoutInviteFinishResponse_;
	        }
	
	        public final HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
	        {
	            return hangoutInviteKeepAliveRequest_;
	        }
	
	        public final HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
	        {
	            return hangoutInviteKeepAliveResponse_;
	        }
	
	        public final HangoutInviteReplyRequest getHangoutInviteReplyRequest()
	        {
	            return hangoutInviteReplyRequest_;
	        }
	
	        public final HangoutInviteReplyResponse getHangoutInviteReplyResponse()
	        {
	            return hangoutInviteReplyResponse_;
	        }
	
	        public final HangoutInviteRequest getHangoutInviteRequest()
	        {
	            return hangoutInviteRequest_;
	        }
	
	        public final HangoutInviteResponse getHangoutInviteResponse()
	        {
	            return hangoutInviteResponse_;
	        }
	
	        public final HangoutRingFinishRequest getHangoutRingFinishRequest()
	        {
	            return hangoutRingFinishRequest_;
	        }
	
	        public final HangoutRingFinishResponse getHangoutRingFinishResponse()
	        {
	            return hangoutRingFinishResponse_;
	        }
	
	        public final InvalidateLocalCache getInvalidateLocalCache()
	        {
	            return invalidateLocalCache_;
	        }
	
	        public final InviteRequest getInviteRequest()
	        {
	            return inviteRequest_;
	        }
	
	        public final InviteResponse getInviteResponse()
	        {
	            return inviteResponse_;
	        }
	
	        public final LeaveConversationRequest getLeaveConversationRequest()
	        {
	            return leaveConversationRequest_;
	        }
	
	        public final LeaveConversationResponse getLeaveConversationResponse()
	        {
	            return leaveConversationResponse_;
	        }
	
	        public final MembershipChange getMembershipChange()
	        {
	            return membershipChange_;
	        }
	
	        public final Migration getMigration()
	        {
	            return migration_;
	        }
	
	        public final PingRequest getPingRequest()
	        {
	            return pingRequest_;
	        }
	
	        public final PingResponse getPingResponse()
	        {
	            return pingResponse_;
	        }
	
	        public final Presence getPresence()
	        {
	            return presence_;
	        }
	
	        public final PresenceRequest getPresenceRequest()
	        {
	            return presenceRequest_;
	        }
	
	        public final PresenceResponse getPresenceResponse()
	        {
	            return presenceResponse_;
	        }
	
	        public final Receipt getReceipt()
	        {
	            return receipt_;
	        }
	
	        public final ReceiptRequest getReceiptRequest()
	        {
	            return receiptRequest_;
	        }
	
	        public final ReceiptResponse getReceiptResponse()
	        {
	            return receiptResponse_;
	        }
	
	        public final ReplyToInviteRequest getReplyToInviteRequest()
	        {
	            return replyToInviteRequest_;
	        }
	
	        public final ReplyToInviteResponse getReplyToInviteResponse()
	        {
	            return replyToInviteResponse_;
	        }
	
	        public final String getRequestClientId()
	        {
	            Object obj = requestClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final SetAclsRequest getSetAclsRequest()
	        {
	            return setAclsRequest_;
	        }
	
	        public final SetAclsResponse getSetAclsResponse()
	        {
	            return setAclsResponse_;
	        }
	
	        public final SuggestionsRequest getSuggestionsRequest()
	        {
	            return suggestionsRequest_;
	        }
	
	        public final SuggestionsResponse getSuggestionsResponse()
	        {
	            return suggestionsResponse_;
	        }
	
	        public final TileEvent getTileEvent()
	        {
	            return tileEvent_;
	        }
	
	        public final TileEventRequest getTileEventRequest()
	        {
	            return tileEventRequest_;
	        }
	
	        public final TileEventResponse getTileEventResponse()
	        {
	            return tileEventResponse_;
	        }
	
	        public final Typing getTyping()
	        {
	            return typing_;
	        }
	
	        public final TypingRequest getTypingRequest()
	        {
	            return typingRequest_;
	        }
	
	        public final TypingResponse getTypingResponse()
	        {
	            return typingResponse_;
	        }
	
	        public final UserCreationRequest getUserCreationRequest()
	        {
	            return userCreationRequest_;
	        }
	
	        public final UserCreationResponse getUserCreationResponse()
	        {
	            return userCreationResponse_;
	        }
	
	        public final UserInfoRequest getUserInfoRequest()
	        {
	            return userInfoRequest_;
	        }
	
	        public final UserInfoResponse getUserInfoResponse()
	        {
	            return userInfoResponse_;
	        }
	
	        public final boolean hasChatMessage()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasChatMessageRequest()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasChatMessageResponse()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationJoinRequest()
	        {
	            boolean flag;
	            if((0x800000 & bitField1_) == 0x800000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationJoinResponse()
	        {
	            boolean flag;
	            if((0x1000000 & bitField1_) == 0x1000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationListRequest()
	        {
	            boolean flag;
	            if((0x400000 & bitField0_) == 0x400000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationListResponse()
	        {
	            boolean flag;
	            if((0x800000 & bitField0_) == 0x800000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationPreferenceRequest()
	        {
	            boolean flag;
	            if((0x20 & bitField1_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationPreferenceResponse()
	        {
	            boolean flag;
	            if((0x40 & bitField1_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationRenameRequest()
	        {
	            boolean flag;
	            if((0x40000000 & bitField0_) == 0x40000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationRenameResponse()
	        {
	            boolean flag;
	            if((0x80000000 & bitField0_) == 0x80000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationRequest()
	        {
	            boolean flag;
	            if((0x4000 & bitField0_) == 16384)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationResponse()
	        {
	            boolean flag;
	            if((0x8000 & bitField0_) == 32768)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationSearchRequest()
	        {
	            boolean flag;
	            if((0x8000 & bitField1_) == 32768)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationSearchResponse()
	        {
	            boolean flag;
	            if((0x10000 & bitField1_) == 0x10000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasDeviceRegistrationRequest()
	        {
	            boolean flag;
	            if((0x40000 & bitField0_) == 0x40000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasDeviceRegistrationResponse()
	        {
	            boolean flag;
	            if((0x80000 & bitField0_) == 0x80000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasError()
	        {
	            boolean flag;
	            if((0x4000000 & bitField0_) == 0x4000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventSearchRequest()
	        {
	            boolean flag;
	            if((0x20000 & bitField1_) == 0x20000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventSearchResponse()
	        {
	            boolean flag;
	            if((0x40000 & bitField1_) == 0x40000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventSteamResponse()
	        {
	            boolean flag;
	            if((0x20000 & bitField0_) == 0x20000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventStreamRequest()
	        {
	            boolean flag;
	            if((0x10000 & bitField0_) == 0x10000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasGlobalConversationPreferencesRequest()
	        {
	            boolean flag;
	            if((0x200000 & bitField1_) == 0x200000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasGlobalConversationPreferencesResponse()
	        {
	            boolean flag;
	            if((0x400000 & bitField1_) == 0x400000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasGroupConversationRename()
	        {
	            boolean flag = true;
	            if((1 & bitField1_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteFinishRequest()
	        {
	            boolean flag;
	            if((0x80000000 & bitField1_) == 0x80000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteFinishResponse()
	        {
	            boolean flag = true;
	            if((1 & bitField2_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteKeepAliveRequest()
	        {
	            boolean flag;
	            if((0x8000000 & bitField1_) == 0x8000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteKeepAliveResponse()
	        {
	            boolean flag;
	            if((0x10000000 & bitField1_) == 0x10000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteReplyRequest()
	        {
	            boolean flag;
	            if((0x20000000 & bitField1_) == 0x20000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteReplyResponse()
	        {
	            boolean flag;
	            if((0x40000000 & bitField1_) == 0x40000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteRequest()
	        {
	            boolean flag;
	            if((0x2000000 & bitField1_) == 0x2000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteResponse()
	        {
	            boolean flag;
	            if((0x4000000 & bitField1_) == 0x4000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutRingFinishRequest()
	        {
	            boolean flag;
	            if((2 & bitField2_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutRingFinishResponse()
	        {
	            boolean flag;
	            if((4 & bitField2_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInvalidateLocalCache()
	        {
	            boolean flag;
	            if((0x200 & bitField1_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteRequest()
	        {
	            boolean flag;
	            if((0x8000000 & bitField0_) == 0x8000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteResponse()
	        {
	            boolean flag;
	            if((0x400 & bitField1_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLeaveConversationRequest()
	        {
	            boolean flag;
	            if((0x10000000 & bitField0_) == 0x10000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLeaveConversationResponse()
	        {
	            boolean flag;
	            if((0x20000000 & bitField0_) == 0x20000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMembershipChange()
	        {
	            boolean flag;
	            if((0x2000 & bitField0_) == 8192)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasMigration()
	        {
	            boolean flag;
	            if((0x10 & bitField1_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPingRequest()
	        {
	            boolean flag;
	            if((0x100000 & bitField0_) == 0x100000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPingResponse()
	        {
	            boolean flag;
	            if((0x200000 & bitField0_) == 0x200000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPresence()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPresenceRequest()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPresenceResponse()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceipt()
	        {
	            boolean flag;
	            if((0x400 & bitField0_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceiptRequest()
	        {
	            boolean flag;
	            if((0x800 & bitField0_) == 2048)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceiptResponse()
	        {
	            boolean flag;
	            if((0x1000 & bitField0_) == 4096)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReplyToInviteRequest()
	        {
	            boolean flag;
	            if((0x80 & bitField1_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReplyToInviteResponse()
	        {
	            boolean flag;
	            if((0x800 & bitField1_) == 2048)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRequestClientId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSetAclsRequest()
	        {
	            boolean flag;
	            if((0x100 & bitField1_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSetAclsResponse()
	        {
	            boolean flag;
	            if((0x1000 & bitField1_) == 4096)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSuggestionsRequest()
	        {
	            boolean flag;
	            if((0x80000 & bitField1_) == 0x80000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSuggestionsResponse()
	        {
	            boolean flag;
	            if((0x100000 & bitField1_) == 0x100000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileEvent()
	        {
	            boolean flag;
	            if((8 & bitField1_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileEventRequest()
	        {
	            boolean flag;
	            if((2 & bitField1_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileEventResponse()
	        {
	            boolean flag;
	            if((4 & bitField1_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTyping()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTypingRequest()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTypingResponse()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserCreationRequest()
	        {
	            boolean flag;
	            if((0x1000000 & bitField0_) == 0x1000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserCreationResponse()
	        {
	            boolean flag;
	            if((0x2000000 & bitField0_) == 0x2000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserInfoRequest()
	        {
	            boolean flag;
	            if((0x2000 & bitField1_) == 8192)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserInfoResponse()
	        {
	            boolean flag;
	            if((0x4000 & bitField1_) == 16384)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((BunchCommand)generatedmessagelite);
	        }
	
	        public final BunchCommand.Builder mergeFrom(BunchCommand bunchcommand)
	        {
	            if(bunchcommand == BunchCommand.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(bunchcommand.hasRequestClientId())
	                setRequestClientId(bunchcommand.getRequestClientId());
	            if(bunchcommand.hasChatMessage())
	            {
	                ChatMessage chatmessage = bunchcommand.getChatMessage();
	                if((2 & bitField0_) == 2 && chatMessage_ != ChatMessage.getDefaultInstance())
	                    chatMessage_ = ChatMessage.newBuilder(chatMessage_).mergeFrom(chatmessage).buildPartial();
	                else
	                    chatMessage_ = chatmessage;
	                bitField0_ = 2 | bitField0_;
	            }
	            if(bunchcommand.hasChatMessageRequest())
	            {
	                ChatMessageRequest chatmessagerequest = bunchcommand.getChatMessageRequest();
	                if((4 & bitField0_) == 4 && chatMessageRequest_ != ChatMessageRequest.getDefaultInstance())
	                    chatMessageRequest_ = ChatMessageRequest.newBuilder(chatMessageRequest_).mergeFrom(chatmessagerequest).buildPartial();
	                else
	                    chatMessageRequest_ = chatmessagerequest;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(bunchcommand.hasChatMessageResponse())
	            {
	                ChatMessageResponse chatmessageresponse = bunchcommand.getChatMessageResponse();
	                if((8 & bitField0_) == 8 && chatMessageResponse_ != ChatMessageResponse.getDefaultInstance())
	                    chatMessageResponse_ = ChatMessageResponse.newBuilder(chatMessageResponse_).mergeFrom(chatmessageresponse).buildPartial();
	                else
	                    chatMessageResponse_ = chatmessageresponse;
	                bitField0_ = 8 | bitField0_;
	            }
	            if(bunchcommand.hasPresenceRequest())
	            {
	                PresenceRequest presencerequest = bunchcommand.getPresenceRequest();
	                if((0x10 & bitField0_) == 16 && presenceRequest_ != PresenceRequest.getDefaultInstance())
	                    presenceRequest_ = PresenceRequest.newBuilder(presenceRequest_).mergeFrom(presencerequest).buildPartial();
	                else
	                    presenceRequest_ = presencerequest;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            if(bunchcommand.hasPresenceResponse())
	            {
	                PresenceResponse presenceresponse = bunchcommand.getPresenceResponse();
	                if((0x20 & bitField0_) == 32 && presenceResponse_ != PresenceResponse.getDefaultInstance())
	                    presenceResponse_ = PresenceResponse.newBuilder(presenceResponse_).mergeFrom(presenceresponse).buildPartial();
	                else
	                    presenceResponse_ = presenceresponse;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            if(bunchcommand.hasPresence())
	            {
	                Presence presence = bunchcommand.getPresence();
	                if((0x40 & bitField0_) == 64 && presence_ != Presence.getDefaultInstance())
	                    presence_ = Presence.newBuilder(presence_).mergeFrom(presence).buildPartial();
	                else
	                    presence_ = presence;
	                bitField0_ = 0x40 | bitField0_;
	            }
	            if(bunchcommand.hasTypingRequest())
	            {
	                TypingRequest typingrequest = bunchcommand.getTypingRequest();
	                if((0x80 & bitField0_) == 128 && typingRequest_ != TypingRequest.getDefaultInstance())
	                    typingRequest_ = TypingRequest.newBuilder(typingRequest_).mergeFrom(typingrequest).buildPartial();
	                else
	                    typingRequest_ = typingrequest;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            if(bunchcommand.hasTypingResponse())
	            {
	                TypingResponse typingresponse = bunchcommand.getTypingResponse();
	                if((0x100 & bitField0_) == 256 && typingResponse_ != TypingResponse.getDefaultInstance())
	                    typingResponse_ = TypingResponse.newBuilder(typingResponse_).mergeFrom(typingresponse).buildPartial();
	                else
	                    typingResponse_ = typingresponse;
	                bitField0_ = 0x100 | bitField0_;
	            }
	            if(bunchcommand.hasTyping())
	            {
	                Typing typing = bunchcommand.getTyping();
	                if((0x200 & bitField0_) == 512 && typing_ != Typing.getDefaultInstance())
	                    typing_ = Typing.newBuilder(typing_).mergeFrom(typing).buildPartial();
	                else
	                    typing_ = typing;
	                bitField0_ = 0x200 | bitField0_;
	            }
	            if(bunchcommand.hasReceipt())
	            {
	                Receipt receipt = bunchcommand.getReceipt();
	                if((0x400 & bitField0_) == 1024 && receipt_ != Receipt.getDefaultInstance())
	                    receipt_ = Receipt.newBuilder(receipt_).mergeFrom(receipt).buildPartial();
	                else
	                    receipt_ = receipt;
	                bitField0_ = 0x400 | bitField0_;
	            }
	            if(bunchcommand.hasReceiptRequest())
	            {
	                ReceiptRequest receiptrequest = bunchcommand.getReceiptRequest();
	                if((0x800 & bitField0_) == 2048 && receiptRequest_ != ReceiptRequest.getDefaultInstance())
	                    receiptRequest_ = ReceiptRequest.newBuilder(receiptRequest_).mergeFrom(receiptrequest).buildPartial();
	                else
	                    receiptRequest_ = receiptrequest;
	                bitField0_ = 0x800 | bitField0_;
	            }
	            if(bunchcommand.hasReceiptResponse())
	            {
	                ReceiptResponse receiptresponse = bunchcommand.getReceiptResponse();
	                if((0x1000 & bitField0_) == 4096 && receiptResponse_ != ReceiptResponse.getDefaultInstance())
	                    receiptResponse_ = ReceiptResponse.newBuilder(receiptResponse_).mergeFrom(receiptresponse).buildPartial();
	                else
	                    receiptResponse_ = receiptresponse;
	                bitField0_ = 0x1000 | bitField0_;
	            }
	            if(bunchcommand.hasMembershipChange())
	            {
	                MembershipChange membershipchange = bunchcommand.getMembershipChange();
	                if((0x2000 & bitField0_) == 8192 && membershipChange_ != MembershipChange.getDefaultInstance())
	                    membershipChange_ = MembershipChange.newBuilder(membershipChange_).mergeFrom(membershipchange).buildPartial();
	                else
	                    membershipChange_ = membershipchange;
	                bitField0_ = 0x2000 | bitField0_;
	            }
	            if(bunchcommand.hasConversationRequest())
	            {
	                NewConversationRequest newconversationrequest = bunchcommand.getConversationRequest();
	                if((0x4000 & bitField0_) == 16384 && conversationRequest_ != NewConversationRequest.getDefaultInstance())
	                    conversationRequest_ = NewConversationRequest.newBuilder(conversationRequest_).mergeFrom(newconversationrequest).buildPartial();
	                else
	                    conversationRequest_ = newconversationrequest;
	                bitField0_ = 0x4000 | bitField0_;
	            }
	            if(bunchcommand.hasConversationResponse())
	            {
	                NewConversationResponse newconversationresponse = bunchcommand.getConversationResponse();
	                if((0x8000 & bitField0_) == 32768 && conversationResponse_ != NewConversationResponse.getDefaultInstance())
	                    conversationResponse_ = NewConversationResponse.newBuilder(conversationResponse_).mergeFrom(newconversationresponse).buildPartial();
	                else
	                    conversationResponse_ = newconversationresponse;
	                bitField0_ = 0x8000 | bitField0_;
	            }
	            if(bunchcommand.hasEventStreamRequest())
	            {
	                EventStreamRequest eventstreamrequest = bunchcommand.getEventStreamRequest();
	                if((0x10000 & bitField0_) == 0x10000 && eventStreamRequest_ != EventStreamRequest.getDefaultInstance())
	                    eventStreamRequest_ = EventStreamRequest.newBuilder(eventStreamRequest_).mergeFrom(eventstreamrequest).buildPartial();
	                else
	                    eventStreamRequest_ = eventstreamrequest;
	                bitField0_ = 0x10000 | bitField0_;
	            }
	            if(bunchcommand.hasEventSteamResponse())
	            {
	                EventStreamResponse eventstreamresponse = bunchcommand.getEventSteamResponse();
	                if((0x20000 & bitField0_) == 0x20000 && eventSteamResponse_ != EventStreamResponse.getDefaultInstance())
	                    eventSteamResponse_ = EventStreamResponse.newBuilder(eventSteamResponse_).mergeFrom(eventstreamresponse).buildPartial();
	                else
	                    eventSteamResponse_ = eventstreamresponse;
	                bitField0_ = 0x20000 | bitField0_;
	            }
	            if(bunchcommand.hasDeviceRegistrationRequest())
	            {
	                DeviceRegistrationRequest deviceregistrationrequest = bunchcommand.getDeviceRegistrationRequest();
	                if((0x40000 & bitField0_) == 0x40000 && deviceRegistrationRequest_ != DeviceRegistrationRequest.getDefaultInstance())
	                    deviceRegistrationRequest_ = DeviceRegistrationRequest.newBuilder(deviceRegistrationRequest_).mergeFrom(deviceregistrationrequest).buildPartial();
	                else
	                    deviceRegistrationRequest_ = deviceregistrationrequest;
	                bitField0_ = 0x40000 | bitField0_;
	            }
	            if(bunchcommand.hasDeviceRegistrationResponse())
	            {
	                DeviceRegistrationResponse deviceregistrationresponse = bunchcommand.getDeviceRegistrationResponse();
	                if((0x80000 & bitField0_) == 0x80000 && deviceRegistrationResponse_ != DeviceRegistrationResponse.getDefaultInstance())
	                    deviceRegistrationResponse_ = DeviceRegistrationResponse.newBuilder(deviceRegistrationResponse_).mergeFrom(deviceregistrationresponse).buildPartial();
	                else
	                    deviceRegistrationResponse_ = deviceregistrationresponse;
	                bitField0_ = 0x80000 | bitField0_;
	            }
	            if(bunchcommand.hasPingRequest())
	            {
	                PingRequest pingrequest = bunchcommand.getPingRequest();
	                if((0x100000 & bitField0_) == 0x100000 && pingRequest_ != PingRequest.getDefaultInstance())
	                    pingRequest_ = PingRequest.newBuilder(pingRequest_).mergeFrom(pingrequest).buildPartial();
	                else
	                    pingRequest_ = pingrequest;
	                bitField0_ = 0x100000 | bitField0_;
	            }
	            if(bunchcommand.hasPingResponse())
	            {
	                PingResponse pingresponse = bunchcommand.getPingResponse();
	                if((0x200000 & bitField0_) == 0x200000 && pingResponse_ != PingResponse.getDefaultInstance())
	                    pingResponse_ = PingResponse.newBuilder(pingResponse_).mergeFrom(pingresponse).buildPartial();
	                else
	                    pingResponse_ = pingresponse;
	                bitField0_ = 0x200000 | bitField0_;
	            }
	            if(bunchcommand.hasConversationListRequest())
	            {
	                ConversationListRequest conversationlistrequest = bunchcommand.getConversationListRequest();
	                if((0x400000 & bitField0_) == 0x400000 && conversationListRequest_ != ConversationListRequest.getDefaultInstance())
	                    conversationListRequest_ = ConversationListRequest.newBuilder(conversationListRequest_).mergeFrom(conversationlistrequest).buildPartial();
	                else
	                    conversationListRequest_ = conversationlistrequest;
	                bitField0_ = 0x400000 | bitField0_;
	            }
	            if(bunchcommand.hasConversationListResponse())
	            {
	                ConversationListResponse conversationlistresponse = bunchcommand.getConversationListResponse();
	                if((0x800000 & bitField0_) == 0x800000 && conversationListResponse_ != ConversationListResponse.getDefaultInstance())
	                    conversationListResponse_ = ConversationListResponse.newBuilder(conversationListResponse_).mergeFrom(conversationlistresponse).buildPartial();
	                else
	                    conversationListResponse_ = conversationlistresponse;
	                bitField0_ = 0x800000 | bitField0_;
	            }
	            if(bunchcommand.hasUserCreationRequest())
	            {
	                UserCreationRequest usercreationrequest = bunchcommand.getUserCreationRequest();
	                if((0x1000000 & bitField0_) == 0x1000000 && userCreationRequest_ != UserCreationRequest.getDefaultInstance())
	                    userCreationRequest_ = UserCreationRequest.newBuilder(userCreationRequest_).mergeFrom(usercreationrequest).buildPartial();
	                else
	                    userCreationRequest_ = usercreationrequest;
	                bitField0_ = 0x1000000 | bitField0_;
	            }
	            if(bunchcommand.hasUserCreationResponse())
	            {
	                UserCreationResponse usercreationresponse = bunchcommand.getUserCreationResponse();
	                if((0x2000000 & bitField0_) == 0x2000000 && userCreationResponse_ != UserCreationResponse.getDefaultInstance())
	                    userCreationResponse_ = UserCreationResponse.newBuilder(userCreationResponse_).mergeFrom(usercreationresponse).buildPartial();
	                else
	                    userCreationResponse_ = usercreationresponse;
	                bitField0_ = 0x2000000 | bitField0_;
	            }
	            if(bunchcommand.hasError())
	            {
	                Error error = bunchcommand.getError();
	                if((0x4000000 & bitField0_) == 0x4000000 && error_ != Error.getDefaultInstance())
	                    error_ = Error.newBuilder(error_).mergeFrom(error).buildPartial();
	                else
	                    error_ = error;
	                bitField0_ = 0x4000000 | bitField0_;
	            }
	            if(bunchcommand.hasInviteRequest())
	            {
	                InviteRequest inviterequest = bunchcommand.getInviteRequest();
	                if((0x8000000 & bitField0_) == 0x8000000 && inviteRequest_ != InviteRequest.getDefaultInstance())
	                    inviteRequest_ = InviteRequest.newBuilder(inviteRequest_).mergeFrom(inviterequest).buildPartial();
	                else
	                    inviteRequest_ = inviterequest;
	                bitField0_ = 0x8000000 | bitField0_;
	            }
	            if(bunchcommand.hasLeaveConversationRequest())
	            {
	                LeaveConversationRequest leaveconversationrequest = bunchcommand.getLeaveConversationRequest();
	                if((0x10000000 & bitField0_) == 0x10000000 && leaveConversationRequest_ != LeaveConversationRequest.getDefaultInstance())
	                    leaveConversationRequest_ = LeaveConversationRequest.newBuilder(leaveConversationRequest_).mergeFrom(leaveconversationrequest).buildPartial();
	                else
	                    leaveConversationRequest_ = leaveconversationrequest;
	                bitField0_ = 0x10000000 | bitField0_;
	            }
	            if(bunchcommand.hasLeaveConversationResponse())
	            {
	                LeaveConversationResponse leaveconversationresponse = bunchcommand.getLeaveConversationResponse();
	                if((0x20000000 & bitField0_) == 0x20000000 && leaveConversationResponse_ != LeaveConversationResponse.getDefaultInstance())
	                    leaveConversationResponse_ = LeaveConversationResponse.newBuilder(leaveConversationResponse_).mergeFrom(leaveconversationresponse).buildPartial();
	                else
	                    leaveConversationResponse_ = leaveconversationresponse;
	                bitField0_ = 0x20000000 | bitField0_;
	            }
	            if(bunchcommand.hasConversationRenameRequest())
	            {
	                ConversationRenameRequest conversationrenamerequest = bunchcommand.getConversationRenameRequest();
	                if((0x40000000 & bitField0_) == 0x40000000 && conversationRenameRequest_ != ConversationRenameRequest.getDefaultInstance())
	                    conversationRenameRequest_ = ConversationRenameRequest.newBuilder(conversationRenameRequest_).mergeFrom(conversationrenamerequest).buildPartial();
	                else
	                    conversationRenameRequest_ = conversationrenamerequest;
	                bitField0_ = 0x40000000 | bitField0_;
	            }
	            if(bunchcommand.hasConversationRenameResponse())
	            {
	                ConversationRenameResponse conversationrenameresponse = bunchcommand.getConversationRenameResponse();
	                if((0x80000000 & bitField0_) == 0x80000000 && conversationRenameResponse_ != ConversationRenameResponse.getDefaultInstance())
	                    conversationRenameResponse_ = ConversationRenameResponse.newBuilder(conversationRenameResponse_).mergeFrom(conversationrenameresponse).buildPartial();
	                else
	                    conversationRenameResponse_ = conversationrenameresponse;
	                bitField0_ = 0x80000000 | bitField0_;
	            }
	            if(bunchcommand.hasGroupConversationRename())
	            {
	                GroupConversationRename groupconversationrename = bunchcommand.getGroupConversationRename();
	                if((1 & bitField1_) == 1 && groupConversationRename_ != GroupConversationRename.getDefaultInstance())
	                    groupConversationRename_ = GroupConversationRename.newBuilder(groupConversationRename_).mergeFrom(groupconversationrename).buildPartial();
	                else
	                    groupConversationRename_ = groupconversationrename;
	                bitField1_ = 1 | bitField1_;
	            }
	            if(bunchcommand.hasTileEventRequest())
	            {
	                TileEventRequest tileeventrequest = bunchcommand.getTileEventRequest();
	                if((2 & bitField1_) == 2 && tileEventRequest_ != TileEventRequest.getDefaultInstance())
	                    tileEventRequest_ = TileEventRequest.newBuilder(tileEventRequest_).mergeFrom(tileeventrequest).buildPartial();
	                else
	                    tileEventRequest_ = tileeventrequest;
	                bitField1_ = 2 | bitField1_;
	            }
	            if(bunchcommand.hasTileEventResponse())
	            {
	                TileEventResponse tileeventresponse = bunchcommand.getTileEventResponse();
	                if((4 & bitField1_) == 4 && tileEventResponse_ != TileEventResponse.getDefaultInstance())
	                    tileEventResponse_ = TileEventResponse.newBuilder(tileEventResponse_).mergeFrom(tileeventresponse).buildPartial();
	                else
	                    tileEventResponse_ = tileeventresponse;
	                bitField1_ = 4 | bitField1_;
	            }
	            if(bunchcommand.hasTileEvent())
	            {
	                TileEvent tileevent = bunchcommand.getTileEvent();
	                if((8 & bitField1_) == 8 && tileEvent_ != TileEvent.getDefaultInstance())
	                    tileEvent_ = TileEvent.newBuilder(tileEvent_).mergeFrom(tileevent).buildPartial();
	                else
	                    tileEvent_ = tileevent;
	                bitField1_ = 8 | bitField1_;
	            }
	            if(bunchcommand.hasMigration())
	            {
	                Migration migration = bunchcommand.getMigration();
	                if((0x10 & bitField1_) == 16 && migration_ != Migration.getDefaultInstance())
	                    migration_ = Migration.newBuilder(migration_).mergeFrom(migration).buildPartial();
	                else
	                    migration_ = migration;
	                bitField1_ = 0x10 | bitField1_;
	            }
	            if(bunchcommand.hasConversationPreferenceRequest())
	            {
	                ConversationPreferenceRequest conversationpreferencerequest = bunchcommand.getConversationPreferenceRequest();
	                if((0x20 & bitField1_) == 32 && conversationPreferenceRequest_ != ConversationPreferenceRequest.getDefaultInstance())
	                    conversationPreferenceRequest_ = ConversationPreferenceRequest.newBuilder(conversationPreferenceRequest_).mergeFrom(conversationpreferencerequest).buildPartial();
	                else
	                    conversationPreferenceRequest_ = conversationpreferencerequest;
	                bitField1_ = 0x20 | bitField1_;
	            }
	            if(bunchcommand.hasConversationPreferenceResponse())
	            {
	                ConversationPreferenceResponse conversationpreferenceresponse = bunchcommand.getConversationPreferenceResponse();
	                if((0x40 & bitField1_) == 64 && conversationPreferenceResponse_ != ConversationPreferenceResponse.getDefaultInstance())
	                    conversationPreferenceResponse_ = ConversationPreferenceResponse.newBuilder(conversationPreferenceResponse_).mergeFrom(conversationpreferenceresponse).buildPartial();
	                else
	                    conversationPreferenceResponse_ = conversationpreferenceresponse;
	                bitField1_ = 0x40 | bitField1_;
	            }
	            if(bunchcommand.hasReplyToInviteRequest())
	            {
	                ReplyToInviteRequest replytoinviterequest = bunchcommand.getReplyToInviteRequest();
	                if((0x80 & bitField1_) == 128 && replyToInviteRequest_ != ReplyToInviteRequest.getDefaultInstance())
	                    replyToInviteRequest_ = ReplyToInviteRequest.newBuilder(replyToInviteRequest_).mergeFrom(replytoinviterequest).buildPartial();
	                else
	                    replyToInviteRequest_ = replytoinviterequest;
	                bitField1_ = 0x80 | bitField1_;
	            }
	            if(bunchcommand.hasSetAclsRequest())
	            {
	                SetAclsRequest setaclsrequest = bunchcommand.getSetAclsRequest();
	                if((0x100 & bitField1_) == 256 && setAclsRequest_ != SetAclsRequest.getDefaultInstance())
	                    setAclsRequest_ = SetAclsRequest.newBuilder(setAclsRequest_).mergeFrom(setaclsrequest).buildPartial();
	                else
	                    setAclsRequest_ = setaclsrequest;
	                bitField1_ = 0x100 | bitField1_;
	            }
	            if(bunchcommand.hasInvalidateLocalCache())
	            {
	                InvalidateLocalCache invalidatelocalcache = bunchcommand.getInvalidateLocalCache();
	                if((0x200 & bitField1_) == 512 && invalidateLocalCache_ != InvalidateLocalCache.getDefaultInstance())
	                    invalidateLocalCache_ = InvalidateLocalCache.newBuilder(invalidateLocalCache_).mergeFrom(invalidatelocalcache).buildPartial();
	                else
	                    invalidateLocalCache_ = invalidatelocalcache;
	                bitField1_ = 0x200 | bitField1_;
	            }
	            if(bunchcommand.hasInviteResponse())
	            {
	                InviteResponse inviteresponse = bunchcommand.getInviteResponse();
	                if((0x400 & bitField1_) == 1024 && inviteResponse_ != InviteResponse.getDefaultInstance())
	                    inviteResponse_ = InviteResponse.newBuilder(inviteResponse_).mergeFrom(inviteresponse).buildPartial();
	                else
	                    inviteResponse_ = inviteresponse;
	                bitField1_ = 0x400 | bitField1_;
	            }
	            if(bunchcommand.hasReplyToInviteResponse())
	            {
	                ReplyToInviteResponse replytoinviteresponse = bunchcommand.getReplyToInviteResponse();
	                if((0x800 & bitField1_) == 2048 && replyToInviteResponse_ != ReplyToInviteResponse.getDefaultInstance())
	                    replyToInviteResponse_ = ReplyToInviteResponse.newBuilder(replyToInviteResponse_).mergeFrom(replytoinviteresponse).buildPartial();
	                else
	                    replyToInviteResponse_ = replytoinviteresponse;
	                bitField1_ = 0x800 | bitField1_;
	            }
	            if(bunchcommand.hasSetAclsResponse())
	            {
	                SetAclsResponse setaclsresponse = bunchcommand.getSetAclsResponse();
	                if((0x1000 & bitField1_) == 4096 && setAclsResponse_ != SetAclsResponse.getDefaultInstance())
	                    setAclsResponse_ = SetAclsResponse.newBuilder(setAclsResponse_).mergeFrom(setaclsresponse).buildPartial();
	                else
	                    setAclsResponse_ = setaclsresponse;
	                bitField1_ = 0x1000 | bitField1_;
	            }
	            if(bunchcommand.hasUserInfoRequest())
	            {
	                UserInfoRequest userinforequest = bunchcommand.getUserInfoRequest();
	                if((0x2000 & bitField1_) == 8192 && userInfoRequest_ != UserInfoRequest.getDefaultInstance())
	                    userInfoRequest_ = UserInfoRequest.newBuilder(userInfoRequest_).mergeFrom(userinforequest).buildPartial();
	                else
	                    userInfoRequest_ = userinforequest;
	                bitField1_ = 0x2000 | bitField1_;
	            }
	            if(bunchcommand.hasUserInfoResponse())
	            {
	                UserInfoResponse userinforesponse = bunchcommand.getUserInfoResponse();
	                if((0x4000 & bitField1_) == 16384 && userInfoResponse_ != UserInfoResponse.getDefaultInstance())
	                    userInfoResponse_ = UserInfoResponse.newBuilder(userInfoResponse_).mergeFrom(userinforesponse).buildPartial();
	                else
	                    userInfoResponse_ = userinforesponse;
	                bitField1_ = 0x4000 | bitField1_;
	            }
	            if(bunchcommand.hasConversationSearchRequest())
	            {
	                ConversationSearchRequest conversationsearchrequest = bunchcommand.getConversationSearchRequest();
	                if((0x8000 & bitField1_) == 32768 && conversationSearchRequest_ != ConversationSearchRequest.getDefaultInstance())
	                    conversationSearchRequest_ = ConversationSearchRequest.newBuilder(conversationSearchRequest_).mergeFrom(conversationsearchrequest).buildPartial();
	                else
	                    conversationSearchRequest_ = conversationsearchrequest;
	                bitField1_ = 0x8000 | bitField1_;
	            }
	            if(bunchcommand.hasConversationSearchResponse())
	            {
	                ConversationSearchResponse conversationsearchresponse = bunchcommand.getConversationSearchResponse();
	                if((0x10000 & bitField1_) == 0x10000 && conversationSearchResponse_ != ConversationSearchResponse.getDefaultInstance())
	                    conversationSearchResponse_ = ConversationSearchResponse.newBuilder(conversationSearchResponse_).mergeFrom(conversationsearchresponse).buildPartial();
	                else
	                    conversationSearchResponse_ = conversationsearchresponse;
	                bitField1_ = 0x10000 | bitField1_;
	            }
	            if(bunchcommand.hasEventSearchRequest())
	            {
	                EventSearchRequest eventsearchrequest = bunchcommand.getEventSearchRequest();
	                if((0x20000 & bitField1_) == 0x20000 && eventSearchRequest_ != EventSearchRequest.getDefaultInstance())
	                    eventSearchRequest_ = EventSearchRequest.newBuilder(eventSearchRequest_).mergeFrom(eventsearchrequest).buildPartial();
	                else
	                    eventSearchRequest_ = eventsearchrequest;
	                bitField1_ = 0x20000 | bitField1_;
	            }
	            if(bunchcommand.hasEventSearchResponse())
	            {
	                EventSearchResponse eventsearchresponse = bunchcommand.getEventSearchResponse();
	                if((0x40000 & bitField1_) == 0x40000 && eventSearchResponse_ != EventSearchResponse.getDefaultInstance())
	                    eventSearchResponse_ = EventSearchResponse.newBuilder(eventSearchResponse_).mergeFrom(eventsearchresponse).buildPartial();
	                else
	                    eventSearchResponse_ = eventsearchresponse;
	                bitField1_ = 0x40000 | bitField1_;
	            }
	            if(bunchcommand.hasSuggestionsRequest())
	            {
	                SuggestionsRequest suggestionsrequest = bunchcommand.getSuggestionsRequest();
	                if((0x80000 & bitField1_) == 0x80000 && suggestionsRequest_ != SuggestionsRequest.getDefaultInstance())
	                    suggestionsRequest_ = SuggestionsRequest.newBuilder(suggestionsRequest_).mergeFrom(suggestionsrequest).buildPartial();
	                else
	                    suggestionsRequest_ = suggestionsrequest;
	                bitField1_ = 0x80000 | bitField1_;
	            }
	            if(bunchcommand.hasSuggestionsResponse())
	            {
	                SuggestionsResponse suggestionsresponse = bunchcommand.getSuggestionsResponse();
	                if((0x100000 & bitField1_) == 0x100000 && suggestionsResponse_ != SuggestionsResponse.getDefaultInstance())
	                    suggestionsResponse_ = SuggestionsResponse.newBuilder(suggestionsResponse_).mergeFrom(suggestionsresponse).buildPartial();
	                else
	                    suggestionsResponse_ = suggestionsresponse;
	                bitField1_ = 0x100000 | bitField1_;
	            }
	            if(bunchcommand.hasGlobalConversationPreferencesRequest())
	            {
	                GlobalConversationPreferencesRequest globalconversationpreferencesrequest = bunchcommand.getGlobalConversationPreferencesRequest();
	                if((0x200000 & bitField1_) == 0x200000 && globalConversationPreferencesRequest_ != GlobalConversationPreferencesRequest.getDefaultInstance())
	                    globalConversationPreferencesRequest_ = GlobalConversationPreferencesRequest.newBuilder(globalConversationPreferencesRequest_).mergeFrom(globalconversationpreferencesrequest).buildPartial();
	                else
	                    globalConversationPreferencesRequest_ = globalconversationpreferencesrequest;
	                bitField1_ = 0x200000 | bitField1_;
	            }
	            if(bunchcommand.hasGlobalConversationPreferencesResponse())
	            {
	                GlobalConversationPreferencesResponse globalconversationpreferencesresponse = bunchcommand.getGlobalConversationPreferencesResponse();
	                if((0x400000 & bitField1_) == 0x400000 && globalConversationPreferencesResponse_ != GlobalConversationPreferencesResponse.getDefaultInstance())
	                    globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.newBuilder(globalConversationPreferencesResponse_).mergeFrom(globalconversationpreferencesresponse).buildPartial();
	                else
	                    globalConversationPreferencesResponse_ = globalconversationpreferencesresponse;
	                bitField1_ = 0x400000 | bitField1_;
	            }
	            if(bunchcommand.hasConversationJoinRequest())
	            {
	                ConversationJoinRequest conversationjoinrequest = bunchcommand.getConversationJoinRequest();
	                if((0x800000 & bitField1_) == 0x800000 && conversationJoinRequest_ != ConversationJoinRequest.getDefaultInstance())
	                    conversationJoinRequest_ = ConversationJoinRequest.newBuilder(conversationJoinRequest_).mergeFrom(conversationjoinrequest).buildPartial();
	                else
	                    conversationJoinRequest_ = conversationjoinrequest;
	                bitField1_ = 0x800000 | bitField1_;
	            }
	            if(bunchcommand.hasConversationJoinResponse())
	            {
	                ConversationJoinResponse conversationjoinresponse = bunchcommand.getConversationJoinResponse();
	                if((0x1000000 & bitField1_) == 0x1000000 && conversationJoinResponse_ != ConversationJoinResponse.getDefaultInstance())
	                    conversationJoinResponse_ = ConversationJoinResponse.newBuilder(conversationJoinResponse_).mergeFrom(conversationjoinresponse).buildPartial();
	                else
	                    conversationJoinResponse_ = conversationjoinresponse;
	                bitField1_ = 0x1000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteRequest())
	            {
	                HangoutInviteRequest hangoutinviterequest = bunchcommand.getHangoutInviteRequest();
	                if((0x2000000 & bitField1_) == 0x2000000 && hangoutInviteRequest_ != HangoutInviteRequest.getDefaultInstance())
	                    hangoutInviteRequest_ = HangoutInviteRequest.newBuilder(hangoutInviteRequest_).mergeFrom(hangoutinviterequest).buildPartial();
	                else
	                    hangoutInviteRequest_ = hangoutinviterequest;
	                bitField1_ = 0x2000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteResponse())
	            {
	                HangoutInviteResponse hangoutinviteresponse = bunchcommand.getHangoutInviteResponse();
	                if((0x4000000 & bitField1_) == 0x4000000 && hangoutInviteResponse_ != HangoutInviteResponse.getDefaultInstance())
	                    hangoutInviteResponse_ = HangoutInviteResponse.newBuilder(hangoutInviteResponse_).mergeFrom(hangoutinviteresponse).buildPartial();
	                else
	                    hangoutInviteResponse_ = hangoutinviteresponse;
	                bitField1_ = 0x4000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteKeepAliveRequest())
	            {
	                HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest = bunchcommand.getHangoutInviteKeepAliveRequest();
	                if((0x8000000 & bitField1_) == 0x8000000 && hangoutInviteKeepAliveRequest_ != HangoutInviteKeepAliveRequest.getDefaultInstance())
	                    hangoutInviteKeepAliveRequest_ = HangoutInviteKeepAliveRequest.newBuilder(hangoutInviteKeepAliveRequest_).mergeFrom(hangoutinvitekeepaliverequest).buildPartial();
	                else
	                    hangoutInviteKeepAliveRequest_ = hangoutinvitekeepaliverequest;
	                bitField1_ = 0x8000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteKeepAliveResponse())
	            {
	                HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse = bunchcommand.getHangoutInviteKeepAliveResponse();
	                if((0x10000000 & bitField1_) == 0x10000000 && hangoutInviteKeepAliveResponse_ != HangoutInviteKeepAliveResponse.getDefaultInstance())
	                    hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.newBuilder(hangoutInviteKeepAliveResponse_).mergeFrom(hangoutinvitekeepaliveresponse).buildPartial();
	                else
	                    hangoutInviteKeepAliveResponse_ = hangoutinvitekeepaliveresponse;
	                bitField1_ = 0x10000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteReplyRequest())
	            {
	                HangoutInviteReplyRequest hangoutinvitereplyrequest = bunchcommand.getHangoutInviteReplyRequest();
	                if((0x20000000 & bitField1_) == 0x20000000 && hangoutInviteReplyRequest_ != HangoutInviteReplyRequest.getDefaultInstance())
	                    hangoutInviteReplyRequest_ = HangoutInviteReplyRequest.newBuilder(hangoutInviteReplyRequest_).mergeFrom(hangoutinvitereplyrequest).buildPartial();
	                else
	                    hangoutInviteReplyRequest_ = hangoutinvitereplyrequest;
	                bitField1_ = 0x20000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteReplyResponse())
	            {
	                HangoutInviteReplyResponse hangoutinvitereplyresponse = bunchcommand.getHangoutInviteReplyResponse();
	                if((0x40000000 & bitField1_) == 0x40000000 && hangoutInviteReplyResponse_ != HangoutInviteReplyResponse.getDefaultInstance())
	                    hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.newBuilder(hangoutInviteReplyResponse_).mergeFrom(hangoutinvitereplyresponse).buildPartial();
	                else
	                    hangoutInviteReplyResponse_ = hangoutinvitereplyresponse;
	                bitField1_ = 0x40000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteFinishRequest())
	            {
	                HangoutInviteFinishRequest hangoutinvitefinishrequest = bunchcommand.getHangoutInviteFinishRequest();
	                if((0x80000000 & bitField1_) == 0x80000000 && hangoutInviteFinishRequest_ != HangoutInviteFinishRequest.getDefaultInstance())
	                    hangoutInviteFinishRequest_ = HangoutInviteFinishRequest.newBuilder(hangoutInviteFinishRequest_).mergeFrom(hangoutinvitefinishrequest).buildPartial();
	                else
	                    hangoutInviteFinishRequest_ = hangoutinvitefinishrequest;
	                bitField1_ = 0x80000000 | bitField1_;
	            }
	            if(bunchcommand.hasHangoutInviteFinishResponse())
	            {
	                HangoutInviteFinishResponse hangoutinvitefinishresponse = bunchcommand.getHangoutInviteFinishResponse();
	                if((1 & bitField2_) == 1 && hangoutInviteFinishResponse_ != HangoutInviteFinishResponse.getDefaultInstance())
	                    hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.newBuilder(hangoutInviteFinishResponse_).mergeFrom(hangoutinvitefinishresponse).buildPartial();
	                else
	                    hangoutInviteFinishResponse_ = hangoutinvitefinishresponse;
	                bitField2_ = 1 | bitField2_;
	            }
	            if(bunchcommand.hasHangoutRingFinishRequest())
	            {
	                HangoutRingFinishRequest hangoutringfinishrequest = bunchcommand.getHangoutRingFinishRequest();
	                if((2 & bitField2_) == 2 && hangoutRingFinishRequest_ != HangoutRingFinishRequest.getDefaultInstance())
	                    hangoutRingFinishRequest_ = HangoutRingFinishRequest.newBuilder(hangoutRingFinishRequest_).mergeFrom(hangoutringfinishrequest).buildPartial();
	                else
	                    hangoutRingFinishRequest_ = hangoutringfinishrequest;
	                bitField2_ = 2 | bitField2_;
	            }
	            if(bunchcommand.hasHangoutRingFinishResponse())
	            {
	                HangoutRingFinishResponse hangoutringfinishresponse = bunchcommand.getHangoutRingFinishResponse();
	                if((4 & bitField2_) == 4 && hangoutRingFinishResponse_ != HangoutRingFinishResponse.getDefaultInstance())
	                    hangoutRingFinishResponse_ = HangoutRingFinishResponse.newBuilder(hangoutRingFinishResponse_).mergeFrom(hangoutringfinishresponse).buildPartial();
	                else
	                    hangoutRingFinishResponse_ = hangoutringfinishresponse;
	                bitField2_ = 4 | bitField2_;
	            }
	            return this;
	        }
	
	        public final BunchCommand.Builder setChatMessage(ChatMessage.Builder builder)
	        {
	            chatMessage_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setChatMessage(ChatMessage chatmessage)
	        {
	            if(chatmessage == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                chatMessage_ = chatmessage;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setChatMessageRequest(ChatMessageRequest.Builder builder)
	        {
	            chatMessageRequest_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setChatMessageRequest(ChatMessageRequest chatmessagerequest)
	        {
	            if(chatmessagerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                chatMessageRequest_ = chatmessagerequest;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setChatMessageResponse(ChatMessageResponse.Builder builder)
	        {
	            chatMessageResponse_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setChatMessageResponse(ChatMessageResponse chatmessageresponse)
	        {
	            if(chatmessageresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                chatMessageResponse_ = chatmessageresponse;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationJoinRequest(ConversationJoinRequest.Builder builder)
	        {
	            conversationJoinRequest_ = builder.build();
	            bitField1_ = 0x800000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationJoinRequest(ConversationJoinRequest conversationjoinrequest)
	        {
	            if(conversationjoinrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationJoinRequest_ = conversationjoinrequest;
	                bitField1_ = 0x800000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationJoinResponse(ConversationJoinResponse.Builder builder)
	        {
	            conversationJoinResponse_ = builder.build();
	            bitField1_ = 0x1000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationJoinResponse(ConversationJoinResponse conversationjoinresponse)
	        {
	            if(conversationjoinresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationJoinResponse_ = conversationjoinresponse;
	                bitField1_ = 0x1000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationListRequest(ConversationListRequest.Builder builder)
	        {
	            conversationListRequest_ = builder.build();
	            bitField0_ = 0x400000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationListRequest(ConversationListRequest conversationlistrequest)
	        {
	            if(conversationlistrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationListRequest_ = conversationlistrequest;
	                bitField0_ = 0x400000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationListResponse(ConversationListResponse.Builder builder)
	        {
	            conversationListResponse_ = builder.build();
	            bitField0_ = 0x800000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationListResponse(ConversationListResponse conversationlistresponse)
	        {
	            if(conversationlistresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationListResponse_ = conversationlistresponse;
	                bitField0_ = 0x800000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationPreferenceRequest(ConversationPreferenceRequest.Builder builder)
	        {
	            conversationPreferenceRequest_ = builder.build();
	            bitField1_ = 0x20 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationPreferenceRequest(ConversationPreferenceRequest conversationpreferencerequest)
	        {
	            if(conversationpreferencerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationPreferenceRequest_ = conversationpreferencerequest;
	                bitField1_ = 0x20 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationPreferenceResponse(ConversationPreferenceResponse.Builder builder)
	        {
	            conversationPreferenceResponse_ = builder.build();
	            bitField1_ = 0x40 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationPreferenceResponse(ConversationPreferenceResponse conversationpreferenceresponse)
	        {
	            if(conversationpreferenceresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationPreferenceResponse_ = conversationpreferenceresponse;
	                bitField1_ = 0x40 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationRenameRequest(ConversationRenameRequest.Builder builder)
	        {
	            conversationRenameRequest_ = builder.build();
	            bitField0_ = 0x40000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationRenameRequest(ConversationRenameRequest conversationrenamerequest)
	        {
	            if(conversationrenamerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationRenameRequest_ = conversationrenamerequest;
	                bitField0_ = 0x40000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationRenameResponse(ConversationRenameResponse.Builder builder)
	        {
	            conversationRenameResponse_ = builder.build();
	            bitField0_ = 0x80000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationRenameResponse(ConversationRenameResponse conversationrenameresponse)
	        {
	            if(conversationrenameresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationRenameResponse_ = conversationrenameresponse;
	                bitField0_ = 0x80000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationRequest(NewConversationRequest.Builder builder)
	        {
	            conversationRequest_ = builder.build();
	            bitField0_ = 0x4000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationRequest(NewConversationRequest newconversationrequest)
	        {
	            if(newconversationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationRequest_ = newconversationrequest;
	                bitField0_ = 0x4000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationResponse(NewConversationResponse.Builder builder)
	        {
	            conversationResponse_ = builder.build();
	            bitField0_ = 0x8000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationResponse(NewConversationResponse newconversationresponse)
	        {
	            if(newconversationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationResponse_ = newconversationresponse;
	                bitField0_ = 0x8000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationSearchRequest(ConversationSearchRequest.Builder builder)
	        {
	            conversationSearchRequest_ = builder.build();
	            bitField1_ = 0x8000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationSearchRequest(ConversationSearchRequest conversationsearchrequest)
	        {
	            if(conversationsearchrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationSearchRequest_ = conversationsearchrequest;
	                bitField1_ = 0x8000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setConversationSearchResponse(ConversationSearchResponse.Builder builder)
	        {
	            conversationSearchResponse_ = builder.build();
	            bitField1_ = 0x10000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setConversationSearchResponse(ConversationSearchResponse conversationsearchresponse)
	        {
	            if(conversationsearchresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationSearchResponse_ = conversationsearchresponse;
	                bitField1_ = 0x10000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setDeviceRegistrationRequest(DeviceRegistrationRequest.Builder builder)
	        {
	            deviceRegistrationRequest_ = builder.build();
	            bitField0_ = 0x40000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setDeviceRegistrationRequest(DeviceRegistrationRequest deviceregistrationrequest)
	        {
	            if(deviceregistrationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                deviceRegistrationRequest_ = deviceregistrationrequest;
	                bitField0_ = 0x40000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setDeviceRegistrationResponse(DeviceRegistrationResponse.Builder builder)
	        {
	            deviceRegistrationResponse_ = builder.build();
	            bitField0_ = 0x80000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setDeviceRegistrationResponse(DeviceRegistrationResponse deviceregistrationresponse)
	        {
	            if(deviceregistrationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                deviceRegistrationResponse_ = deviceregistrationresponse;
	                bitField0_ = 0x80000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setError(Error.Builder builder)
	        {
	            error_ = builder.build();
	            bitField0_ = 0x4000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setError(Error error)
	        {
	            if(error == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                error_ = error;
	                bitField0_ = 0x4000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setEventSearchRequest(EventSearchRequest.Builder builder)
	        {
	            eventSearchRequest_ = builder.build();
	            bitField1_ = 0x20000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setEventSearchRequest(EventSearchRequest eventsearchrequest)
	        {
	            if(eventsearchrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventSearchRequest_ = eventsearchrequest;
	                bitField1_ = 0x20000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setEventSearchResponse(EventSearchResponse.Builder builder)
	        {
	            eventSearchResponse_ = builder.build();
	            bitField1_ = 0x40000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setEventSearchResponse(EventSearchResponse eventsearchresponse)
	        {
	            if(eventsearchresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventSearchResponse_ = eventsearchresponse;
	                bitField1_ = 0x40000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setEventSteamResponse(EventStreamResponse.Builder builder)
	        {
	            eventSteamResponse_ = builder.build();
	            bitField0_ = 0x20000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setEventSteamResponse(EventStreamResponse eventstreamresponse)
	        {
	            if(eventstreamresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventSteamResponse_ = eventstreamresponse;
	                bitField0_ = 0x20000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setEventStreamRequest(EventStreamRequest.Builder builder)
	        {
	            eventStreamRequest_ = builder.build();
	            bitField0_ = 0x10000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setEventStreamRequest(EventStreamRequest eventstreamrequest)
	        {
	            if(eventstreamrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventStreamRequest_ = eventstreamrequest;
	                bitField0_ = 0x10000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setGlobalConversationPreferencesRequest(GlobalConversationPreferencesRequest.Builder builder)
	        {
	            globalConversationPreferencesRequest_ = builder.build();
	            bitField1_ = 0x200000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setGlobalConversationPreferencesRequest(GlobalConversationPreferencesRequest globalconversationpreferencesrequest)
	        {
	            if(globalconversationpreferencesrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                globalConversationPreferencesRequest_ = globalconversationpreferencesrequest;
	                bitField1_ = 0x200000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setGlobalConversationPreferencesResponse(GlobalConversationPreferencesResponse.Builder builder)
	        {
	            globalConversationPreferencesResponse_ = builder.build();
	            bitField1_ = 0x400000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setGlobalConversationPreferencesResponse(GlobalConversationPreferencesResponse globalconversationpreferencesresponse)
	        {
	            if(globalconversationpreferencesresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                globalConversationPreferencesResponse_ = globalconversationpreferencesresponse;
	                bitField1_ = 0x400000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setGroupConversationRename(GroupConversationRename.Builder builder)
	        {
	            groupConversationRename_ = builder.build();
	            bitField1_ = 1 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setGroupConversationRename(GroupConversationRename groupconversationrename)
	        {
	            if(groupconversationrename == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                groupConversationRename_ = groupconversationrename;
	                bitField1_ = 1 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteFinishRequest(HangoutInviteFinishRequest.Builder builder)
	        {
	            hangoutInviteFinishRequest_ = builder.build();
	            bitField1_ = 0x80000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteFinishRequest(HangoutInviteFinishRequest hangoutinvitefinishrequest)
	        {
	            if(hangoutinvitefinishrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteFinishRequest_ = hangoutinvitefinishrequest;
	                bitField1_ = 0x80000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteFinishResponse(HangoutInviteFinishResponse.Builder builder)
	        {
	            hangoutInviteFinishResponse_ = builder.build();
	            bitField2_ = 1 | bitField2_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteFinishResponse(HangoutInviteFinishResponse hangoutinvitefinishresponse)
	        {
	            if(hangoutinvitefinishresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteFinishResponse_ = hangoutinvitefinishresponse;
	                bitField2_ = 1 | bitField2_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteKeepAliveRequest(HangoutInviteKeepAliveRequest.Builder builder)
	        {
	            hangoutInviteKeepAliveRequest_ = builder.build();
	            bitField1_ = 0x8000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteKeepAliveRequest(HangoutInviteKeepAliveRequest hangoutinvitekeepaliverequest)
	        {
	            if(hangoutinvitekeepaliverequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteKeepAliveRequest_ = hangoutinvitekeepaliverequest;
	                bitField1_ = 0x8000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteKeepAliveResponse(HangoutInviteKeepAliveResponse.Builder builder)
	        {
	            hangoutInviteKeepAliveResponse_ = builder.build();
	            bitField1_ = 0x10000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteKeepAliveResponse(HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse)
	        {
	            if(hangoutinvitekeepaliveresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteKeepAliveResponse_ = hangoutinvitekeepaliveresponse;
	                bitField1_ = 0x10000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteReplyRequest(HangoutInviteReplyRequest.Builder builder)
	        {
	            hangoutInviteReplyRequest_ = builder.build();
	            bitField1_ = 0x20000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteReplyRequest(HangoutInviteReplyRequest hangoutinvitereplyrequest)
	        {
	            if(hangoutinvitereplyrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteReplyRequest_ = hangoutinvitereplyrequest;
	                bitField1_ = 0x20000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteReplyResponse(HangoutInviteReplyResponse.Builder builder)
	        {
	            hangoutInviteReplyResponse_ = builder.build();
	            bitField1_ = 0x40000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteReplyResponse(HangoutInviteReplyResponse hangoutinvitereplyresponse)
	        {
	            if(hangoutinvitereplyresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteReplyResponse_ = hangoutinvitereplyresponse;
	                bitField1_ = 0x40000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteRequest(HangoutInviteRequest.Builder builder)
	        {
	            hangoutInviteRequest_ = builder.build();
	            bitField1_ = 0x2000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteRequest(HangoutInviteRequest hangoutinviterequest)
	        {
	            if(hangoutinviterequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteRequest_ = hangoutinviterequest;
	                bitField1_ = 0x2000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutInviteResponse(HangoutInviteResponse.Builder builder)
	        {
	            hangoutInviteResponse_ = builder.build();
	            bitField1_ = 0x4000000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutInviteResponse(HangoutInviteResponse hangoutinviteresponse)
	        {
	            if(hangoutinviteresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteResponse_ = hangoutinviteresponse;
	                bitField1_ = 0x4000000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutRingFinishRequest(HangoutRingFinishRequest.Builder builder)
	        {
	            hangoutRingFinishRequest_ = builder.build();
	            bitField2_ = 2 | bitField2_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutRingFinishRequest(HangoutRingFinishRequest hangoutringfinishrequest)
	        {
	            if(hangoutringfinishrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutRingFinishRequest_ = hangoutringfinishrequest;
	                bitField2_ = 2 | bitField2_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setHangoutRingFinishResponse(HangoutRingFinishResponse.Builder builder)
	        {
	            hangoutRingFinishResponse_ = builder.build();
	            bitField2_ = 4 | bitField2_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setHangoutRingFinishResponse(HangoutRingFinishResponse hangoutringfinishresponse)
	        {
	            if(hangoutringfinishresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutRingFinishResponse_ = hangoutringfinishresponse;
	                bitField2_ = 4 | bitField2_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setInvalidateLocalCache(InvalidateLocalCache.Builder builder)
	        {
	            invalidateLocalCache_ = builder.build();
	            bitField1_ = 0x200 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setInvalidateLocalCache(InvalidateLocalCache invalidatelocalcache)
	        {
	            if(invalidatelocalcache == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                invalidateLocalCache_ = invalidatelocalcache;
	                bitField1_ = 0x200 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setInviteRequest(InviteRequest.Builder builder)
	        {
	            inviteRequest_ = builder.build();
	            bitField0_ = 0x8000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setInviteRequest(InviteRequest inviterequest)
	        {
	            if(inviterequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                inviteRequest_ = inviterequest;
	                bitField0_ = 0x8000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setInviteResponse(InviteResponse.Builder builder)
	        {
	            inviteResponse_ = builder.build();
	            bitField1_ = 0x400 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setInviteResponse(InviteResponse inviteresponse)
	        {
	            if(inviteresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                inviteResponse_ = inviteresponse;
	                bitField1_ = 0x400 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setLeaveConversationRequest(LeaveConversationRequest.Builder builder)
	        {
	            leaveConversationRequest_ = builder.build();
	            bitField0_ = 0x10000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setLeaveConversationRequest(LeaveConversationRequest leaveconversationrequest)
	        {
	            if(leaveconversationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                leaveConversationRequest_ = leaveconversationrequest;
	                bitField0_ = 0x10000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setLeaveConversationResponse(LeaveConversationResponse.Builder builder)
	        {
	            leaveConversationResponse_ = builder.build();
	            bitField0_ = 0x20000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setLeaveConversationResponse(LeaveConversationResponse leaveconversationresponse)
	        {
	            if(leaveconversationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                leaveConversationResponse_ = leaveconversationresponse;
	                bitField0_ = 0x20000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setMembershipChange(MembershipChange.Builder builder)
	        {
	            membershipChange_ = builder.build();
	            bitField0_ = 0x2000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setMembershipChange(MembershipChange membershipchange)
	        {
	            if(membershipchange == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                membershipChange_ = membershipchange;
	                bitField0_ = 0x2000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setMigration(Migration.Builder builder)
	        {
	            migration_ = builder.build();
	            bitField1_ = 0x10 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setMigration(Migration migration)
	        {
	            if(migration == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                migration_ = migration;
	                bitField1_ = 0x10 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setPingRequest(PingRequest.Builder builder)
	        {
	            pingRequest_ = builder.build();
	            bitField0_ = 0x100000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setPingRequest(PingRequest pingrequest)
	        {
	            if(pingrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                pingRequest_ = pingrequest;
	                bitField0_ = 0x100000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setPingResponse(PingResponse.Builder builder)
	        {
	            pingResponse_ = builder.build();
	            bitField0_ = 0x200000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setPingResponse(PingResponse pingresponse)
	        {
	            if(pingresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                pingResponse_ = pingresponse;
	                bitField0_ = 0x200000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setPresence(Presence.Builder builder)
	        {
	            presence_ = builder.build();
	            bitField0_ = 0x40 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setPresence(Presence presence)
	        {
	            if(presence == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                presence_ = presence;
	                bitField0_ = 0x40 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setPresenceRequest(PresenceRequest.Builder builder)
	        {
	            presenceRequest_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setPresenceRequest(PresenceRequest presencerequest)
	        {
	            if(presencerequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                presenceRequest_ = presencerequest;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setPresenceResponse(PresenceResponse.Builder builder)
	        {
	            presenceResponse_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setPresenceResponse(PresenceResponse presenceresponse)
	        {
	            if(presenceresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                presenceResponse_ = presenceresponse;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setReceipt(Receipt.Builder builder)
	        {
	            receipt_ = builder.build();
	            bitField0_ = 0x400 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setReceipt(Receipt receipt)
	        {
	            if(receipt == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                receipt_ = receipt;
	                bitField0_ = 0x400 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setReceiptRequest(ReceiptRequest.Builder builder)
	        {
	            receiptRequest_ = builder.build();
	            bitField0_ = 0x800 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setReceiptRequest(ReceiptRequest receiptrequest)
	        {
	            if(receiptrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                receiptRequest_ = receiptrequest;
	                bitField0_ = 0x800 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setReceiptResponse(ReceiptResponse.Builder builder)
	        {
	            receiptResponse_ = builder.build();
	            bitField0_ = 0x1000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setReceiptResponse(ReceiptResponse receiptresponse)
	        {
	            if(receiptresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                receiptResponse_ = receiptresponse;
	                bitField0_ = 0x1000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setReplyToInviteRequest(ReplyToInviteRequest.Builder builder)
	        {
	            replyToInviteRequest_ = builder.build();
	            bitField1_ = 0x80 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setReplyToInviteRequest(ReplyToInviteRequest replytoinviterequest)
	        {
	            if(replytoinviterequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                replyToInviteRequest_ = replytoinviterequest;
	                bitField1_ = 0x80 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setReplyToInviteResponse(ReplyToInviteResponse.Builder builder)
	        {
	            replyToInviteResponse_ = builder.build();
	            bitField1_ = 0x800 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setReplyToInviteResponse(ReplyToInviteResponse replytoinviteresponse)
	        {
	            if(replytoinviteresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                replyToInviteResponse_ = replytoinviteresponse;
	                bitField1_ = 0x800 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setRequestClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                requestClientId_ = s;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setSetAclsRequest(SetAclsRequest.Builder builder)
	        {
	            setAclsRequest_ = builder.build();
	            bitField1_ = 0x100 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setSetAclsRequest(SetAclsRequest setaclsrequest)
	        {
	            if(setaclsrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                setAclsRequest_ = setaclsrequest;
	                bitField1_ = 0x100 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setSetAclsResponse(SetAclsResponse.Builder builder)
	        {
	            setAclsResponse_ = builder.build();
	            bitField1_ = 0x1000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setSetAclsResponse(SetAclsResponse setaclsresponse)
	        {
	            if(setaclsresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                setAclsResponse_ = setaclsresponse;
	                bitField1_ = 0x1000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setSuggestionsRequest(SuggestionsRequest.Builder builder)
	        {
	            suggestionsRequest_ = builder.build();
	            bitField1_ = 0x80000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setSuggestionsRequest(SuggestionsRequest suggestionsrequest)
	        {
	            if(suggestionsrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                suggestionsRequest_ = suggestionsrequest;
	                bitField1_ = 0x80000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setSuggestionsResponse(SuggestionsResponse.Builder builder)
	        {
	            suggestionsResponse_ = builder.build();
	            bitField1_ = 0x100000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setSuggestionsResponse(SuggestionsResponse suggestionsresponse)
	        {
	            if(suggestionsresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                suggestionsResponse_ = suggestionsresponse;
	                bitField1_ = 0x100000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setTileEvent(TileEvent.Builder builder)
	        {
	            tileEvent_ = builder.build();
	            bitField1_ = 8 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setTileEvent(TileEvent tileevent)
	        {
	            if(tileevent == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                tileEvent_ = tileevent;
	                bitField1_ = 8 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setTileEventRequest(TileEventRequest.Builder builder)
	        {
	            tileEventRequest_ = builder.build();
	            bitField1_ = 2 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setTileEventRequest(TileEventRequest tileeventrequest)
	        {
	            if(tileeventrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                tileEventRequest_ = tileeventrequest;
	                bitField1_ = 2 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setTileEventResponse(TileEventResponse.Builder builder)
	        {
	            tileEventResponse_ = builder.build();
	            bitField1_ = 4 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setTileEventResponse(TileEventResponse tileeventresponse)
	        {
	            if(tileeventresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                tileEventResponse_ = tileeventresponse;
	                bitField1_ = 4 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setTyping(Typing.Builder builder)
	        {
	            typing_ = builder.build();
	            bitField0_ = 0x200 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setTyping(Typing typing)
	        {
	            if(typing == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                typing_ = typing;
	                bitField0_ = 0x200 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setTypingRequest(TypingRequest.Builder builder)
	        {
	            typingRequest_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setTypingRequest(TypingRequest typingrequest)
	        {
	            if(typingrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                typingRequest_ = typingrequest;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setTypingResponse(TypingResponse.Builder builder)
	        {
	            typingResponse_ = builder.build();
	            bitField0_ = 0x100 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setTypingResponse(TypingResponse typingresponse)
	        {
	            if(typingresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                typingResponse_ = typingresponse;
	                bitField0_ = 0x100 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setUserCreationRequest(UserCreationRequest.Builder builder)
	        {
	            userCreationRequest_ = builder.build();
	            bitField0_ = 0x1000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setUserCreationRequest(UserCreationRequest usercreationrequest)
	        {
	            if(usercreationrequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userCreationRequest_ = usercreationrequest;
	                bitField0_ = 0x1000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setUserCreationResponse(UserCreationResponse.Builder builder)
	        {
	            userCreationResponse_ = builder.build();
	            bitField0_ = 0x2000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setUserCreationResponse(UserCreationResponse usercreationresponse)
	        {
	            if(usercreationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userCreationResponse_ = usercreationresponse;
	                bitField0_ = 0x2000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setUserInfoRequest(UserInfoRequest.Builder builder)
	        {
	            userInfoRequest_ = builder.build();
	            bitField1_ = 0x2000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setUserInfoRequest(UserInfoRequest userinforequest)
	        {
	            if(userinforequest == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userInfoRequest_ = userinforequest;
	                bitField1_ = 0x2000 | bitField1_;
	                return this;
	            }
	        }
	
	        public final BunchCommand.Builder setUserInfoResponse(UserInfoResponse.Builder builder)
	        {
	            userInfoResponse_ = builder.build();
	            bitField1_ = 0x4000 | bitField1_;
	            return this;
	        }
	
	        public final BunchCommand.Builder setUserInfoResponse(UserInfoResponse userinforesponse)
	        {
	            if(userinforesponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userInfoResponse_ = userinforesponse;
	                bitField1_ = 0x4000 | bitField1_;
	                return this;
	            }
	        }
	    }
	}
	
	//==================================================================================================
	//									BunchServerResponse
	//==================================================================================================
	public static interface BunchServerResponseOrBuilder extends MessageLiteOrBuilder {

	    public abstract ChatMessageResponse getChatMessageResponse();
	
	    public abstract ConversationJoinResponse getConversationJoinResponse();
	
	    public abstract ConversationListResponse getConversationListResponse();
	
	    public abstract ConversationPreferenceResponse getConversationPreferenceResponse();
	
	    public abstract ConversationRenameResponse getConversationRenameResponse();
	
	    public abstract NewConversationResponse getConversationResponse();
	
	    public abstract ConversationSearchResponse getConversationSearchResponse();
	
	    public abstract DeviceRegistrationResponse getDeviceRegistrationResponse();
	
	    public abstract Error getError();
	
	    public abstract EventSearchResponse getEventSearchResponse();
	
	    public abstract EventStreamResponse getEventSteamResponse();
	
	    public abstract GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse();
	
	    public abstract HangoutInviteFinishResponse getHangoutInviteFinishResponse();
	
	    public abstract HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse();
	
	    public abstract HangoutInviteReplyResponse getHangoutInviteReplyResponse();
	
	    public abstract HangoutInviteResponse getHangoutInviteResponse();
	
	    public abstract HangoutRingFinishResponse getHangoutRingFinishResponse();
	
	    public abstract InviteResponse getInviteResponse();
	
	    public abstract LeaveConversationResponse getLeaveConversationResponse();
	
	    public abstract PingResponse getPingResponse();
	
	    public abstract PresenceResponse getPresenceResponse();
	
	    public abstract ReceiptResponse getReceiptResponse();
	
	    public abstract ReplyToInviteResponse getReplyToInviteResponse();
	
	    public abstract String getRequestClientId();
	
	    public abstract SetAclsResponse getSetAclsResponse();
	
	    public abstract SuggestionsResponse getSuggestionsResponse();
	
	    public abstract TileEventResponse getTileEventResponse();
	
	    public abstract TypingResponse getTypingResponse();
	
	    public abstract UserCreationResponse getUserCreationResponse();
	
	    public abstract UserInfoResponse getUserInfoResponse();
	
	    public abstract boolean hasChatMessageResponse();
	
	    public abstract boolean hasConversationJoinResponse();
	
	    public abstract boolean hasConversationListResponse();
	
	    public abstract boolean hasConversationPreferenceResponse();
	
	    public abstract boolean hasConversationRenameResponse();
	
	    public abstract boolean hasConversationResponse();
	
	    public abstract boolean hasConversationSearchResponse();
	
	    public abstract boolean hasDeviceRegistrationResponse();
	
	    public abstract boolean hasError();
	
	    public abstract boolean hasEventSearchResponse();
	
	    public abstract boolean hasEventSteamResponse();
	
	    public abstract boolean hasGlobalConversationPreferencesResponse();
	
	    public abstract boolean hasHangoutInviteFinishResponse();
	
	    public abstract boolean hasHangoutInviteKeepAliveResponse();
	
	    public abstract boolean hasHangoutInviteReplyResponse();
	
	    public abstract boolean hasHangoutInviteResponse();
	
	    public abstract boolean hasHangoutRingFinishResponse();
	
	    public abstract boolean hasInviteResponse();
	
	    public abstract boolean hasLeaveConversationResponse();
	
	    public abstract boolean hasPingResponse();
	
	    public abstract boolean hasPresenceResponse();
	
	    public abstract boolean hasReceiptResponse();
	
	    public abstract boolean hasReplyToInviteResponse();
	
	    public abstract boolean hasRequestClientId();
	
	    public abstract boolean hasSetAclsResponse();
	
	    public abstract boolean hasSuggestionsResponse();
	
	    public abstract boolean hasTileEventResponse();
	
	    public abstract boolean hasTypingResponse();
	
	    public abstract boolean hasUserCreationResponse();
	
	    public abstract boolean hasUserInfoResponse();
	}
	
	public static final class BunchServerResponse extends GeneratedMessageLite implements BunchServerResponseOrBuilder {

		private static final BunchServerResponse defaultInstance;
	    private int bitField0_;
	    private ChatMessageResponse chatMessageResponse_;
	    private ConversationJoinResponse conversationJoinResponse_;
	    private ConversationListResponse conversationListResponse_;
	    private ConversationPreferenceResponse conversationPreferenceResponse_;
	    private ConversationRenameResponse conversationRenameResponse_;
	    private NewConversationResponse conversationResponse_;
	    private ConversationSearchResponse conversationSearchResponse_;
	    private DeviceRegistrationResponse deviceRegistrationResponse_;
	    private Error error_;
	    private EventSearchResponse eventSearchResponse_;
	    private EventStreamResponse eventSteamResponse_;
	    private GlobalConversationPreferencesResponse globalConversationPreferencesResponse_;
	    private HangoutInviteFinishResponse hangoutInviteFinishResponse_;
	    private HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_;
	    private HangoutInviteReplyResponse hangoutInviteReplyResponse_;
	    private HangoutInviteResponse hangoutInviteResponse_;
	    private HangoutRingFinishResponse hangoutRingFinishResponse_;
	    private InviteResponse inviteResponse_;
	    private LeaveConversationResponse leaveConversationResponse_;
	    private byte memoizedIsInitialized;
	    private int memoizedSerializedSize;
	    private PingResponse pingResponse_;
	    private PresenceResponse presenceResponse_;
	    private ReceiptResponse receiptResponse_;
	    private ReplyToInviteResponse replyToInviteResponse_;
	    private Object requestClientId_;
	    private SetAclsResponse setAclsResponse_;
	    private SuggestionsResponse suggestionsResponse_;
	    private TileEventResponse tileEventResponse_;
	    private TypingResponse typingResponse_;
	    private UserCreationResponse userCreationResponse_;
	    private UserInfoResponse userInfoResponse_;
	
	    static 
	    {
	        BunchServerResponse bunchserverresponse = new BunchServerResponse();
	        defaultInstance = bunchserverresponse;
	        bunchserverresponse.requestClientId_ = "";
	        bunchserverresponse.chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	        bunchserverresponse.presenceResponse_ = PresenceResponse.getDefaultInstance();
	        bunchserverresponse.typingResponse_ = TypingResponse.getDefaultInstance();
	        bunchserverresponse.receiptResponse_ = ReceiptResponse.getDefaultInstance();
	        bunchserverresponse.conversationResponse_ = NewConversationResponse.getDefaultInstance();
	        bunchserverresponse.eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	        bunchserverresponse.deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	        bunchserverresponse.pingResponse_ = PingResponse.getDefaultInstance();
	        bunchserverresponse.conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	        bunchserverresponse.userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	        bunchserverresponse.error_ = Error.getDefaultInstance();
	        bunchserverresponse.leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	        bunchserverresponse.conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	        bunchserverresponse.tileEventResponse_ = TileEventResponse.getDefaultInstance();
	        bunchserverresponse.conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	        bunchserverresponse.inviteResponse_ = InviteResponse.getDefaultInstance();
	        bunchserverresponse.replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	        bunchserverresponse.setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	        bunchserverresponse.userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	        bunchserverresponse.conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	        bunchserverresponse.eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	        bunchserverresponse.suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	        bunchserverresponse.globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	        bunchserverresponse.conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	        bunchserverresponse.hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	        bunchserverresponse.hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	        bunchserverresponse.hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	        bunchserverresponse.hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	        bunchserverresponse.hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	    }
	
	    private BunchServerResponse()
	    {
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    BunchServerResponse(Builder builder)
	    {
	        super();
	        memoizedIsInitialized = -1;
	        memoizedSerializedSize = -1;
	    }
	
	    public static BunchServerResponse getDefaultInstance()
	    {
	        return defaultInstance;
	    }
	
	    private ByteString getRequestClientIdBytes()
	    {
	        Object obj = requestClientId_;
	        ByteString bytestring;
	        if(obj instanceof String)
	        {
	            bytestring = ByteString.copyFromUtf8((String)obj);
	            requestClientId_ = bytestring;
	        } else
	        {
	            bytestring = (ByteString)obj;
	        }
	        return bytestring;
	    }
	
	    public static Builder newBuilder()
	    {
	        return new Builder();
	    }
	
	    public final ChatMessageResponse getChatMessageResponse()
	    {
	        return chatMessageResponse_;
	    }
	
	    public final ConversationJoinResponse getConversationJoinResponse()
	    {
	        return conversationJoinResponse_;
	    }
	
	    public final ConversationListResponse getConversationListResponse()
	    {
	        return conversationListResponse_;
	    }
	
	    public final ConversationPreferenceResponse getConversationPreferenceResponse()
	    {
	        return conversationPreferenceResponse_;
	    }
	
	    public final ConversationRenameResponse getConversationRenameResponse()
	    {
	        return conversationRenameResponse_;
	    }
	
	    public final NewConversationResponse getConversationResponse()
	    {
	        return conversationResponse_;
	    }
	
	    public final ConversationSearchResponse getConversationSearchResponse()
	    {
	        return conversationSearchResponse_;
	    }
	
	    public final BunchServerResponse getDefaultInstanceForType()
	    {
	        return defaultInstance;
	    }
	
	    public final DeviceRegistrationResponse getDeviceRegistrationResponse()
	    {
	        return deviceRegistrationResponse_;
	    }
	
	    public final Error getError()
	    {
	        return error_;
	    }
	
	    public final EventSearchResponse getEventSearchResponse()
	    {
	        return eventSearchResponse_;
	    }
	
	    public final EventStreamResponse getEventSteamResponse()
	    {
	        return eventSteamResponse_;
	    }
	
	    public final GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
	    {
	        return globalConversationPreferencesResponse_;
	    }
	
	    public final HangoutInviteFinishResponse getHangoutInviteFinishResponse()
	    {
	        return hangoutInviteFinishResponse_;
	    }
	
	    public final HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
	    {
	        return hangoutInviteKeepAliveResponse_;
	    }
	
	    public final HangoutInviteReplyResponse getHangoutInviteReplyResponse()
	    {
	        return hangoutInviteReplyResponse_;
	    }
	
	    public final HangoutInviteResponse getHangoutInviteResponse()
	    {
	        return hangoutInviteResponse_;
	    }
	
	    public final HangoutRingFinishResponse getHangoutRingFinishResponse()
	    {
	        return hangoutRingFinishResponse_;
	    }
	
	    public final InviteResponse getInviteResponse()
	    {
	        return inviteResponse_;
	    }
	
	    public final LeaveConversationResponse getLeaveConversationResponse()
	    {
	        return leaveConversationResponse_;
	    }
	
	    public final PingResponse getPingResponse()
	    {
	        return pingResponse_;
	    }
	
	    public final PresenceResponse getPresenceResponse()
	    {
	        return presenceResponse_;
	    }
	
	    public final ReceiptResponse getReceiptResponse()
	    {
	        return receiptResponse_;
	    }
	
	    public final ReplyToInviteResponse getReplyToInviteResponse()
	    {
	        return replyToInviteResponse_;
	    }
	
	    public final String getRequestClientId()
	    {
	        Object obj = requestClientId_;
	        String s1;
	        if(obj instanceof String)
	        {
	            s1 = (String)obj;
	        } else
	        {
	            ByteString bytestring = (ByteString)obj;
	            String s = bytestring.toStringUtf8();
	            if(Internal.isValidUtf8(bytestring))
	                requestClientId_ = s;
	            s1 = s;
	        }
	        return s1;
	    }
	
	    public final int getSerializedSize()
	    {
	        int i = memoizedSerializedSize;
	        int l;
	        if(i != -1)
	        {
	            l = i;
	        } else
	        {
	            int j = 1 & bitField0_;
	            int k = 0;
	            if(j == 1)
	                k = 0 + CodedOutputStream.computeBytesSize(1, getRequestClientIdBytes());
	            if((2 & bitField0_) == 2)
	                k += CodedOutputStream.computeMessageSize(2, chatMessageResponse_);
	            if((4 & bitField0_) == 4)
	                k += CodedOutputStream.computeMessageSize(3, presenceResponse_);
	            if((8 & bitField0_) == 8)
	                k += CodedOutputStream.computeMessageSize(4, typingResponse_);
	            if((0x10 & bitField0_) == 16)
	                k += CodedOutputStream.computeMessageSize(5, receiptResponse_);
	            if((0x20 & bitField0_) == 32)
	                k += CodedOutputStream.computeMessageSize(6, conversationResponse_);
	            if((0x40 & bitField0_) == 64)
	                k += CodedOutputStream.computeMessageSize(7, eventSteamResponse_);
	            if((0x80 & bitField0_) == 128)
	                k += CodedOutputStream.computeMessageSize(8, deviceRegistrationResponse_);
	            if((0x100 & bitField0_) == 256)
	                k += CodedOutputStream.computeMessageSize(9, pingResponse_);
	            if((0x200 & bitField0_) == 512)
	                k += CodedOutputStream.computeMessageSize(10, conversationListResponse_);
	            if((0x400 & bitField0_) == 1024)
	                k += CodedOutputStream.computeMessageSize(11, userCreationResponse_);
	            if((0x800 & bitField0_) == 2048)
	                k += CodedOutputStream.computeMessageSize(12, error_);
	            if((0x1000 & bitField0_) == 4096)
	                k += CodedOutputStream.computeMessageSize(13, leaveConversationResponse_);
	            if((0x2000 & bitField0_) == 8192)
	                k += CodedOutputStream.computeMessageSize(14, conversationRenameResponse_);
	            if((0x4000 & bitField0_) == 16384)
	                k += CodedOutputStream.computeMessageSize(15, tileEventResponse_);
	            if((0x8000 & bitField0_) == 32768)
	                k += CodedOutputStream.computeMessageSize(16, conversationPreferenceResponse_);
	            if((0x10000 & bitField0_) == 0x10000)
	                k += CodedOutputStream.computeMessageSize(17, inviteResponse_);
	            if((0x20000 & bitField0_) == 0x20000)
	                k += CodedOutputStream.computeMessageSize(18, replyToInviteResponse_);
	            if((0x40000 & bitField0_) == 0x40000)
	                k += CodedOutputStream.computeMessageSize(19, setAclsResponse_);
	            if((0x80000 & bitField0_) == 0x80000)
	                k += CodedOutputStream.computeMessageSize(20, userInfoResponse_);
	            if((0x100000 & bitField0_) == 0x100000)
	                k += CodedOutputStream.computeMessageSize(21, conversationSearchResponse_);
	            if((0x200000 & bitField0_) == 0x200000)
	                k += CodedOutputStream.computeMessageSize(22, eventSearchResponse_);
	            if((0x400000 & bitField0_) == 0x400000)
	                k += CodedOutputStream.computeMessageSize(23, suggestionsResponse_);
	            if((0x800000 & bitField0_) == 0x800000)
	                k += CodedOutputStream.computeMessageSize(24, globalConversationPreferencesResponse_);
	            if((0x1000000 & bitField0_) == 0x1000000)
	                k += CodedOutputStream.computeMessageSize(25, conversationJoinResponse_);
	            if((0x2000000 & bitField0_) == 0x2000000)
	                k += CodedOutputStream.computeMessageSize(26, hangoutInviteResponse_);
	            if((0x4000000 & bitField0_) == 0x4000000)
	                k += CodedOutputStream.computeMessageSize(27, hangoutInviteKeepAliveResponse_);
	            if((0x8000000 & bitField0_) == 0x8000000)
	                k += CodedOutputStream.computeMessageSize(28, hangoutInviteReplyResponse_);
	            if((0x10000000 & bitField0_) == 0x10000000)
	                k += CodedOutputStream.computeMessageSize(29, hangoutInviteFinishResponse_);
	            if((0x20000000 & bitField0_) == 0x20000000)
	                k += CodedOutputStream.computeMessageSize(30, hangoutRingFinishResponse_);
	            memoizedSerializedSize = k;
	            l = k;
	        }
	        return l;
	    }
	
	    public final SetAclsResponse getSetAclsResponse()
	    {
	        return setAclsResponse_;
	    }
	
	    public final SuggestionsResponse getSuggestionsResponse()
	    {
	        return suggestionsResponse_;
	    }
	
	    public final TileEventResponse getTileEventResponse()
	    {
	        return tileEventResponse_;
	    }
	
	    public final TypingResponse getTypingResponse()
	    {
	        return typingResponse_;
	    }
	
	    public final UserCreationResponse getUserCreationResponse()
	    {
	        return userCreationResponse_;
	    }
	
	    public final UserInfoResponse getUserInfoResponse()
	    {
	        return userInfoResponse_;
	    }
	
	    public final boolean hasChatMessageResponse()
	    {
	        boolean flag;
	        if((2 & bitField0_) == 2)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationJoinResponse()
	    {
	        boolean flag;
	        if((0x1000000 & bitField0_) == 0x1000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationListResponse()
	    {
	        boolean flag;
	        if((0x200 & bitField0_) == 512)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationPreferenceResponse()
	    {
	        boolean flag;
	        if((0x8000 & bitField0_) == 32768)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationRenameResponse()
	    {
	        boolean flag;
	        if((0x2000 & bitField0_) == 8192)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationResponse()
	    {
	        boolean flag;
	        if((0x20 & bitField0_) == 32)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasConversationSearchResponse()
	    {
	        boolean flag;
	        if((0x100000 & bitField0_) == 0x100000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasDeviceRegistrationResponse()
	    {
	        boolean flag;
	        if((0x80 & bitField0_) == 128)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasError()
	    {
	        boolean flag;
	        if((0x800 & bitField0_) == 2048)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventSearchResponse()
	    {
	        boolean flag;
	        if((0x200000 & bitField0_) == 0x200000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasEventSteamResponse()
	    {
	        boolean flag;
	        if((0x40 & bitField0_) == 64)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasGlobalConversationPreferencesResponse()
	    {
	        boolean flag;
	        if((0x800000 & bitField0_) == 0x800000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteFinishResponse()
	    {
	        boolean flag;
	        if((0x10000000 & bitField0_) == 0x10000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteKeepAliveResponse()
	    {
	        boolean flag;
	        if((0x4000000 & bitField0_) == 0x4000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteReplyResponse()
	    {
	        boolean flag;
	        if((0x8000000 & bitField0_) == 0x8000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutInviteResponse()
	    {
	        boolean flag;
	        if((0x2000000 & bitField0_) == 0x2000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasHangoutRingFinishResponse()
	    {
	        boolean flag;
	        if((0x20000000 & bitField0_) == 0x20000000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasInviteResponse()
	    {
	        boolean flag;
	        if((0x10000 & bitField0_) == 0x10000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasLeaveConversationResponse()
	    {
	        boolean flag;
	        if((0x1000 & bitField0_) == 4096)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPingResponse()
	    {
	        boolean flag;
	        if((0x100 & bitField0_) == 256)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasPresenceResponse()
	    {
	        boolean flag;
	        if((4 & bitField0_) == 4)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReceiptResponse()
	    {
	        boolean flag;
	        if((0x10 & bitField0_) == 16)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasReplyToInviteResponse()
	    {
	        boolean flag;
	        if((0x20000 & bitField0_) == 0x20000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasRequestClientId()
	    {
	        boolean flag = true;
	        if((1 & bitField0_) != 1)
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSetAclsResponse()
	    {
	        boolean flag;
	        if((0x40000 & bitField0_) == 0x40000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasSuggestionsResponse()
	    {
	        boolean flag;
	        if((0x400000 & bitField0_) == 0x400000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTileEventResponse()
	    {
	        boolean flag;
	        if((0x4000 & bitField0_) == 16384)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasTypingResponse()
	    {
	        boolean flag;
	        if((8 & bitField0_) == 8)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUserCreationResponse()
	    {
	        boolean flag;
	        if((0x400 & bitField0_) == 1024)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean hasUserInfoResponse()
	    {
	        boolean flag;
	        if((0x80000 & bitField0_) == 0x80000)
	            flag = true;
	        else
	            flag = false;
	        return flag;
	    }
	
	    public final boolean isInitialized()
	    {
	        boolean flag = true;
	        byte byte0 = memoizedIsInitialized;
	        if(byte0 != -1)
	        {
	            if(byte0 != 1)
	                flag = false;
	        } else
	        {
	            memoizedIsInitialized = 1;
	        }
	        return flag;
	    }
	
	    public final com.google.protobuf.MessageLite.Builder newBuilderForType()
	    {
	        return new Builder();
	    }
	
	    public final com.google.protobuf.MessageLite.Builder toBuilder()
	    {
	        return new Builder().mergeFrom(this);
	    }
	
	    protected final Object writeReplace()
	        throws ObjectStreamException
	    {
	        return super.writeReplace();
	    }
	
	    public final void writeTo(CodedOutputStream codedoutputstream)
	        throws IOException
	    {
	        getSerializedSize();
	        if((1 & bitField0_) == 1)
	            codedoutputstream.writeBytes(1, getRequestClientIdBytes());
	        if((2 & bitField0_) == 2)
	            codedoutputstream.writeMessage(2, chatMessageResponse_);
	        if((4 & bitField0_) == 4)
	            codedoutputstream.writeMessage(3, presenceResponse_);
	        if((8 & bitField0_) == 8)
	            codedoutputstream.writeMessage(4, typingResponse_);
	        if((0x10 & bitField0_) == 16)
	            codedoutputstream.writeMessage(5, receiptResponse_);
	        if((0x20 & bitField0_) == 32)
	            codedoutputstream.writeMessage(6, conversationResponse_);
	        if((0x40 & bitField0_) == 64)
	            codedoutputstream.writeMessage(7, eventSteamResponse_);
	        if((0x80 & bitField0_) == 128)
	            codedoutputstream.writeMessage(8, deviceRegistrationResponse_);
	        if((0x100 & bitField0_) == 256)
	            codedoutputstream.writeMessage(9, pingResponse_);
	        if((0x200 & bitField0_) == 512)
	            codedoutputstream.writeMessage(10, conversationListResponse_);
	        if((0x400 & bitField0_) == 1024)
	            codedoutputstream.writeMessage(11, userCreationResponse_);
	        if((0x800 & bitField0_) == 2048)
	            codedoutputstream.writeMessage(12, error_);
	        if((0x1000 & bitField0_) == 4096)
	            codedoutputstream.writeMessage(13, leaveConversationResponse_);
	        if((0x2000 & bitField0_) == 8192)
	            codedoutputstream.writeMessage(14, conversationRenameResponse_);
	        if((0x4000 & bitField0_) == 16384)
	            codedoutputstream.writeMessage(15, tileEventResponse_);
	        if((0x8000 & bitField0_) == 32768)
	            codedoutputstream.writeMessage(16, conversationPreferenceResponse_);
	        if((0x10000 & bitField0_) == 0x10000)
	            codedoutputstream.writeMessage(17, inviteResponse_);
	        if((0x20000 & bitField0_) == 0x20000)
	            codedoutputstream.writeMessage(18, replyToInviteResponse_);
	        if((0x40000 & bitField0_) == 0x40000)
	            codedoutputstream.writeMessage(19, setAclsResponse_);
	        if((0x80000 & bitField0_) == 0x80000)
	            codedoutputstream.writeMessage(20, userInfoResponse_);
	        if((0x100000 & bitField0_) == 0x100000)
	            codedoutputstream.writeMessage(21, conversationSearchResponse_);
	        if((0x200000 & bitField0_) == 0x200000)
	            codedoutputstream.writeMessage(22, eventSearchResponse_);
	        if((0x400000 & bitField0_) == 0x400000)
	            codedoutputstream.writeMessage(23, suggestionsResponse_);
	        if((0x800000 & bitField0_) == 0x800000)
	            codedoutputstream.writeMessage(24, globalConversationPreferencesResponse_);
	        if((0x1000000 & bitField0_) == 0x1000000)
	            codedoutputstream.writeMessage(25, conversationJoinResponse_);
	        if((0x2000000 & bitField0_) == 0x2000000)
	            codedoutputstream.writeMessage(26, hangoutInviteResponse_);
	        if((0x4000000 & bitField0_) == 0x4000000)
	            codedoutputstream.writeMessage(27, hangoutInviteKeepAliveResponse_);
	        if((0x8000000 & bitField0_) == 0x8000000)
	            codedoutputstream.writeMessage(28, hangoutInviteReplyResponse_);
	        if((0x10000000 & bitField0_) == 0x10000000)
	            codedoutputstream.writeMessage(29, hangoutInviteFinishResponse_);
	        if((0x20000000 & bitField0_) == 0x20000000)
	            codedoutputstream.writeMessage(30, hangoutRingFinishResponse_);
	    }
	    
	    //============================================================================
	    //								Builder
	    //============================================================================
	    public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder implements BunchServerResponseOrBuilder {
	    	
	    	private int bitField0_;
	        private ChatMessageResponse chatMessageResponse_;
	        private ConversationJoinResponse conversationJoinResponse_;
	        private ConversationListResponse conversationListResponse_;
	        private ConversationPreferenceResponse conversationPreferenceResponse_;
	        private ConversationRenameResponse conversationRenameResponse_;
	        private NewConversationResponse conversationResponse_;
	        private ConversationSearchResponse conversationSearchResponse_;
	        private DeviceRegistrationResponse deviceRegistrationResponse_;
	        private Error error_;
	        private EventSearchResponse eventSearchResponse_;
	        private EventStreamResponse eventSteamResponse_;
	        private GlobalConversationPreferencesResponse globalConversationPreferencesResponse_;
	        private HangoutInviteFinishResponse hangoutInviteFinishResponse_;
	        private HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_;
	        private HangoutInviteReplyResponse hangoutInviteReplyResponse_;
	        private HangoutInviteResponse hangoutInviteResponse_;
	        private HangoutRingFinishResponse hangoutRingFinishResponse_;
	        private InviteResponse inviteResponse_;
	        private LeaveConversationResponse leaveConversationResponse_;
	        private PingResponse pingResponse_;
	        private PresenceResponse presenceResponse_;
	        private ReceiptResponse receiptResponse_;
	        private ReplyToInviteResponse replyToInviteResponse_;
	        private Object requestClientId_;
	        private SetAclsResponse setAclsResponse_;
	        private SuggestionsResponse suggestionsResponse_;
	        private TileEventResponse tileEventResponse_;
	        private TypingResponse typingResponse_;
	        private UserCreationResponse userCreationResponse_;
	        private UserInfoResponse userInfoResponse_;


	        private Builder()
	        {
	            requestClientId_ = "";
	            chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	            presenceResponse_ = PresenceResponse.getDefaultInstance();
	            typingResponse_ = TypingResponse.getDefaultInstance();
	            receiptResponse_ = ReceiptResponse.getDefaultInstance();
	            conversationResponse_ = NewConversationResponse.getDefaultInstance();
	            eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	            deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	            pingResponse_ = PingResponse.getDefaultInstance();
	            conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	            userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	            error_ = Error.getDefaultInstance();
	            leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	            conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	            tileEventResponse_ = TileEventResponse.getDefaultInstance();
	            conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	            inviteResponse_ = InviteResponse.getDefaultInstance();
	            replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	            setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	            userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	            conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	            eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	            suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	            globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	            conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	            hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	            hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	            hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	            hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	            hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	        }
	
	        public BunchServerResponse.Builder clone()
	        {
	            return (new BunchServerResponse.Builder()).mergeFrom(buildPartial());
	        }
	
	        public BunchServerResponse.Builder mergeFrom(CodedInputStream codedinputstream, ExtensionRegistryLite extensionregistrylite) throws IOException
	        {
	            do
	            {
	                int i = codedinputstream.readTag();
	                switch(i)
	                {
	                default:
	                    if(parseUnknownField(codedinputstream, extensionregistrylite, i))
	                        continue;
	                    // fall through
	
	                case 0: // '\0'
	                    return this;
	
	                case 10: // '\n'
	                    bitField0_ = 1 | bitField0_;
	                    requestClientId_ = codedinputstream.readBytes();
	                    break;
	
	                case 18: // '\022'
	                    ChatMessageResponse.Builder builder28 = ChatMessageResponse.newBuilder();
	                    if(hasChatMessageResponse())
	                        builder28.mergeFrom(getChatMessageResponse());
	                    codedinputstream.readMessage(builder28, extensionregistrylite);
	                    setChatMessageResponse(builder28.buildPartial());
	                    break;
	
	                case 26: // '\032'
	                    PresenceResponse.Builder builder27 = PresenceResponse.newBuilder();
	                    if(hasPresenceResponse())
	                        builder27.mergeFrom(getPresenceResponse());
	                    codedinputstream.readMessage(builder27, extensionregistrylite);
	                    setPresenceResponse(builder27.buildPartial());
	                    break;
	
	                case 34: // '"'
	                    TypingResponse.Builder builder26 = TypingResponse.newBuilder();
	                    if(hasTypingResponse())
	                        builder26.mergeFrom(getTypingResponse());
	                    codedinputstream.readMessage(builder26, extensionregistrylite);
	                    setTypingResponse(builder26.buildPartial());
	                    break;
	
	                case 42: // '*'
	                    ReceiptResponse.Builder builder25 = ReceiptResponse.newBuilder();
	                    if(hasReceiptResponse())
	                        builder25.mergeFrom(getReceiptResponse());
	                    codedinputstream.readMessage(builder25, extensionregistrylite);
	                    setReceiptResponse(builder25.buildPartial());
	                    break;
	
	                case 50: // '2'
	                    NewConversationResponse.Builder builder24 = NewConversationResponse.newBuilder();
	                    if(hasConversationResponse())
	                        builder24.mergeFrom(getConversationResponse());
	                    codedinputstream.readMessage(builder24, extensionregistrylite);
	                    setConversationResponse(builder24.buildPartial());
	                    break;
	
	                case 58: // ':'
	                    EventStreamResponse.Builder builder23 = EventStreamResponse.newBuilder();
	                    if(hasEventSteamResponse())
	                        builder23.mergeFrom(getEventSteamResponse());
	                    codedinputstream.readMessage(builder23, extensionregistrylite);
	                    setEventSteamResponse(builder23.buildPartial());
	                    break;
	
	                case 66: // 'B'
	                    DeviceRegistrationResponse.Builder builder22 = DeviceRegistrationResponse.newBuilder();
	                    if(hasDeviceRegistrationResponse())
	                        builder22.mergeFrom(getDeviceRegistrationResponse());
	                    codedinputstream.readMessage(builder22, extensionregistrylite);
	                    setDeviceRegistrationResponse(builder22.buildPartial());
	                    break;
	
	                case 74: // 'J'
	                    PingResponse.Builder builder21 = PingResponse.newBuilder();
	                    if(hasPingResponse())
	                        builder21.mergeFrom(getPingResponse());
	                    codedinputstream.readMessage(builder21, extensionregistrylite);
	                    setPingResponse(builder21.buildPartial());
	                    break;
	
	                case 82: // 'R'
	                    ConversationListResponse.Builder builder20 = ConversationListResponse.newBuilder();
	                    if(hasConversationListResponse())
	                        builder20.mergeFrom(getConversationListResponse());
	                    codedinputstream.readMessage(builder20, extensionregistrylite);
	                    setConversationListResponse(builder20.buildPartial());
	                    break;
	
	                case 90: // 'Z'
	                    UserCreationResponse.Builder builder19 = UserCreationResponse.newBuilder();
	                    if(hasUserCreationResponse())
	                        builder19.mergeFrom(getUserCreationResponse());
	                    codedinputstream.readMessage(builder19, extensionregistrylite);
	                    setUserCreationResponse(builder19.buildPartial());
	                    break;
	
	                case 98: // 'b'
	                    Error.Builder builder18 = Error.newBuilder();
	                    if(hasError())
	                        builder18.mergeFrom(getError());
	                    codedinputstream.readMessage(builder18, extensionregistrylite);
	                    setError(builder18.buildPartial());
	                    break;
	
	                case 106: // 'j'
	                    LeaveConversationResponse.Builder builder17 = LeaveConversationResponse.newBuilder();
	                    if(hasLeaveConversationResponse())
	                        builder17.mergeFrom(getLeaveConversationResponse());
	                    codedinputstream.readMessage(builder17, extensionregistrylite);
	                    setLeaveConversationResponse(builder17.buildPartial());
	                    break;
	
	                case 114: // 'r'
	                    ConversationRenameResponse.Builder builder16 = ConversationRenameResponse.newBuilder();
	                    if(hasConversationRenameResponse())
	                        builder16.mergeFrom(getConversationRenameResponse());
	                    codedinputstream.readMessage(builder16, extensionregistrylite);
	                    setConversationRenameResponse(builder16.buildPartial());
	                    break;
	
	                case 122: // 'z'
	                    TileEventResponse.Builder builder15 = TileEventResponse.newBuilder();
	                    if(hasTileEventResponse())
	                        builder15.mergeFrom(getTileEventResponse());
	                    codedinputstream.readMessage(builder15, extensionregistrylite);
	                    setTileEventResponse(builder15.buildPartial());
	                    break;
	
	                case 130: 
	                    ConversationPreferenceResponse.Builder builder14 = ConversationPreferenceResponse.newBuilder();
	                    if(hasConversationPreferenceResponse())
	                        builder14.mergeFrom(getConversationPreferenceResponse());
	                    codedinputstream.readMessage(builder14, extensionregistrylite);
	                    setConversationPreferenceResponse(builder14.buildPartial());
	                    break;
	
	                case 138: 
	                    InviteResponse.Builder builder13 = InviteResponse.newBuilder();
	                    if(hasInviteResponse())
	                        builder13.mergeFrom(getInviteResponse());
	                    codedinputstream.readMessage(builder13, extensionregistrylite);
	                    setInviteResponse(builder13.buildPartial());
	                    break;
	
	                case 146: 
	                    ReplyToInviteResponse.Builder builder12 = ReplyToInviteResponse.newBuilder();
	                    if(hasReplyToInviteResponse())
	                        builder12.mergeFrom(getReplyToInviteResponse());
	                    codedinputstream.readMessage(builder12, extensionregistrylite);
	                    setReplyToInviteResponse(builder12.buildPartial());
	                    break;
	
	                case 154: 
	                    SetAclsResponse.Builder builder11 = SetAclsResponse.newBuilder();
	                    if(hasSetAclsResponse())
	                        builder11.mergeFrom(getSetAclsResponse());
	                    codedinputstream.readMessage(builder11, extensionregistrylite);
	                    setSetAclsResponse(builder11.buildPartial());
	                    break;
	
	                case 162: 
	                    UserInfoResponse.Builder builder10 = UserInfoResponse.newBuilder();
	                    if(hasUserInfoResponse())
	                        builder10.mergeFrom(getUserInfoResponse());
	                    codedinputstream.readMessage(builder10, extensionregistrylite);
	                    setUserInfoResponse(builder10.buildPartial());
	                    break;
	
	                case 170: 
	                    ConversationSearchResponse.Builder builder9 = ConversationSearchResponse.newBuilder();
	                    if(hasConversationSearchResponse())
	                        builder9.mergeFrom(getConversationSearchResponse());
	                    codedinputstream.readMessage(builder9, extensionregistrylite);
	                    setConversationSearchResponse(builder9.buildPartial());
	                    break;
	
	                case 178: 
	                    EventSearchResponse.Builder builder8 = EventSearchResponse.newBuilder();
	                    if(hasEventSearchResponse())
	                        builder8.mergeFrom(getEventSearchResponse());
	                    codedinputstream.readMessage(builder8, extensionregistrylite);
	                    setEventSearchResponse(builder8.buildPartial());
	                    break;
	
	                case 186: 
	                    SuggestionsResponse.Builder builder7 = SuggestionsResponse.newBuilder();
	                    if(hasSuggestionsResponse())
	                        builder7.mergeFrom(getSuggestionsResponse());
	                    codedinputstream.readMessage(builder7, extensionregistrylite);
	                    setSuggestionsResponse(builder7.buildPartial());
	                    break;
	
	                case 194: 
	                    GlobalConversationPreferencesResponse.Builder builder6 = GlobalConversationPreferencesResponse.newBuilder();
	                    if(hasGlobalConversationPreferencesResponse())
	                        builder6.mergeFrom(getGlobalConversationPreferencesResponse());
	                    codedinputstream.readMessage(builder6, extensionregistrylite);
	                    setGlobalConversationPreferencesResponse(builder6.buildPartial());
	                    break;
	
	                case 202: 
	                    ConversationJoinResponse.Builder builder5 = ConversationJoinResponse.newBuilder();
	                    if(hasConversationJoinResponse())
	                        builder5.mergeFrom(getConversationJoinResponse());
	                    codedinputstream.readMessage(builder5, extensionregistrylite);
	                    setConversationJoinResponse(builder5.buildPartial());
	                    break;
	
	                case 210: 
	                    HangoutInviteResponse.Builder builder4 = HangoutInviteResponse.newBuilder();
	                    if(hasHangoutInviteResponse())
	                        builder4.mergeFrom(getHangoutInviteResponse());
	                    codedinputstream.readMessage(builder4, extensionregistrylite);
	                    setHangoutInviteResponse(builder4.buildPartial());
	                    break;
	
	                case 218: 
	                    HangoutInviteKeepAliveResponse.Builder builder3 = HangoutInviteKeepAliveResponse.newBuilder();
	                    if(hasHangoutInviteKeepAliveResponse())
	                        builder3.mergeFrom(getHangoutInviteKeepAliveResponse());
	                    codedinputstream.readMessage(builder3, extensionregistrylite);
	                    setHangoutInviteKeepAliveResponse(builder3.buildPartial());
	                    break;
	
	                case 226: 
	                    HangoutInviteReplyResponse.Builder builder2 = HangoutInviteReplyResponse.newBuilder();
	                    if(hasHangoutInviteReplyResponse())
	                        builder2.mergeFrom(getHangoutInviteReplyResponse());
	                    codedinputstream.readMessage(builder2, extensionregistrylite);
	                    setHangoutInviteReplyResponse(builder2.buildPartial());
	                    break;
	
	                case 234: 
	                    HangoutInviteFinishResponse.Builder builder1 = HangoutInviteFinishResponse.newBuilder();
	                    if(hasHangoutInviteFinishResponse())
	                        builder1.mergeFrom(getHangoutInviteFinishResponse());
	                    codedinputstream.readMessage(builder1, extensionregistrylite);
	                    setHangoutInviteFinishResponse(builder1.buildPartial());
	                    break;
	
	                case 242: 
	                    HangoutRingFinishResponse.Builder builder = HangoutRingFinishResponse.newBuilder();
	                    if(hasHangoutRingFinishResponse())
	                        builder.mergeFrom(getHangoutRingFinishResponse());
	                    codedinputstream.readMessage(builder, extensionregistrylite);
	                    setHangoutRingFinishResponse(builder.buildPartial());
	                    break;
	                }
	            } while(true);
	        }
	
	        public final BunchServerResponse build()
	        {
	            BunchServerResponse bunchserverresponse = buildPartial();
	            if(!bunchserverresponse.isInitialized())
	                throw new UninitializedMessageException(Arrays.asList("bunchserverresponse"));
	            else
	                return bunchserverresponse;
	        }
	
	        public final BunchServerResponse buildPartial()
	        {
	            BunchServerResponse bunchserverresponse = new BunchServerResponse(this);
	            int i = bitField0_;
	            int j = i & 1;
	            int k = 0;
	            if(j == 1)
	                k = 1;
	            bunchserverresponse.requestClientId_ = requestClientId_;
	            if((i & 2) == 2)
	                k |= 2;
	            bunchserverresponse.chatMessageResponse_ = chatMessageResponse_;
	            if((i & 4) == 4)
	                k |= 4;
	            bunchserverresponse.presenceResponse_ = presenceResponse_;
	            if((i & 8) == 8)
	                k |= 8;
	            bunchserverresponse.typingResponse_ = typingResponse_;
	            if((i & 0x10) == 16)
	                k |= 0x10;
	            bunchserverresponse.receiptResponse_ = receiptResponse_;
	            if((i & 0x20) == 32)
	                k |= 0x20;
	            bunchserverresponse.conversationResponse_ = conversationResponse_;
	            if((i & 0x40) == 64)
	                k |= 0x40;
	            bunchserverresponse.eventSteamResponse_ = eventSteamResponse_;
	            if((i & 0x80) == 128)
	                k |= 0x80;
	            bunchserverresponse.deviceRegistrationResponse_ = deviceRegistrationResponse_;
	            if((i & 0x100) == 256)
	                k |= 0x100;
	            bunchserverresponse.pingResponse_ = pingResponse_;
	            if((i & 0x200) == 512)
	                k |= 0x200;
	            bunchserverresponse.conversationListResponse_ = conversationListResponse_;
	            if((i & 0x400) == 1024)
	                k |= 0x400;
	            bunchserverresponse.userCreationResponse_ = userCreationResponse_;
	            if((i & 0x800) == 2048)
	                k |= 0x800;
	            bunchserverresponse.error_ = error_;
	            if((i & 0x1000) == 4096)
	                k |= 0x1000;
	            bunchserverresponse.leaveConversationResponse_ = leaveConversationResponse_;
	            if((i & 0x2000) == 8192)
	                k |= 0x2000;
	            bunchserverresponse.conversationRenameResponse_ = conversationRenameResponse_;
	            if((i & 0x4000) == 16384)
	                k |= 0x4000;
	            bunchserverresponse.tileEventResponse_ = tileEventResponse_;
	            if((i & 0x8000) == 32768)
	                k |= 0x8000;
	            bunchserverresponse.conversationPreferenceResponse_ = conversationPreferenceResponse_;
	            if((i & 0x10000) == 0x10000)
	                k |= 0x10000;
	            bunchserverresponse.inviteResponse_ = inviteResponse_;
	            if((i & 0x20000) == 0x20000)
	                k |= 0x20000;
	            bunchserverresponse.replyToInviteResponse_ = replyToInviteResponse_;
	            if((i & 0x40000) == 0x40000)
	                k |= 0x40000;
	            bunchserverresponse.setAclsResponse_ = setAclsResponse_;
	            if((i & 0x80000) == 0x80000)
	                k |= 0x80000;
	            bunchserverresponse.userInfoResponse_ = userInfoResponse_;
	            if((0x100000 & i) == 0x100000)
	                k |= 0x100000;
	            bunchserverresponse.conversationSearchResponse_ = conversationSearchResponse_;
	            if((0x200000 & i) == 0x200000)
	                k |= 0x200000;
	            bunchserverresponse.eventSearchResponse_ = eventSearchResponse_;
	            if((0x400000 & i) == 0x400000)
	                k |= 0x400000;
	            bunchserverresponse.suggestionsResponse_ = suggestionsResponse_;
	            if((0x800000 & i) == 0x800000)
	                k |= 0x800000;
	            bunchserverresponse.globalConversationPreferencesResponse_ = globalConversationPreferencesResponse_;
	            if((0x1000000 & i) == 0x1000000)
	                k |= 0x1000000;
	            bunchserverresponse.conversationJoinResponse_ = conversationJoinResponse_;
	            if((0x2000000 & i) == 0x2000000)
	                k |= 0x2000000;
	            bunchserverresponse.hangoutInviteResponse_ = hangoutInviteResponse_;
	            if((0x4000000 & i) == 0x4000000)
	                k |= 0x4000000;
	            bunchserverresponse.hangoutInviteKeepAliveResponse_ = hangoutInviteKeepAliveResponse_;
	            if((0x8000000 & i) == 0x8000000)
	                k |= 0x8000000;
	            bunchserverresponse.hangoutInviteReplyResponse_ = hangoutInviteReplyResponse_;
	            if((0x10000000 & i) == 0x10000000)
	                k |= 0x10000000;
	            bunchserverresponse.hangoutInviteFinishResponse_ = hangoutInviteFinishResponse_;
	            if((0x20000000 & i) == 0x20000000)
	                k |= 0x20000000;
	            bunchserverresponse.hangoutRingFinishResponse_ = hangoutRingFinishResponse_;
	            bunchserverresponse.bitField0_ = k;
	            return bunchserverresponse;
	        }
	
	        public final BunchServerResponse.Builder clear()
	        {
	            super.clear();
	            requestClientId_ = "";
	            bitField0_ = -2 & bitField0_;
	            chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            presenceResponse_ = PresenceResponse.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            typingResponse_ = TypingResponse.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            receiptResponse_ = ReceiptResponse.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            conversationResponse_ = NewConversationResponse.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            pingResponse_ = PingResponse.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            error_ = Error.getDefaultInstance();
	            bitField0_ = 0xfffff7ff & bitField0_;
	            leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	            bitField0_ = 0xffffdfff & bitField0_;
	            tileEventResponse_ = TileEventResponse.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            inviteResponse_ = InviteResponse.getDefaultInstance();
	            bitField0_ = 0xfffeffff & bitField0_;
	            replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	            bitField0_ = 0xfffbffff & bitField0_;
	            userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	            bitField0_ = 0xfff7ffff & bitField0_;
	            conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	            bitField0_ = 0xffefffff & bitField0_;
	            eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	            bitField0_ = 0xffdfffff & bitField0_;
	            suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	            bitField0_ = 0xffbfffff & bitField0_;
	            globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	            bitField0_ = 0xff7fffff & bitField0_;
	            conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	            bitField0_ = 0xfeffffff & bitField0_;
	            hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	            bitField0_ = 0xfdffffff & bitField0_;
	            hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	            bitField0_ = 0xfbffffff & bitField0_;
	            hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	            bitField0_ = 0xf7ffffff & bitField0_;
	            hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	            bitField0_ = 0xefffffff & bitField0_;
	            hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	            bitField0_ = 0xdfffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearChatMessageResponse()
	        {
	            chatMessageResponse_ = ChatMessageResponse.getDefaultInstance();
	            bitField0_ = -3 & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearConversationJoinResponse()
	        {
	            conversationJoinResponse_ = ConversationJoinResponse.getDefaultInstance();
	            bitField0_ = 0xfeffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearConversationListResponse()
	        {
	            conversationListResponse_ = ConversationListResponse.getDefaultInstance();
	            bitField0_ = 0xfffffdff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearConversationPreferenceResponse()
	        {
	            conversationPreferenceResponse_ = ConversationPreferenceResponse.getDefaultInstance();
	            bitField0_ = 0xffff7fff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearConversationRenameResponse()
	        {
	            conversationRenameResponse_ = ConversationRenameResponse.getDefaultInstance();
	            bitField0_ = 0xffffdfff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearConversationResponse()
	        {
	            conversationResponse_ = NewConversationResponse.getDefaultInstance();
	            bitField0_ = 0xffffffdf & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearConversationSearchResponse()
	        {
	            conversationSearchResponse_ = ConversationSearchResponse.getDefaultInstance();
	            bitField0_ = 0xffefffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearDeviceRegistrationResponse()
	        {
	            deviceRegistrationResponse_ = DeviceRegistrationResponse.getDefaultInstance();
	            bitField0_ = 0xffffff7f & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearError()
	        {
	            error_ = Error.getDefaultInstance();
	            bitField0_ = 0xfffff7ff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearEventSearchResponse()
	        {
	            eventSearchResponse_ = EventSearchResponse.getDefaultInstance();
	            bitField0_ = 0xffdfffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearEventSteamResponse()
	        {
	            eventSteamResponse_ = EventStreamResponse.getDefaultInstance();
	            bitField0_ = 0xffffffbf & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearGlobalConversationPreferencesResponse()
	        {
	            globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.getDefaultInstance();
	            bitField0_ = 0xff7fffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearHangoutInviteFinishResponse()
	        {
	            hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.getDefaultInstance();
	            bitField0_ = 0xefffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearHangoutInviteKeepAliveResponse()
	        {
	            hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.getDefaultInstance();
	            bitField0_ = 0xfbffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearHangoutInviteReplyResponse()
	        {
	            hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.getDefaultInstance();
	            bitField0_ = 0xf7ffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearHangoutInviteResponse()
	        {
	            hangoutInviteResponse_ = HangoutInviteResponse.getDefaultInstance();
	            bitField0_ = 0xfdffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearHangoutRingFinishResponse()
	        {
	            hangoutRingFinishResponse_ = HangoutRingFinishResponse.getDefaultInstance();
	            bitField0_ = 0xdfffffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearInviteResponse()
	        {
	            inviteResponse_ = InviteResponse.getDefaultInstance();
	            bitField0_ = 0xfffeffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearLeaveConversationResponse()
	        {
	            leaveConversationResponse_ = LeaveConversationResponse.getDefaultInstance();
	            bitField0_ = 0xffffefff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearPingResponse()
	        {
	            pingResponse_ = PingResponse.getDefaultInstance();
	            bitField0_ = 0xfffffeff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearPresenceResponse()
	        {
	            presenceResponse_ = PresenceResponse.getDefaultInstance();
	            bitField0_ = -5 & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearReceiptResponse()
	        {
	            receiptResponse_ = ReceiptResponse.getDefaultInstance();
	            bitField0_ = 0xffffffef & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearReplyToInviteResponse()
	        {
	            replyToInviteResponse_ = ReplyToInviteResponse.getDefaultInstance();
	            bitField0_ = 0xfffdffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearRequestClientId()
	        {
	            bitField0_ = -2 & bitField0_;
	            requestClientId_ = BunchServerResponse.getDefaultInstance().getRequestClientId();
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearSetAclsResponse()
	        {
	            setAclsResponse_ = SetAclsResponse.getDefaultInstance();
	            bitField0_ = 0xfffbffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearSuggestionsResponse()
	        {
	            suggestionsResponse_ = SuggestionsResponse.getDefaultInstance();
	            bitField0_ = 0xffbfffff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearTileEventResponse()
	        {
	            tileEventResponse_ = TileEventResponse.getDefaultInstance();
	            bitField0_ = 0xffffbfff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearTypingResponse()
	        {
	            typingResponse_ = TypingResponse.getDefaultInstance();
	            bitField0_ = -9 & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearUserCreationResponse()
	        {
	            userCreationResponse_ = UserCreationResponse.getDefaultInstance();
	            bitField0_ = 0xfffffbff & bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder clearUserInfoResponse()
	        {
	            userInfoResponse_ = UserInfoResponse.getDefaultInstance();
	            bitField0_ = 0xfff7ffff & bitField0_;
	            return this;
	        }
	
	        public final ChatMessageResponse getChatMessageResponse()
	        {
	            return chatMessageResponse_;
	        }
	
	        public final ConversationJoinResponse getConversationJoinResponse()
	        {
	            return conversationJoinResponse_;
	        }
	
	        public final ConversationListResponse getConversationListResponse()
	        {
	            return conversationListResponse_;
	        }
	
	        public final ConversationPreferenceResponse getConversationPreferenceResponse()
	        {
	            return conversationPreferenceResponse_;
	        }
	
	        public final ConversationRenameResponse getConversationRenameResponse()
	        {
	            return conversationRenameResponse_;
	        }
	
	        public final NewConversationResponse getConversationResponse()
	        {
	            return conversationResponse_;
	        }
	
	        public final ConversationSearchResponse getConversationSearchResponse()
	        {
	            return conversationSearchResponse_;
	        }
	
	        public final BunchServerResponse getDefaultInstanceForType()
	        {
	            return BunchServerResponse.getDefaultInstance();
	        }
	
	        public final DeviceRegistrationResponse getDeviceRegistrationResponse()
	        {
	            return deviceRegistrationResponse_;
	        }
	
	        public final Error getError()
	        {
	            return error_;
	        }
	
	        public final EventSearchResponse getEventSearchResponse()
	        {
	            return eventSearchResponse_;
	        }
	
	        public final EventStreamResponse getEventSteamResponse()
	        {
	            return eventSteamResponse_;
	        }
	
	        public final GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
	        {
	            return globalConversationPreferencesResponse_;
	        }
	
	        public final HangoutInviteFinishResponse getHangoutInviteFinishResponse()
	        {
	            return hangoutInviteFinishResponse_;
	        }
	
	        public final HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
	        {
	            return hangoutInviteKeepAliveResponse_;
	        }
	
	        public final HangoutInviteReplyResponse getHangoutInviteReplyResponse()
	        {
	            return hangoutInviteReplyResponse_;
	        }
	
	        public final HangoutInviteResponse getHangoutInviteResponse()
	        {
	            return hangoutInviteResponse_;
	        }
	
	        public final HangoutRingFinishResponse getHangoutRingFinishResponse()
	        {
	            return hangoutRingFinishResponse_;
	        }
	
	        public final InviteResponse getInviteResponse()
	        {
	            return inviteResponse_;
	        }
	
	        public final LeaveConversationResponse getLeaveConversationResponse()
	        {
	            return leaveConversationResponse_;
	        }
	
	        public final PingResponse getPingResponse()
	        {
	            return pingResponse_;
	        }
	
	        public final PresenceResponse getPresenceResponse()
	        {
	            return presenceResponse_;
	        }
	
	        public final ReceiptResponse getReceiptResponse()
	        {
	            return receiptResponse_;
	        }
	
	        public final ReplyToInviteResponse getReplyToInviteResponse()
	        {
	            return replyToInviteResponse_;
	        }
	
	        public final String getRequestClientId()
	        {
	            Object obj = requestClientId_;
	            String s;
	            if(!(obj instanceof String))
	            {
	                s = ((ByteString)obj).toStringUtf8();
	                requestClientId_ = s;
	            } else
	            {
	                s = (String)obj;
	            }
	            return s;
	        }
	
	        public final SetAclsResponse getSetAclsResponse()
	        {
	            return setAclsResponse_;
	        }
	
	        public final SuggestionsResponse getSuggestionsResponse()
	        {
	            return suggestionsResponse_;
	        }
	
	        public final TileEventResponse getTileEventResponse()
	        {
	            return tileEventResponse_;
	        }
	
	        public final TypingResponse getTypingResponse()
	        {
	            return typingResponse_;
	        }
	
	        public final UserCreationResponse getUserCreationResponse()
	        {
	            return userCreationResponse_;
	        }
	
	        public final UserInfoResponse getUserInfoResponse()
	        {
	            return userInfoResponse_;
	        }
	
	        public final boolean hasChatMessageResponse()
	        {
	            boolean flag;
	            if((2 & bitField0_) == 2)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationJoinResponse()
	        {
	            boolean flag;
	            if((0x1000000 & bitField0_) == 0x1000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationListResponse()
	        {
	            boolean flag;
	            if((0x200 & bitField0_) == 512)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationPreferenceResponse()
	        {
	            boolean flag;
	            if((0x8000 & bitField0_) == 32768)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationRenameResponse()
	        {
	            boolean flag;
	            if((0x2000 & bitField0_) == 8192)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationResponse()
	        {
	            boolean flag;
	            if((0x20 & bitField0_) == 32)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasConversationSearchResponse()
	        {
	            boolean flag;
	            if((0x100000 & bitField0_) == 0x100000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasDeviceRegistrationResponse()
	        {
	            boolean flag;
	            if((0x80 & bitField0_) == 128)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasError()
	        {
	            boolean flag;
	            if((0x800 & bitField0_) == 2048)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventSearchResponse()
	        {
	            boolean flag;
	            if((0x200000 & bitField0_) == 0x200000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasEventSteamResponse()
	        {
	            boolean flag;
	            if((0x40 & bitField0_) == 64)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasGlobalConversationPreferencesResponse()
	        {
	            boolean flag;
	            if((0x800000 & bitField0_) == 0x800000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteFinishResponse()
	        {
	            boolean flag;
	            if((0x10000000 & bitField0_) == 0x10000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteKeepAliveResponse()
	        {
	            boolean flag;
	            if((0x4000000 & bitField0_) == 0x4000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteReplyResponse()
	        {
	            boolean flag;
	            if((0x8000000 & bitField0_) == 0x8000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutInviteResponse()
	        {
	            boolean flag;
	            if((0x2000000 & bitField0_) == 0x2000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasHangoutRingFinishResponse()
	        {
	            boolean flag;
	            if((0x20000000 & bitField0_) == 0x20000000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasInviteResponse()
	        {
	            boolean flag;
	            if((0x10000 & bitField0_) == 0x10000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasLeaveConversationResponse()
	        {
	            boolean flag;
	            if((0x1000 & bitField0_) == 4096)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPingResponse()
	        {
	            boolean flag;
	            if((0x100 & bitField0_) == 256)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasPresenceResponse()
	        {
	            boolean flag;
	            if((4 & bitField0_) == 4)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReceiptResponse()
	        {
	            boolean flag;
	            if((0x10 & bitField0_) == 16)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasReplyToInviteResponse()
	        {
	            boolean flag;
	            if((0x20000 & bitField0_) == 0x20000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasRequestClientId()
	        {
	            boolean flag = true;
	            if((1 & bitField0_) != 1)
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSetAclsResponse()
	        {
	            boolean flag;
	            if((0x40000 & bitField0_) == 0x40000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasSuggestionsResponse()
	        {
	            boolean flag;
	            if((0x400000 & bitField0_) == 0x400000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTileEventResponse()
	        {
	            boolean flag;
	            if((0x4000 & bitField0_) == 16384)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasTypingResponse()
	        {
	            boolean flag;
	            if((8 & bitField0_) == 8)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserCreationResponse()
	        {
	            boolean flag;
	            if((0x400 & bitField0_) == 1024)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean hasUserInfoResponse()
	        {
	            boolean flag;
	            if((0x80000 & bitField0_) == 0x80000)
	                flag = true;
	            else
	                flag = false;
	            return flag;
	        }
	
	        public final boolean isInitialized()
	        {
	            return true;
	        }
	
	        public final com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(GeneratedMessageLite generatedmessagelite)
	        {
	            return mergeFrom((BunchServerResponse)generatedmessagelite);
	        }
	
	        public final BunchServerResponse.Builder mergeFrom(BunchServerResponse bunchserverresponse)
	        {
	            if(bunchserverresponse == BunchServerResponse.getDefaultInstance()) {
	            	return this;
	            }
	            
	            if(bunchserverresponse.hasRequestClientId())
	                setRequestClientId(bunchserverresponse.getRequestClientId());
	            if(bunchserverresponse.hasChatMessageResponse())
	            {
	                ChatMessageResponse chatmessageresponse = bunchserverresponse.getChatMessageResponse();
	                if((2 & bitField0_) == 2 && chatMessageResponse_ != ChatMessageResponse.getDefaultInstance())
	                    chatMessageResponse_ = ChatMessageResponse.newBuilder(chatMessageResponse_).mergeFrom(chatmessageresponse).buildPartial();
	                else
	                    chatMessageResponse_ = chatmessageresponse;
	                bitField0_ = 2 | bitField0_;
	            }
	            if(bunchserverresponse.hasPresenceResponse())
	            {
	                PresenceResponse presenceresponse = bunchserverresponse.getPresenceResponse();
	                if((4 & bitField0_) == 4 && presenceResponse_ != PresenceResponse.getDefaultInstance())
	                    presenceResponse_ = PresenceResponse.newBuilder(presenceResponse_).mergeFrom(presenceresponse).buildPartial();
	                else
	                    presenceResponse_ = presenceresponse;
	                bitField0_ = 4 | bitField0_;
	            }
	            if(bunchserverresponse.hasTypingResponse())
	            {
	                TypingResponse typingresponse = bunchserverresponse.getTypingResponse();
	                if((8 & bitField0_) == 8 && typingResponse_ != TypingResponse.getDefaultInstance())
	                    typingResponse_ = TypingResponse.newBuilder(typingResponse_).mergeFrom(typingresponse).buildPartial();
	                else
	                    typingResponse_ = typingresponse;
	                bitField0_ = 8 | bitField0_;
	            }
	            if(bunchserverresponse.hasReceiptResponse())
	            {
	                ReceiptResponse receiptresponse = bunchserverresponse.getReceiptResponse();
	                if((0x10 & bitField0_) == 16 && receiptResponse_ != ReceiptResponse.getDefaultInstance())
	                    receiptResponse_ = ReceiptResponse.newBuilder(receiptResponse_).mergeFrom(receiptresponse).buildPartial();
	                else
	                    receiptResponse_ = receiptresponse;
	                bitField0_ = 0x10 | bitField0_;
	            }
	            if(bunchserverresponse.hasConversationResponse())
	            {
	                NewConversationResponse newconversationresponse = bunchserverresponse.getConversationResponse();
	                if((0x20 & bitField0_) == 32 && conversationResponse_ != NewConversationResponse.getDefaultInstance())
	                    conversationResponse_ = NewConversationResponse.newBuilder(conversationResponse_).mergeFrom(newconversationresponse).buildPartial();
	                else
	                    conversationResponse_ = newconversationresponse;
	                bitField0_ = 0x20 | bitField0_;
	            }
	            if(bunchserverresponse.hasEventSteamResponse())
	            {
	                EventStreamResponse eventstreamresponse = bunchserverresponse.getEventSteamResponse();
	                if((0x40 & bitField0_) == 64 && eventSteamResponse_ != EventStreamResponse.getDefaultInstance())
	                    eventSteamResponse_ = EventStreamResponse.newBuilder(eventSteamResponse_).mergeFrom(eventstreamresponse).buildPartial();
	                else
	                    eventSteamResponse_ = eventstreamresponse;
	                bitField0_ = 0x40 | bitField0_;
	            }
	            if(bunchserverresponse.hasDeviceRegistrationResponse())
	            {
	                DeviceRegistrationResponse deviceregistrationresponse = bunchserverresponse.getDeviceRegistrationResponse();
	                if((0x80 & bitField0_) == 128 && deviceRegistrationResponse_ != DeviceRegistrationResponse.getDefaultInstance())
	                    deviceRegistrationResponse_ = DeviceRegistrationResponse.newBuilder(deviceRegistrationResponse_).mergeFrom(deviceregistrationresponse).buildPartial();
	                else
	                    deviceRegistrationResponse_ = deviceregistrationresponse;
	                bitField0_ = 0x80 | bitField0_;
	            }
	            if(bunchserverresponse.hasPingResponse())
	            {
	                PingResponse pingresponse = bunchserverresponse.getPingResponse();
	                if((0x100 & bitField0_) == 256 && pingResponse_ != PingResponse.getDefaultInstance())
	                    pingResponse_ = PingResponse.newBuilder(pingResponse_).mergeFrom(pingresponse).buildPartial();
	                else
	                    pingResponse_ = pingresponse;
	                bitField0_ = 0x100 | bitField0_;
	            }
	            if(bunchserverresponse.hasConversationListResponse())
	            {
	                ConversationListResponse conversationlistresponse = bunchserverresponse.getConversationListResponse();
	                if((0x200 & bitField0_) == 512 && conversationListResponse_ != ConversationListResponse.getDefaultInstance())
	                    conversationListResponse_ = ConversationListResponse.newBuilder(conversationListResponse_).mergeFrom(conversationlistresponse).buildPartial();
	                else
	                    conversationListResponse_ = conversationlistresponse;
	                bitField0_ = 0x200 | bitField0_;
	            }
	            if(bunchserverresponse.hasUserCreationResponse())
	            {
	                UserCreationResponse usercreationresponse = bunchserverresponse.getUserCreationResponse();
	                if((0x400 & bitField0_) == 1024 && userCreationResponse_ != UserCreationResponse.getDefaultInstance())
	                    userCreationResponse_ = UserCreationResponse.newBuilder(userCreationResponse_).mergeFrom(usercreationresponse).buildPartial();
	                else
	                    userCreationResponse_ = usercreationresponse;
	                bitField0_ = 0x400 | bitField0_;
	            }
	            if(bunchserverresponse.hasError())
	            {
	                Error error = bunchserverresponse.getError();
	                if((0x800 & bitField0_) == 2048 && error_ != Error.getDefaultInstance())
	                    error_ = Error.newBuilder(error_).mergeFrom(error).buildPartial();
	                else
	                    error_ = error;
	                bitField0_ = 0x800 | bitField0_;
	            }
	            if(bunchserverresponse.hasLeaveConversationResponse())
	            {
	                LeaveConversationResponse leaveconversationresponse = bunchserverresponse.getLeaveConversationResponse();
	                if((0x1000 & bitField0_) == 4096 && leaveConversationResponse_ != LeaveConversationResponse.getDefaultInstance())
	                    leaveConversationResponse_ = LeaveConversationResponse.newBuilder(leaveConversationResponse_).mergeFrom(leaveconversationresponse).buildPartial();
	                else
	                    leaveConversationResponse_ = leaveconversationresponse;
	                bitField0_ = 0x1000 | bitField0_;
	            }
	            if(bunchserverresponse.hasConversationRenameResponse())
	            {
	                ConversationRenameResponse conversationrenameresponse = bunchserverresponse.getConversationRenameResponse();
	                if((0x2000 & bitField0_) == 8192 && conversationRenameResponse_ != ConversationRenameResponse.getDefaultInstance())
	                    conversationRenameResponse_ = ConversationRenameResponse.newBuilder(conversationRenameResponse_).mergeFrom(conversationrenameresponse).buildPartial();
	                else
	                    conversationRenameResponse_ = conversationrenameresponse;
	                bitField0_ = 0x2000 | bitField0_;
	            }
	            if(bunchserverresponse.hasTileEventResponse())
	            {
	                TileEventResponse tileeventresponse = bunchserverresponse.getTileEventResponse();
	                if((0x4000 & bitField0_) == 16384 && tileEventResponse_ != TileEventResponse.getDefaultInstance())
	                    tileEventResponse_ = TileEventResponse.newBuilder(tileEventResponse_).mergeFrom(tileeventresponse).buildPartial();
	                else
	                    tileEventResponse_ = tileeventresponse;
	                bitField0_ = 0x4000 | bitField0_;
	            }
	            if(bunchserverresponse.hasConversationPreferenceResponse())
	            {
	                ConversationPreferenceResponse conversationpreferenceresponse = bunchserverresponse.getConversationPreferenceResponse();
	                if((0x8000 & bitField0_) == 32768 && conversationPreferenceResponse_ != ConversationPreferenceResponse.getDefaultInstance())
	                    conversationPreferenceResponse_ = ConversationPreferenceResponse.newBuilder(conversationPreferenceResponse_).mergeFrom(conversationpreferenceresponse).buildPartial();
	                else
	                    conversationPreferenceResponse_ = conversationpreferenceresponse;
	                bitField0_ = 0x8000 | bitField0_;
	            }
	            if(bunchserverresponse.hasInviteResponse())
	            {
	                InviteResponse inviteresponse = bunchserverresponse.getInviteResponse();
	                if((0x10000 & bitField0_) == 0x10000 && inviteResponse_ != InviteResponse.getDefaultInstance())
	                    inviteResponse_ = InviteResponse.newBuilder(inviteResponse_).mergeFrom(inviteresponse).buildPartial();
	                else
	                    inviteResponse_ = inviteresponse;
	                bitField0_ = 0x10000 | bitField0_;
	            }
	            if(bunchserverresponse.hasReplyToInviteResponse())
	            {
	                ReplyToInviteResponse replytoinviteresponse = bunchserverresponse.getReplyToInviteResponse();
	                if((0x20000 & bitField0_) == 0x20000 && replyToInviteResponse_ != ReplyToInviteResponse.getDefaultInstance())
	                    replyToInviteResponse_ = ReplyToInviteResponse.newBuilder(replyToInviteResponse_).mergeFrom(replytoinviteresponse).buildPartial();
	                else
	                    replyToInviteResponse_ = replytoinviteresponse;
	                bitField0_ = 0x20000 | bitField0_;
	            }
	            if(bunchserverresponse.hasSetAclsResponse())
	            {
	                SetAclsResponse setaclsresponse = bunchserverresponse.getSetAclsResponse();
	                if((0x40000 & bitField0_) == 0x40000 && setAclsResponse_ != SetAclsResponse.getDefaultInstance())
	                    setAclsResponse_ = SetAclsResponse.newBuilder(setAclsResponse_).mergeFrom(setaclsresponse).buildPartial();
	                else
	                    setAclsResponse_ = setaclsresponse;
	                bitField0_ = 0x40000 | bitField0_;
	            }
	            if(bunchserverresponse.hasUserInfoResponse())
	            {
	                UserInfoResponse userinforesponse = bunchserverresponse.getUserInfoResponse();
	                if((0x80000 & bitField0_) == 0x80000 && userInfoResponse_ != UserInfoResponse.getDefaultInstance())
	                    userInfoResponse_ = UserInfoResponse.newBuilder(userInfoResponse_).mergeFrom(userinforesponse).buildPartial();
	                else
	                    userInfoResponse_ = userinforesponse;
	                bitField0_ = 0x80000 | bitField0_;
	            }
	            if(bunchserverresponse.hasConversationSearchResponse())
	            {
	                ConversationSearchResponse conversationsearchresponse = bunchserverresponse.getConversationSearchResponse();
	                if((0x100000 & bitField0_) == 0x100000 && conversationSearchResponse_ != ConversationSearchResponse.getDefaultInstance())
	                    conversationSearchResponse_ = ConversationSearchResponse.newBuilder(conversationSearchResponse_).mergeFrom(conversationsearchresponse).buildPartial();
	                else
	                    conversationSearchResponse_ = conversationsearchresponse;
	                bitField0_ = 0x100000 | bitField0_;
	            }
	            if(bunchserverresponse.hasEventSearchResponse())
	            {
	                EventSearchResponse eventsearchresponse = bunchserverresponse.getEventSearchResponse();
	                if((0x200000 & bitField0_) == 0x200000 && eventSearchResponse_ != EventSearchResponse.getDefaultInstance())
	                    eventSearchResponse_ = EventSearchResponse.newBuilder(eventSearchResponse_).mergeFrom(eventsearchresponse).buildPartial();
	                else
	                    eventSearchResponse_ = eventsearchresponse;
	                bitField0_ = 0x200000 | bitField0_;
	            }
	            if(bunchserverresponse.hasSuggestionsResponse())
	            {
	                SuggestionsResponse suggestionsresponse = bunchserverresponse.getSuggestionsResponse();
	                if((0x400000 & bitField0_) == 0x400000 && suggestionsResponse_ != SuggestionsResponse.getDefaultInstance())
	                    suggestionsResponse_ = SuggestionsResponse.newBuilder(suggestionsResponse_).mergeFrom(suggestionsresponse).buildPartial();
	                else
	                    suggestionsResponse_ = suggestionsresponse;
	                bitField0_ = 0x400000 | bitField0_;
	            }
	            if(bunchserverresponse.hasGlobalConversationPreferencesResponse())
	            {
	                GlobalConversationPreferencesResponse globalconversationpreferencesresponse = bunchserverresponse.getGlobalConversationPreferencesResponse();
	                if((0x800000 & bitField0_) == 0x800000 && globalConversationPreferencesResponse_ != GlobalConversationPreferencesResponse.getDefaultInstance())
	                    globalConversationPreferencesResponse_ = GlobalConversationPreferencesResponse.newBuilder(globalConversationPreferencesResponse_).mergeFrom(globalconversationpreferencesresponse).buildPartial();
	                else
	                    globalConversationPreferencesResponse_ = globalconversationpreferencesresponse;
	                bitField0_ = 0x800000 | bitField0_;
	            }
	            if(bunchserverresponse.hasConversationJoinResponse())
	            {
	                ConversationJoinResponse conversationjoinresponse = bunchserverresponse.getConversationJoinResponse();
	                if((0x1000000 & bitField0_) == 0x1000000 && conversationJoinResponse_ != ConversationJoinResponse.getDefaultInstance())
	                    conversationJoinResponse_ = ConversationJoinResponse.newBuilder(conversationJoinResponse_).mergeFrom(conversationjoinresponse).buildPartial();
	                else
	                    conversationJoinResponse_ = conversationjoinresponse;
	                bitField0_ = 0x1000000 | bitField0_;
	            }
	            if(bunchserverresponse.hasHangoutInviteResponse())
	            {
	                HangoutInviteResponse hangoutinviteresponse = bunchserverresponse.getHangoutInviteResponse();
	                if((0x2000000 & bitField0_) == 0x2000000 && hangoutInviteResponse_ != HangoutInviteResponse.getDefaultInstance())
	                    hangoutInviteResponse_ = HangoutInviteResponse.newBuilder(hangoutInviteResponse_).mergeFrom(hangoutinviteresponse).buildPartial();
	                else
	                    hangoutInviteResponse_ = hangoutinviteresponse;
	                bitField0_ = 0x2000000 | bitField0_;
	            }
	            if(bunchserverresponse.hasHangoutInviteKeepAliveResponse())
	            {
	                HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse = bunchserverresponse.getHangoutInviteKeepAliveResponse();
	                if((0x4000000 & bitField0_) == 0x4000000 && hangoutInviteKeepAliveResponse_ != HangoutInviteKeepAliveResponse.getDefaultInstance())
	                    hangoutInviteKeepAliveResponse_ = HangoutInviteKeepAliveResponse.newBuilder(hangoutInviteKeepAliveResponse_).mergeFrom(hangoutinvitekeepaliveresponse).buildPartial();
	                else
	                    hangoutInviteKeepAliveResponse_ = hangoutinvitekeepaliveresponse;
	                bitField0_ = 0x4000000 | bitField0_;
	            }
	            if(bunchserverresponse.hasHangoutInviteReplyResponse())
	            {
	                HangoutInviteReplyResponse hangoutinvitereplyresponse = bunchserverresponse.getHangoutInviteReplyResponse();
	                if((0x8000000 & bitField0_) == 0x8000000 && hangoutInviteReplyResponse_ != HangoutInviteReplyResponse.getDefaultInstance())
	                    hangoutInviteReplyResponse_ = HangoutInviteReplyResponse.newBuilder(hangoutInviteReplyResponse_).mergeFrom(hangoutinvitereplyresponse).buildPartial();
	                else
	                    hangoutInviteReplyResponse_ = hangoutinvitereplyresponse;
	                bitField0_ = 0x8000000 | bitField0_;
	            }
	            if(bunchserverresponse.hasHangoutInviteFinishResponse())
	            {
	                HangoutInviteFinishResponse hangoutinvitefinishresponse = bunchserverresponse.getHangoutInviteFinishResponse();
	                if((0x10000000 & bitField0_) == 0x10000000 && hangoutInviteFinishResponse_ != HangoutInviteFinishResponse.getDefaultInstance())
	                    hangoutInviteFinishResponse_ = HangoutInviteFinishResponse.newBuilder(hangoutInviteFinishResponse_).mergeFrom(hangoutinvitefinishresponse).buildPartial();
	                else
	                    hangoutInviteFinishResponse_ = hangoutinvitefinishresponse;
	                bitField0_ = 0x10000000 | bitField0_;
	            }
	            if(bunchserverresponse.hasHangoutRingFinishResponse())
	            {
	                HangoutRingFinishResponse hangoutringfinishresponse = bunchserverresponse.getHangoutRingFinishResponse();
	                if((0x20000000 & bitField0_) == 0x20000000 && hangoutRingFinishResponse_ != HangoutRingFinishResponse.getDefaultInstance())
	                    hangoutRingFinishResponse_ = HangoutRingFinishResponse.newBuilder(hangoutRingFinishResponse_).mergeFrom(hangoutringfinishresponse).buildPartial();
	                else
	                    hangoutRingFinishResponse_ = hangoutringfinishresponse;
	                bitField0_ = 0x20000000 | bitField0_;
	            }
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setChatMessageResponse(ChatMessageResponse.Builder builder)
	        {
	            chatMessageResponse_ = builder.build();
	            bitField0_ = 2 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setChatMessageResponse(ChatMessageResponse chatmessageresponse)
	        {
	            if(chatmessageresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                chatMessageResponse_ = chatmessageresponse;
	                bitField0_ = 2 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setConversationJoinResponse(ConversationJoinResponse.Builder builder)
	        {
	            conversationJoinResponse_ = builder.build();
	            bitField0_ = 0x1000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setConversationJoinResponse(ConversationJoinResponse conversationjoinresponse)
	        {
	            if(conversationjoinresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationJoinResponse_ = conversationjoinresponse;
	                bitField0_ = 0x1000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setConversationListResponse(ConversationListResponse.Builder builder)
	        {
	            conversationListResponse_ = builder.build();
	            bitField0_ = 0x200 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setConversationListResponse(ConversationListResponse conversationlistresponse)
	        {
	            if(conversationlistresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationListResponse_ = conversationlistresponse;
	                bitField0_ = 0x200 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setConversationPreferenceResponse(ConversationPreferenceResponse.Builder builder)
	        {
	            conversationPreferenceResponse_ = builder.build();
	            bitField0_ = 0x8000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setConversationPreferenceResponse(ConversationPreferenceResponse conversationpreferenceresponse)
	        {
	            if(conversationpreferenceresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationPreferenceResponse_ = conversationpreferenceresponse;
	                bitField0_ = 0x8000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setConversationRenameResponse(ConversationRenameResponse.Builder builder)
	        {
	            conversationRenameResponse_ = builder.build();
	            bitField0_ = 0x2000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setConversationRenameResponse(ConversationRenameResponse conversationrenameresponse)
	        {
	            if(conversationrenameresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationRenameResponse_ = conversationrenameresponse;
	                bitField0_ = 0x2000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setConversationResponse(NewConversationResponse.Builder builder)
	        {
	            conversationResponse_ = builder.build();
	            bitField0_ = 0x20 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setConversationResponse(NewConversationResponse newconversationresponse)
	        {
	            if(newconversationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationResponse_ = newconversationresponse;
	                bitField0_ = 0x20 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setConversationSearchResponse(ConversationSearchResponse.Builder builder)
	        {
	            conversationSearchResponse_ = builder.build();
	            bitField0_ = 0x100000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setConversationSearchResponse(ConversationSearchResponse conversationsearchresponse)
	        {
	            if(conversationsearchresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                conversationSearchResponse_ = conversationsearchresponse;
	                bitField0_ = 0x100000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setDeviceRegistrationResponse(DeviceRegistrationResponse.Builder builder)
	        {
	            deviceRegistrationResponse_ = builder.build();
	            bitField0_ = 0x80 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setDeviceRegistrationResponse(DeviceRegistrationResponse deviceregistrationresponse)
	        {
	            if(deviceregistrationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                deviceRegistrationResponse_ = deviceregistrationresponse;
	                bitField0_ = 0x80 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setError(Error.Builder builder)
	        {
	            error_ = builder.build();
	            bitField0_ = 0x800 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setError(Error error)
	        {
	            if(error == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                error_ = error;
	                bitField0_ = 0x800 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setEventSearchResponse(EventSearchResponse.Builder builder)
	        {
	            eventSearchResponse_ = builder.build();
	            bitField0_ = 0x200000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setEventSearchResponse(EventSearchResponse eventsearchresponse)
	        {
	            if(eventsearchresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventSearchResponse_ = eventsearchresponse;
	                bitField0_ = 0x200000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setEventSteamResponse(EventStreamResponse.Builder builder)
	        {
	            eventSteamResponse_ = builder.build();
	            bitField0_ = 0x40 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setEventSteamResponse(EventStreamResponse eventstreamresponse)
	        {
	            if(eventstreamresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                eventSteamResponse_ = eventstreamresponse;
	                bitField0_ = 0x40 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setGlobalConversationPreferencesResponse(GlobalConversationPreferencesResponse.Builder builder)
	        {
	            globalConversationPreferencesResponse_ = builder.build();
	            bitField0_ = 0x800000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setGlobalConversationPreferencesResponse(GlobalConversationPreferencesResponse globalconversationpreferencesresponse)
	        {
	            if(globalconversationpreferencesresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                globalConversationPreferencesResponse_ = globalconversationpreferencesresponse;
	                bitField0_ = 0x800000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteFinishResponse(HangoutInviteFinishResponse.Builder builder)
	        {
	            hangoutInviteFinishResponse_ = builder.build();
	            bitField0_ = 0x10000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteFinishResponse(HangoutInviteFinishResponse hangoutinvitefinishresponse)
	        {
	            if(hangoutinvitefinishresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteFinishResponse_ = hangoutinvitefinishresponse;
	                bitField0_ = 0x10000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteKeepAliveResponse(HangoutInviteKeepAliveResponse.Builder builder)
	        {
	            hangoutInviteKeepAliveResponse_ = builder.build();
	            bitField0_ = 0x4000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteKeepAliveResponse(HangoutInviteKeepAliveResponse hangoutinvitekeepaliveresponse)
	        {
	            if(hangoutinvitekeepaliveresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteKeepAliveResponse_ = hangoutinvitekeepaliveresponse;
	                bitField0_ = 0x4000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteReplyResponse(HangoutInviteReplyResponse.Builder builder)
	        {
	            hangoutInviteReplyResponse_ = builder.build();
	            bitField0_ = 0x8000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteReplyResponse(HangoutInviteReplyResponse hangoutinvitereplyresponse)
	        {
	            if(hangoutinvitereplyresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteReplyResponse_ = hangoutinvitereplyresponse;
	                bitField0_ = 0x8000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteResponse(HangoutInviteResponse.Builder builder)
	        {
	            hangoutInviteResponse_ = builder.build();
	            bitField0_ = 0x2000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setHangoutInviteResponse(HangoutInviteResponse hangoutinviteresponse)
	        {
	            if(hangoutinviteresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutInviteResponse_ = hangoutinviteresponse;
	                bitField0_ = 0x2000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setHangoutRingFinishResponse(HangoutRingFinishResponse.Builder builder)
	        {
	            hangoutRingFinishResponse_ = builder.build();
	            bitField0_ = 0x20000000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setHangoutRingFinishResponse(HangoutRingFinishResponse hangoutringfinishresponse)
	        {
	            if(hangoutringfinishresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                hangoutRingFinishResponse_ = hangoutringfinishresponse;
	                bitField0_ = 0x20000000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setInviteResponse(InviteResponse.Builder builder)
	        {
	            inviteResponse_ = builder.build();
	            bitField0_ = 0x10000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setInviteResponse(InviteResponse inviteresponse)
	        {
	            if(inviteresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                inviteResponse_ = inviteresponse;
	                bitField0_ = 0x10000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setLeaveConversationResponse(LeaveConversationResponse.Builder builder)
	        {
	            leaveConversationResponse_ = builder.build();
	            bitField0_ = 0x1000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setLeaveConversationResponse(LeaveConversationResponse leaveconversationresponse)
	        {
	            if(leaveconversationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                leaveConversationResponse_ = leaveconversationresponse;
	                bitField0_ = 0x1000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setPingResponse(PingResponse.Builder builder)
	        {
	            pingResponse_ = builder.build();
	            bitField0_ = 0x100 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setPingResponse(PingResponse pingresponse)
	        {
	            if(pingresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                pingResponse_ = pingresponse;
	                bitField0_ = 0x100 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setPresenceResponse(PresenceResponse.Builder builder)
	        {
	            presenceResponse_ = builder.build();
	            bitField0_ = 4 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setPresenceResponse(PresenceResponse presenceresponse)
	        {
	            if(presenceresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                presenceResponse_ = presenceresponse;
	                bitField0_ = 4 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setReceiptResponse(ReceiptResponse.Builder builder)
	        {
	            receiptResponse_ = builder.build();
	            bitField0_ = 0x10 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setReceiptResponse(ReceiptResponse receiptresponse)
	        {
	            if(receiptresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                receiptResponse_ = receiptresponse;
	                bitField0_ = 0x10 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setReplyToInviteResponse(ReplyToInviteResponse.Builder builder)
	        {
	            replyToInviteResponse_ = builder.build();
	            bitField0_ = 0x20000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setReplyToInviteResponse(ReplyToInviteResponse replytoinviteresponse)
	        {
	            if(replytoinviteresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                replyToInviteResponse_ = replytoinviteresponse;
	                bitField0_ = 0x20000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setRequestClientId(String s)
	        {
	            if(s == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                bitField0_ = 1 | bitField0_;
	                requestClientId_ = s;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setSetAclsResponse(SetAclsResponse.Builder builder)
	        {
	            setAclsResponse_ = builder.build();
	            bitField0_ = 0x40000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setSetAclsResponse(SetAclsResponse setaclsresponse)
	        {
	            if(setaclsresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                setAclsResponse_ = setaclsresponse;
	                bitField0_ = 0x40000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setSuggestionsResponse(SuggestionsResponse.Builder builder)
	        {
	            suggestionsResponse_ = builder.build();
	            bitField0_ = 0x400000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setSuggestionsResponse(SuggestionsResponse suggestionsresponse)
	        {
	            if(suggestionsresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                suggestionsResponse_ = suggestionsresponse;
	                bitField0_ = 0x400000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setTileEventResponse(TileEventResponse.Builder builder)
	        {
	            tileEventResponse_ = builder.build();
	            bitField0_ = 0x4000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setTileEventResponse(TileEventResponse tileeventresponse)
	        {
	            if(tileeventresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                tileEventResponse_ = tileeventresponse;
	                bitField0_ = 0x4000 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setTypingResponse(TypingResponse.Builder builder)
	        {
	            typingResponse_ = builder.build();
	            bitField0_ = 8 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setTypingResponse(TypingResponse typingresponse)
	        {
	            if(typingresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                typingResponse_ = typingresponse;
	                bitField0_ = 8 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setUserCreationResponse(UserCreationResponse.Builder builder)
	        {
	            userCreationResponse_ = builder.build();
	            bitField0_ = 0x400 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setUserCreationResponse(UserCreationResponse usercreationresponse)
	        {
	            if(usercreationresponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userCreationResponse_ = usercreationresponse;
	                bitField0_ = 0x400 | bitField0_;
	                return this;
	            }
	        }
	
	        public final BunchServerResponse.Builder setUserInfoResponse(UserInfoResponse.Builder builder)
	        {
	            userInfoResponse_ = builder.build();
	            bitField0_ = 0x80000 | bitField0_;
	            return this;
	        }
	
	        public final BunchServerResponse.Builder setUserInfoResponse(UserInfoResponse userinforesponse)
	        {
	            if(userinforesponse == null)
	            {
	                throw new NullPointerException();
	            } else
	            {
	                userInfoResponse_ = userinforesponse;
	                bitField0_ = 0x80000 | bitField0_;
	                return this;
	            }
	        }
	    }
	}
}
